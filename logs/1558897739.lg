----------------------------------------
Starting experiment densenet_1-1558897740
Experiment parameters Experiment[name: densenet_1-1558897740, model: DenseNet(
  (features): Sequential(
    (conv0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (norm0): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu0): ReLU(inplace)
    (pool0): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (denseblock1): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(96, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (transition1): _Transition(
      (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock2): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer7): _DenseLayer(
        (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer8): _DenseLayer(
        (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer9): _DenseLayer(
        (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer10): _DenseLayer(
        (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer11): _DenseLayer(
        (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer12): _DenseLayer(
        (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (transition2): _Transition(
      (norm): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock3): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer7): _DenseLayer(
        (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer8): _DenseLayer(
        (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer9): _DenseLayer(
        (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer10): _DenseLayer(
        (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer11): _DenseLayer(
        (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer12): _DenseLayer(
        (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer13): _DenseLayer(
        (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer14): _DenseLayer(
        (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer15): _DenseLayer(
        (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer16): _DenseLayer(
        (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer17): _DenseLayer(
        (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer18): _DenseLayer(
        (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer19): _DenseLayer(
        (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer20): _DenseLayer(
        (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer21): _DenseLayer(
        (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer22): _DenseLayer(
        (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer23): _DenseLayer(
        (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer24): _DenseLayer(
        (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (transition3): _Transition(
      (norm): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock4): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer7): _DenseLayer(
        (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer8): _DenseLayer(
        (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer9): _DenseLayer(
        (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer10): _DenseLayer(
        (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer11): _DenseLayer(
        (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer12): _DenseLayer(
        (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer13): _DenseLayer(
        (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer14): _DenseLayer(
        (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer15): _DenseLayer(
        (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer16): _DenseLayer(
        (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (norm5): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (classifier): Linear(in_features=1024, out_features=1, bias=True)
), params: Params(lr: 1e-05, weight_decay: 0, batch_size: 32, num_epochs: 10), optimizer: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 1e-05
    weight_decay: 0
), criterion: BCEWithLogitsLoss()]
start metrics
eval metrics acc, f1
0.541595458984375, 0.6343031040779062
train metrics acc, f1
0.5077323913574219, 0.6009481135138646
Epoch 1/10
----------
eval metrics, batch: 1024 acc, f1
0.828155517578125, 0.8063151377566815
eval metrics, batch: 2048 acc, f1
0.86712646484375, 0.8573674900085173
eval metrics, batch: 3072 acc, f1
0.860504150390625, 0.8500672417751829
eval metrics, batch: 4096 acc, f1
0.871826171875, 0.8609547771965834
train metrics, batch: 4096  acc, f1 
0.9488372802734375, 0.9484657296333582
eval metrics, batch: 5120 acc, f1
0.876129150390625, 0.8644424406372107
eval metrics, batch: 6144 acc, f1
0.855560302734375, 0.8384586504658862
eval metrics, batch: 7168 acc, f1
0.88165283203125, 0.8723334211219383
Epoch loss - train: tensor(0.1923, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.3392, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.87591552734375, 0.8668979965955218
train metrics acc, f1 
0.9602203369140625, 0.9604319549528355
Epoch 2/10
----------
eval metrics, batch: 1024 acc, f1
0.85552978515625, 0.8380320240864924
eval metrics, batch: 2048 acc, f1
0.83685302734375, 0.8100213219616205
eval metrics, batch: 3072 acc, f1
0.87921142578125, 0.8711923978130696
eval metrics, batch: 4096 acc, f1
0.87213134765625, 0.8591975267155051
train metrics, batch: 4096  acc, f1 
0.9652938842773438, 0.9649769798130668
eval metrics, batch: 5120 acc, f1
0.872100830078125, 0.8583978105889111
eval metrics, batch: 6144 acc, f1
0.871490478515625, 0.8590554607222948
eval metrics, batch: 7168 acc, f1
0.8612060546875, 0.8448417030567685
Epoch loss - train: tensor(0.1217, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.3947, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.85986328125, 0.843586075345732
train metrics acc, f1 
0.9723167419433594, 0.97230881943305
Epoch 3/10
----------
eval metrics, batch: 1024 acc, f1
0.862457275390625, 0.8468413361878547
eval metrics, batch: 2048 acc, f1
0.898773193359375, 0.8951477793583057
eval metrics, batch: 3072 acc, f1
0.844085693359375, 0.8221905126509589
eval metrics, batch: 4096 acc, f1
0.883270263671875, 0.8753543845928243
train metrics, batch: 4096  acc, f1 
0.9711265563964844, 0.9713361685368154
eval metrics, batch: 5120 acc, f1
0.873016357421875, 0.8604393761529432
eval metrics, batch: 6144 acc, f1
0.83740234375, 0.8101752885848653
eval metrics, batch: 7168 acc, f1
0.83245849609375, 0.8046541417591802
Epoch loss - train: tensor(0.0939, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.3494, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.87957763671875, 0.8716497527972937
train metrics acc, f1 
0.9714622497558594, 0.9718071535437967
Epoch 4/10
----------
eval metrics, batch: 1024 acc, f1
0.8609619140625, 0.8435761862253657
eval metrics, batch: 2048 acc, f1
0.88543701171875, 0.8785506308637981
eval metrics, batch: 3072 acc, f1
0.884521484375, 0.8761699064074874
eval metrics, batch: 4096 acc, f1
0.899444580078125, 0.8934863423306934
train metrics, batch: 4096  acc, f1 
0.9800949096679688, 0.9801714572344921
eval metrics, batch: 5120 acc, f1
0.855255126953125, 0.8349514563106796
eval metrics, batch: 6144 acc, f1
0.881256103515625, 0.8708124439722434
eval metrics, batch: 7168 acc, f1
0.818206787109375, 0.7805812368779698
Epoch loss - train: tensor(0.0750, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.3745, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.88702392578125, 0.8771976381609501
train metrics acc, f1 
0.9848251342773438, 0.9848107645783059
Epoch 5/10
----------
eval metrics, batch: 1024 acc, f1
0.86260986328125, 0.8453771122406925
eval metrics, batch: 2048 acc, f1
0.866119384765625, 0.8499401402428596
eval metrics, batch: 3072 acc, f1
0.846282958984375, 0.8235788588841021
eval metrics, batch: 4096 acc, f1
0.870941162109375, 0.8578248445116826
train metrics, batch: 4096  acc, f1 
0.9831352233886719, 0.9831354163885149
eval metrics, batch: 5120 acc, f1
0.832183837890625, 0.8025989876871163
eval metrics, batch: 6144 acc, f1
0.861907958984375, 0.844688518963446
eval metrics, batch: 7168 acc, f1
0.8310546875, 0.8018327605956472
Epoch loss - train: tensor(0.0592, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.3923, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.87554931640625, 0.8629059369326968
train metrics acc, f1 
0.9893569946289062, 0.9893496816356446
Epoch 6/10
----------
eval metrics, batch: 1024 acc, f1
0.876953125, 0.8643611653098298
eval metrics, batch: 2048 acc, f1
0.86309814453125, 0.8462961693962859
eval metrics, batch: 3072 acc, f1
0.87261962890625, 0.8591767881241565
eval metrics, batch: 4096 acc, f1
0.880462646484375, 0.8701475219625394
train metrics, batch: 4096  acc, f1 
0.9873008728027344, 0.9873433121818244
eval metrics, batch: 5120 acc, f1
0.88677978515625, 0.8829061987122838
eval metrics, batch: 6144 acc, f1
0.883056640625, 0.8727671160103593
eval metrics, batch: 7168 acc, f1
0.8095703125, 0.7690428603153453
Epoch loss - train: tensor(0.0476, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.3920, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.889312744140625, 0.8839471410744568
train metrics acc, f1 
0.9820480346679688, 0.9822988211752138
Epoch 7/10
----------
eval metrics, batch: 1024 acc, f1
0.868438720703125, 0.8535118420605525
eval metrics, batch: 2048 acc, f1
0.85125732421875, 0.833810692853246
eval metrics, batch: 3072 acc, f1
0.869720458984375, 0.8558792748387968
eval metrics, batch: 4096 acc, f1
0.850555419921875, 0.8283741632495707
train metrics, batch: 4096  acc, f1 
0.9934654235839844, 0.9934435390344817
eval metrics, batch: 5120 acc, f1
0.8668212890625, 0.8517159361196058
eval metrics, batch: 6144 acc, f1
0.81646728515625, 0.7790108032630264
eval metrics, batch: 7168 acc, f1
0.847015380859375, 0.824812161453783
Epoch loss - train: tensor(0.0389, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.5696, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.86566162109375, 0.8495351380913317
train metrics acc, f1 
0.9946746826171875, 0.9946656069209547
Epoch 8/10
----------
eval metrics, batch: 1024 acc, f1
0.85028076171875, 0.8285454672537919
eval metrics, batch: 2048 acc, f1
0.85858154296875, 0.8402509652509652
eval metrics, batch: 3072 acc, f1
0.878662109375, 0.8671034160037435
eval metrics, batch: 4096 acc, f1
0.85333251953125, 0.8321810182275299
train metrics, batch: 4096  acc, f1 
0.9925003051757812, 0.9924635058881256
eval metrics, batch: 5120 acc, f1
0.891510009765625, 0.8838880360583989
eval metrics, batch: 6144 acc, f1
0.87091064453125, 0.8562300319488818
eval metrics, batch: 7168 acc, f1
0.88421630859375, 0.8737353567625133
Epoch loss - train: tensor(0.0320, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.6279, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.86383056640625, 0.8472127105875907
train metrics acc, f1 
0.9958076477050781, 0.9958047510526296
Epoch 9/10
----------
eval metrics, batch: 1024 acc, f1
0.869476318359375, 0.8548053094340904
eval metrics, batch: 2048 acc, f1
0.851043701171875, 0.8280187449349917
eval metrics, batch: 3072 acc, f1
0.85986328125, 0.8436286862357829
eval metrics, batch: 4096 acc, f1
0.8817138671875, 0.8731260229132569
train metrics, batch: 4096  acc, f1 
0.992218017578125, 0.9922586520947176
eval metrics, batch: 5120 acc, f1
0.87994384765625, 0.8685687558465855
eval metrics, batch: 6144 acc, f1
0.8387451171875, 0.8120108154262132
eval metrics, batch: 7168 acc, f1
0.88336181640625, 0.873326262760175
Epoch loss - train: tensor(0.0264, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.7254, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.84283447265625, 0.8194502874772122
train metrics acc, f1 
0.9938087463378906, 0.9938018659324125
Epoch 10/10
----------
eval metrics, batch: 1024 acc, f1
0.8656005859375, 0.85
eval metrics, batch: 2048 acc, f1
0.875244140625, 0.8640053226879574
eval metrics, batch: 3072 acc, f1
0.85223388671875, 0.8317815453029461
eval metrics, batch: 4096 acc, f1
0.8212890625, 0.787162898887839
train metrics, batch: 4096  acc, f1 
0.9953079223632812, 0.9952900271110635
eval metrics, batch: 5120 acc, f1
0.845611572265625, 0.8205582946121378
eval metrics, batch: 6144 acc, f1
0.8370361328125, 0.8098155139254932
eval metrics, batch: 7168 acc, f1
0.8812255859375, 0.8710489695845206
Epoch loss - train: tensor(0.0233, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.6737, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.875823974609375, 0.8643711876270791
train metrics acc, f1 
0.99609375, 0.9960994042449453
Training time 231m 43s
train_acc
0.5077323913574219	0.9488372802734375	0.9602203369140625	0.9652938842773438	0.9723167419433594	0.9711265563964844	0.9714622497558594	0.9800949096679688	0.9848251342773438	0.9831352233886719	0.9893569946289062	0.9873008728027344	0.9820480346679688	0.9934654235839844	0.9946746826171875	0.9925003051757812	0.9958076477050781	0.992218017578125	0.9938087463378906	0.9953079223632812	0.99609375
train_f1
0.6009481135138646	0.9484657296333582	0.9604319549528355	0.9649769798130668	0.97230881943305	0.9713361685368154	0.9718071535437967	0.9801714572344921	0.9848107645783059	0.9831354163885149	0.9893496816356446	0.9873433121818244	0.9822988211752138	0.9934435390344817	0.9946656069209547	0.9924635058881256	0.9958047510526296	0.9922586520947176	0.9938018659324125	0.9952900271110635	0.9960994042449453
train_loss
tensor(0.1923, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.1217, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.0939, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.0750, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.0592, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.0476, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.0389, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.0320, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.0264, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.0233, device='cuda:0', grad_fn=<DivBackward0>)
valid_acc
0.541595458984375	0.828155517578125	0.86712646484375	0.860504150390625	0.871826171875	0.876129150390625	0.855560302734375	0.88165283203125	0.87591552734375	0.85552978515625	0.83685302734375	0.87921142578125	0.87213134765625	0.872100830078125	0.871490478515625	0.8612060546875	0.85986328125	0.862457275390625	0.898773193359375	0.844085693359375	0.883270263671875	0.873016357421875	0.83740234375	0.83245849609375	0.87957763671875	0.8609619140625	0.88543701171875	0.884521484375	0.899444580078125	0.855255126953125	0.881256103515625	0.818206787109375	0.88702392578125	0.86260986328125	0.866119384765625	0.846282958984375	0.870941162109375	0.832183837890625	0.861907958984375	0.8310546875	0.87554931640625	0.876953125	0.86309814453125	0.87261962890625	0.880462646484375	0.88677978515625	0.883056640625	0.8095703125	0.889312744140625	0.868438720703125	0.85125732421875	0.869720458984375	0.850555419921875	0.8668212890625	0.81646728515625	0.847015380859375	0.86566162109375	0.85028076171875	0.85858154296875	0.878662109375	0.85333251953125	0.891510009765625	0.87091064453125	0.88421630859375	0.86383056640625	0.869476318359375	0.851043701171875	0.85986328125	0.8817138671875	0.87994384765625	0.8387451171875	0.88336181640625	0.84283447265625	0.8656005859375	0.875244140625	0.85223388671875	0.8212890625	0.845611572265625	0.8370361328125	0.8812255859375	0.875823974609375
valid_f1
0.6343031040779062	0.8063151377566815	0.8573674900085173	0.8500672417751829	0.8609547771965834	0.8644424406372107	0.8384586504658862	0.8723334211219383	0.8668979965955218	0.8380320240864924	0.8100213219616205	0.8711923978130696	0.8591975267155051	0.8583978105889111	0.8590554607222948	0.8448417030567685	0.843586075345732	0.8468413361878547	0.8951477793583057	0.8221905126509589	0.8753543845928243	0.8604393761529432	0.8101752885848653	0.8046541417591802	0.8716497527972937	0.8435761862253657	0.8785506308637981	0.8761699064074874	0.8934863423306934	0.8349514563106796	0.8708124439722434	0.7805812368779698	0.8771976381609501	0.8453771122406925	0.8499401402428596	0.8235788588841021	0.8578248445116826	0.8025989876871163	0.844688518963446	0.8018327605956472	0.8629059369326968	0.8643611653098298	0.8462961693962859	0.8591767881241565	0.8701475219625394	0.8829061987122838	0.8727671160103593	0.7690428603153453	0.8839471410744568	0.8535118420605525	0.833810692853246	0.8558792748387968	0.8283741632495707	0.8517159361196058	0.7790108032630264	0.824812161453783	0.8495351380913317	0.8285454672537919	0.8402509652509652	0.8671034160037435	0.8321810182275299	0.8838880360583989	0.8562300319488818	0.8737353567625133	0.8472127105875907	0.8548053094340904	0.8280187449349917	0.8436286862357829	0.8731260229132569	0.8685687558465855	0.8120108154262132	0.873326262760175	0.8194502874772122	0.85	0.8640053226879574	0.8317815453029461	0.787162898887839	0.8205582946121378	0.8098155139254932	0.8710489695845206	0.8643711876270791
valid_loss
tensor(0.3392, device='cuda:0')	tensor(0.3947, device='cuda:0')	tensor(0.3494, device='cuda:0')	tensor(0.3745, device='cuda:0')	tensor(0.3923, device='cuda:0')	tensor(0.3920, device='cuda:0')	tensor(0.5696, device='cuda:0')	tensor(0.6279, device='cuda:0')	tensor(0.7254, device='cuda:0')	tensor(0.6737, device='cuda:0')
Best model metrics: train, valid, test: acc, f1
0.9820480346679688, 0.9822988211752138
0.889312744140625, 0.8839471410744568
0.855499267578125, 0.8407600470825627
Model saved, path ./models/densenet_1-1558897740.pth
experiment validation
train set
Evaluation results
[[126862.   4210.]
 [   496. 130576.]]
#############################
Accuracy
0.9820480346679688
------------------------
Recall
0.9962158203125
------------------------
Specificity
0.9678802490234375
------------------------
Precision
0.9687653020343359
------------------------
Fall_out
0.0321197509765625
------------------------
F1
0.9822988211752138
------------------------
#############################
valid set
Evaluation results
[[15328.  1071.]
 [ 2556. 13813.]]
#############################
Accuracy
0.889312744140625
------------------------
Recall
0.8438511821125297
------------------------
Specificity
0.9346911397036405
------------------------
Precision
0.9280435366836872
------------------------
Fall_out
0.06530886029635953
------------------------
F1
0.8839471410744568
------------------------
#############################
test set
Evaluation results
[[15533.   858.]
 [ 3877. 12500.]]
#############################
Accuracy
0.855499267578125
------------------------
Recall
0.7632655553520181
------------------------
Specificity
0.9476542004758709
------------------------
Precision
0.9357688276688126
------------------------
Fall_out
0.05234579952412909
------------------------
F1
0.8407600470825627
------------------------
#############################
AUC: 0.9353712008639754
Experiment end
########################################
----------------------------------------
Starting experiment densenet_2-1558897740
Experiment parameters Experiment[name: densenet_2-1558897740, model: DenseNet(
  (features): Sequential(
    (conv0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (norm0): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu0): ReLU(inplace)
    (pool0): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (denseblock1): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(96, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (transition1): _Transition(
      (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock2): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer7): _DenseLayer(
        (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer8): _DenseLayer(
        (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer9): _DenseLayer(
        (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer10): _DenseLayer(
        (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer11): _DenseLayer(
        (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer12): _DenseLayer(
        (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (transition2): _Transition(
      (norm): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock3): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer7): _DenseLayer(
        (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer8): _DenseLayer(
        (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer9): _DenseLayer(
        (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer10): _DenseLayer(
        (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer11): _DenseLayer(
        (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer12): _DenseLayer(
        (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer13): _DenseLayer(
        (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer14): _DenseLayer(
        (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer15): _DenseLayer(
        (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer16): _DenseLayer(
        (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer17): _DenseLayer(
        (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer18): _DenseLayer(
        (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer19): _DenseLayer(
        (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer20): _DenseLayer(
        (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer21): _DenseLayer(
        (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer22): _DenseLayer(
        (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer23): _DenseLayer(
        (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer24): _DenseLayer(
        (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (transition3): _Transition(
      (norm): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock4): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer7): _DenseLayer(
        (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer8): _DenseLayer(
        (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer9): _DenseLayer(
        (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer10): _DenseLayer(
        (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer11): _DenseLayer(
        (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer12): _DenseLayer(
        (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer13): _DenseLayer(
        (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer14): _DenseLayer(
        (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer15): _DenseLayer(
        (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer16): _DenseLayer(
        (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (norm5): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (classifier): Linear(in_features=1024, out_features=1, bias=True)
), params: Params(lr: 0.001, weight_decay: 0, batch_size: 32, num_epochs: 10), optimizer: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.001
    weight_decay: 0
), criterion: BCEWithLogitsLoss()]
start metrics
eval metrics acc, f1
0.542144775390625, 0.6683467073413356
train metrics acc, f1
0.5203018188476562, 0.6464856598278392
Epoch 1/10
----------
eval metrics, batch: 1024 acc, f1
0.838775634765625, 0.8222708158116064
eval metrics, batch: 2048 acc, f1
0.760772705078125, 0.7351062751326327
eval metrics, batch: 3072 acc, f1
0.806243896484375, 0.8217824561403508
eval metrics, batch: 4096 acc, f1
0.798431396484375, 0.7829230617543629
train metrics, batch: 4096  acc, f1 
0.8483772277832031, 0.845317735514226
eval metrics, batch: 5120 acc, f1
0.82037353515625, 0.8212680675330986
eval metrics, batch: 6144 acc, f1
0.8079833984375, 0.8206998746152969
eval metrics, batch: 7168 acc, f1
0.816131591796875, 0.8063510429723909
Epoch loss - train: tensor(0.3833, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.3750, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.831512451171875, 0.8356013459190662
train metrics acc, f1 
0.8672599792480469, 0.8752397718268552
Epoch 2/10
----------
eval metrics, batch: 1024 acc, f1
0.82147216796875, 0.8421734203852588
eval metrics, batch: 2048 acc, f1
0.817718505859375, 0.8263612314311463
eval metrics, batch: 3072 acc, f1
0.80511474609375, 0.8248491497531542
eval metrics, batch: 4096 acc, f1
0.842193603515625, 0.847115867900541
train metrics, batch: 4096  acc, f1 
0.8755073547363281, 0.8837863534874777
eval metrics, batch: 5120 acc, f1
0.85125732421875, 0.8578760132967866
eval metrics, batch: 6144 acc, f1
0.850677490234375, 0.8394527020376021
eval metrics, batch: 7168 acc, f1
0.870513916015625, 0.8678316668224153
Epoch loss - train: tensor(0.3061, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.3064, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.86871337890625, 0.8668441252940449
train metrics acc, f1 
0.909088134765625, 0.9118560819007604
Epoch 3/10
----------
eval metrics, batch: 1024 acc, f1
0.845062255859375, 0.8257183069582232
eval metrics, batch: 2048 acc, f1
0.829559326171875, 0.802893947414858
eval metrics, batch: 3072 acc, f1
0.842529296875, 0.8296242488278412
eval metrics, batch: 4096 acc, f1
0.847320556640625, 0.8321760424004562
train metrics, batch: 4096  acc, f1 
0.9213600158691406, 0.9200035700565389
eval metrics, batch: 5120 acc, f1
0.846405029296875, 0.8283716965046888
eval metrics, batch: 6144 acc, f1
0.868499755859375, 0.8617270481019157
eval metrics, batch: 7168 acc, f1
0.846282958984375, 0.8275177207821114
Epoch loss - train: tensor(0.2277, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.2931, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.881011962890625, 0.8739778273376644
train metrics acc, f1 
0.9358177185058594, 0.9358629812182412
Epoch 4/10
----------
eval metrics, batch: 1024 acc, f1
0.87152099609375, 0.8601143009037746
eval metrics, batch: 2048 acc, f1
0.890106201171875, 0.8890053324291834
eval metrics, batch: 3072 acc, f1
0.88629150390625, 0.8876018099547511
eval metrics, batch: 4096 acc, f1
0.866424560546875, 0.8536658754304437
train metrics, batch: 4096  acc, f1 
0.9390106201171875, 0.9378947613757312
eval metrics, batch: 5120 acc, f1
0.815521240234375, 0.7799177194451523
eval metrics, batch: 6144 acc, f1
0.845611572265625, 0.8237834825316103
eval metrics, batch: 7168 acc, f1
0.82891845703125, 0.7992120343839542
Epoch loss - train: tensor(0.1908, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.3237, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.87109375, 0.8598447143141549
train metrics acc, f1 
0.9439964294433594, 0.9434961493016399
Epoch 5/10
----------
eval metrics, batch: 1024 acc, f1
0.87042236328125, 0.8668046928916494
eval metrics, batch: 2048 acc, f1
0.830780029296875, 0.8025073903907113
eval metrics, batch: 3072 acc, f1
0.83258056640625, 0.8038612799427959
eval metrics, batch: 4096 acc, f1
0.8875732421875, 0.8892496392496393
train metrics, batch: 4096  acc, f1 
0.9220542907714844, 0.9256730457936684
eval metrics, batch: 5120 acc, f1
0.836151123046875, 0.8116602939628863
eval metrics, batch: 6144 acc, f1
0.875, 0.8637119850934983
eval metrics, batch: 7168 acc, f1
0.84991455078125, 0.8327893376852985
Epoch loss - train: tensor(0.1682, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.2948, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.882354736328125, 0.8751497878679924
train metrics acc, f1 
0.9482841491699219, 0.948569997837641
Epoch 6/10
----------
eval metrics, batch: 1024 acc, f1
0.879547119140625, 0.8712024800130527
eval metrics, batch: 2048 acc, f1
0.88140869140625, 0.8819347390168317
eval metrics, batch: 3072 acc, f1
0.885650634765625, 0.885737809898454
eval metrics, batch: 4096 acc, f1
0.879150390625, 0.8716868641047243
train metrics, batch: 4096  acc, f1 
0.9489669799804688, 0.9490652960213212
eval metrics, batch: 5120 acc, f1
0.843719482421875, 0.8209252718816659
eval metrics, batch: 6144 acc, f1
0.871795654296875, 0.8615131036756222
eval metrics, batch: 7168 acc, f1
0.887603759765625, 0.8850248181562763
Epoch loss - train: tensor(0.1530, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.3218, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.8675537109375, 0.8552561366061899
train metrics acc, f1 
0.9519729614257812, 0.9516568751679914
Epoch 7/10
----------
eval metrics, batch: 1024 acc, f1
0.8570556640625, 0.8369988864142539
eval metrics, batch: 2048 acc, f1
0.871368408203125, 0.86493414938956
eval metrics, batch: 3072 acc, f1
0.85760498046875, 0.8408594815825375
eval metrics, batch: 4096 acc, f1
0.878143310546875, 0.8706385460200213
train metrics, batch: 4096  acc, f1 
0.9511375427246094, 0.9514889620251247
eval metrics, batch: 5120 acc, f1
0.868255615234375, 0.8558742029179047
eval metrics, batch: 6144 acc, f1
0.88873291015625, 0.8859270383580502
eval metrics, batch: 7168 acc, f1
0.86114501953125, 0.8459819917405728
Epoch loss - train: tensor(0.1416, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.2845, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.887542724609375, 0.8807095917904891
train metrics acc, f1 
0.9589996337890625, 0.9591951404707669
Epoch 8/10
----------
eval metrics, batch: 1024 acc, f1
0.874053955078125, 0.8627672663186247
eval metrics, batch: 2048 acc, f1
0.88238525390625, 0.8835649546827794
eval metrics, batch: 3072 acc, f1
0.872711181640625, 0.8596237337192475
eval metrics, batch: 4096 acc, f1
0.88671875, 0.87933164293609
train metrics, batch: 4096  acc, f1 
0.9583320617675781, 0.9585179952832875
eval metrics, batch: 5120 acc, f1
0.826324462890625, 0.7950592387194353
eval metrics, batch: 6144 acc, f1
0.881744384765625, 0.8729299885227086
eval metrics, batch: 7168 acc, f1
0.879425048828125, 0.8719577405450951
Epoch loss - train: tensor(0.1312, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.2798, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.887969970703125, 0.8809778555912201
train metrics acc, f1 
0.9630546569824219, 0.9632627669945264
Epoch 9/10
----------
eval metrics, batch: 1024 acc, f1
0.8919677734375, 0.8855332083036926
eval metrics, batch: 2048 acc, f1
0.85882568359375, 0.8413253755916855
eval metrics, batch: 3072 acc, f1
0.873199462890625, 0.8618637587685761
eval metrics, batch: 4096 acc, f1
0.861053466796875, 0.8461044448200101
train metrics, batch: 4096  acc, f1 
0.9601936340332031, 0.9598377344402492
eval metrics, batch: 5120 acc, f1
0.868560791015625, 0.8535382732002584
eval metrics, batch: 6144 acc, f1
0.884033203125, 0.8782675550999487
eval metrics, batch: 7168 acc, f1
0.845245361328125, 0.8219264669733469
Epoch loss - train: tensor(0.1230, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.3693, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.8643798828125, 0.8498344258971413
train metrics acc, f1 
0.9625320434570312, 0.962175942328132
Epoch 10/10
----------
eval metrics, batch: 1024 acc, f1
0.878509521484375, 0.8675868950607019
eval metrics, batch: 2048 acc, f1
0.874847412109375, 0.863459297486266
eval metrics, batch: 3072 acc, f1
0.8765869140625, 0.864758210153167
eval metrics, batch: 4096 acc, f1
0.823333740234375, 0.7933459465248277
train metrics, batch: 4096  acc, f1 
0.9495391845703125, 0.9482047065272721
eval metrics, batch: 5120 acc, f1
0.850494384765625, 0.8308297938464726
eval metrics, batch: 6144 acc, f1
0.8896484375, 0.8864036189997487
eval metrics, batch: 7168 acc, f1
0.882293701171875, 0.8753111563702195
Epoch loss - train: tensor(0.1159, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.9329, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.71728515625, 0.6101010101010101
train metrics acc, f1 
0.9050369262695312, 0.8957144652507226
Training time 231m 57s
train_acc
0.5203018188476562	0.8483772277832031	0.8672599792480469	0.8755073547363281	0.909088134765625	0.9213600158691406	0.9358177185058594	0.9390106201171875	0.9439964294433594	0.9220542907714844	0.9482841491699219	0.9489669799804688	0.9519729614257812	0.9511375427246094	0.9589996337890625	0.9583320617675781	0.9630546569824219	0.9601936340332031	0.9625320434570312	0.9495391845703125	0.9050369262695312
train_f1
0.6464856598278392	0.845317735514226	0.8752397718268552	0.8837863534874777	0.9118560819007604	0.9200035700565389	0.9358629812182412	0.9378947613757312	0.9434961493016399	0.9256730457936684	0.948569997837641	0.9490652960213212	0.9516568751679914	0.9514889620251247	0.9591951404707669	0.9585179952832875	0.9632627669945264	0.9598377344402492	0.962175942328132	0.9482047065272721	0.8957144652507226
train_loss
tensor(0.3833, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.3061, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.2277, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.1908, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.1682, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.1530, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.1416, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.1312, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.1230, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.1159, device='cuda:0', grad_fn=<DivBackward0>)
valid_acc
0.542144775390625	0.838775634765625	0.760772705078125	0.806243896484375	0.798431396484375	0.82037353515625	0.8079833984375	0.816131591796875	0.831512451171875	0.82147216796875	0.817718505859375	0.80511474609375	0.842193603515625	0.85125732421875	0.850677490234375	0.870513916015625	0.86871337890625	0.845062255859375	0.829559326171875	0.842529296875	0.847320556640625	0.846405029296875	0.868499755859375	0.846282958984375	0.881011962890625	0.87152099609375	0.890106201171875	0.88629150390625	0.866424560546875	0.815521240234375	0.845611572265625	0.82891845703125	0.87109375	0.87042236328125	0.830780029296875	0.83258056640625	0.8875732421875	0.836151123046875	0.875	0.84991455078125	0.882354736328125	0.879547119140625	0.88140869140625	0.885650634765625	0.879150390625	0.843719482421875	0.871795654296875	0.887603759765625	0.8675537109375	0.8570556640625	0.871368408203125	0.85760498046875	0.878143310546875	0.868255615234375	0.88873291015625	0.86114501953125	0.887542724609375	0.874053955078125	0.88238525390625	0.872711181640625	0.88671875	0.826324462890625	0.881744384765625	0.879425048828125	0.887969970703125	0.8919677734375	0.85882568359375	0.873199462890625	0.861053466796875	0.868560791015625	0.884033203125	0.845245361328125	0.8643798828125	0.878509521484375	0.874847412109375	0.8765869140625	0.823333740234375	0.850494384765625	0.8896484375	0.882293701171875	0.71728515625
valid_f1
0.6683467073413356	0.8222708158116064	0.7351062751326327	0.8217824561403508	0.7829230617543629	0.8212680675330986	0.8206998746152969	0.8063510429723909	0.8356013459190662	0.8421734203852588	0.8263612314311463	0.8248491497531542	0.847115867900541	0.8578760132967866	0.8394527020376021	0.8678316668224153	0.8668441252940449	0.8257183069582232	0.802893947414858	0.8296242488278412	0.8321760424004562	0.8283716965046888	0.8617270481019157	0.8275177207821114	0.8739778273376644	0.8601143009037746	0.8890053324291834	0.8876018099547511	0.8536658754304437	0.7799177194451523	0.8237834825316103	0.7992120343839542	0.8598447143141549	0.8668046928916494	0.8025073903907113	0.8038612799427959	0.8892496392496393	0.8116602939628863	0.8637119850934983	0.8327893376852985	0.8751497878679924	0.8712024800130527	0.8819347390168317	0.885737809898454	0.8716868641047243	0.8209252718816659	0.8615131036756222	0.8850248181562763	0.8552561366061899	0.8369988864142539	0.86493414938956	0.8408594815825375	0.8706385460200213	0.8558742029179047	0.8859270383580502	0.8459819917405728	0.8807095917904891	0.8627672663186247	0.8835649546827794	0.8596237337192475	0.87933164293609	0.7950592387194353	0.8729299885227086	0.8719577405450951	0.8809778555912201	0.8855332083036926	0.8413253755916855	0.8618637587685761	0.8461044448200101	0.8535382732002584	0.8782675550999487	0.8219264669733469	0.8498344258971413	0.8675868950607019	0.863459297486266	0.864758210153167	0.7933459465248277	0.8308297938464726	0.8864036189997487	0.8753111563702195	0.6101010101010101
valid_loss
tensor(0.3750, device='cuda:0')	tensor(0.3064, device='cuda:0')	tensor(0.2931, device='cuda:0')	tensor(0.3237, device='cuda:0')	tensor(0.2948, device='cuda:0')	tensor(0.3218, device='cuda:0')	tensor(0.2845, device='cuda:0')	tensor(0.2798, device='cuda:0')	tensor(0.3693, device='cuda:0')	tensor(0.9329, device='cuda:0')
Best model metrics: train, valid, test: acc, f1
0.9630546569824219, 0.9632627669945264
0.887969970703125, 0.8809778555912201
0.8150634765625, 0.7857900318133616
Model saved, path ./models/densenet_2-1558897740.pth
experiment validation
train set
Evaluation results
[[125487.   5585.]
 [  4100. 126972.]]
#############################
Accuracy
0.9630546569824219
------------------------
Recall
0.968719482421875
------------------------
Specificity
0.9573898315429688
------------------------
Precision
0.9578671816652459
------------------------
Fall_out
0.04261016845703125
------------------------
F1
0.9632627669945264
------------------------
#############################
valid set
Evaluation results
[[15511.   888.]
 [ 2783. 13586.]]
#############################
Accuracy
0.887969970703125
------------------------
Recall
0.8299835054065612
------------------------
Specificity
0.9458503567290688
------------------------
Precision
0.9386486113030261
------------------------
Fall_out
0.05414964327093116
------------------------
F1
0.8809778555912201
------------------------
#############################
test set
Evaluation results
[[15593.   798.]
 [ 5262. 11115.]]
#############################
Accuracy
0.8150634765625
------------------------
Recall
0.6786957318190144
------------------------
Specificity
0.9513147458971387
------------------------
Precision
0.9330143540669856
------------------------
Fall_out
0.04868525410286133
------------------------
F1
0.7857900318133616
------------------------
#############################
AUC: 0.9088466578479343
Experiment end
########################################
----------------------------------------
Starting experiment densenet_3-1558897740
Experiment parameters Experiment[name: densenet_3-1558897740, model: DenseNet(
  (features): Sequential(
    (conv0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (norm0): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu0): ReLU(inplace)
    (pool0): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (denseblock1): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(96, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (transition1): _Transition(
      (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock2): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer7): _DenseLayer(
        (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer8): _DenseLayer(
        (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer9): _DenseLayer(
        (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer10): _DenseLayer(
        (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer11): _DenseLayer(
        (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer12): _DenseLayer(
        (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (transition2): _Transition(
      (norm): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock3): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer7): _DenseLayer(
        (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer8): _DenseLayer(
        (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer9): _DenseLayer(
        (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer10): _DenseLayer(
        (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer11): _DenseLayer(
        (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer12): _DenseLayer(
        (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer13): _DenseLayer(
        (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer14): _DenseLayer(
        (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer15): _DenseLayer(
        (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer16): _DenseLayer(
        (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer17): _DenseLayer(
        (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer18): _DenseLayer(
        (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer19): _DenseLayer(
        (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer20): _DenseLayer(
        (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer21): _DenseLayer(
        (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer22): _DenseLayer(
        (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer23): _DenseLayer(
        (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer24): _DenseLayer(
        (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (transition3): _Transition(
      (norm): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock4): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer7): _DenseLayer(
        (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer8): _DenseLayer(
        (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer9): _DenseLayer(
        (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer10): _DenseLayer(
        (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer11): _DenseLayer(
        (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer12): _DenseLayer(
        (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer13): _DenseLayer(
        (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer14): _DenseLayer(
        (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer15): _DenseLayer(
        (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer16): _DenseLayer(
        (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (norm5): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (classifier): Linear(in_features=1024, out_features=1, bias=True)
), params: Params(lr: 0.0001, weight_decay: 0, batch_size: 32, num_epochs: 10), optimizer: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.0001
    weight_decay: 0
), criterion: BCEWithLogitsLoss()]
start metrics
eval metrics acc, f1
0.53106689453125, 0.5336570561456753
train metrics acc, f1
0.5134620666503906, 0.5157066969421967
Epoch 1/10
----------
eval metrics, batch: 1024 acc, f1
0.86865234375, 0.8559957173447538
eval metrics, batch: 2048 acc, f1
0.89056396484375, 0.8917531997102149
eval metrics, batch: 3072 acc, f1
0.859954833984375, 0.8436083563371162
eval metrics, batch: 4096 acc, f1
0.891357421875, 0.8872490023437005
train metrics, batch: 4096  acc, f1 
0.9479904174804688, 0.9489294436703076
eval metrics, batch: 5120 acc, f1
0.88104248046875, 0.8716834551320034
eval metrics, batch: 6144 acc, f1
0.893157958984375, 0.888804192472606
eval metrics, batch: 7168 acc, f1
0.8795166015625, 0.8678980124472997
Epoch loss - train: tensor(0.1771, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.5003, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.8372802734375, 0.8098430813124109
train metrics acc, f1 
0.9525337219238281, 0.9509130573713258
Epoch 2/10
----------
eval metrics, batch: 1024 acc, f1
0.8701171875, 0.8551099611901681
eval metrics, batch: 2048 acc, f1
0.88525390625, 0.8762750904902928
eval metrics, batch: 3072 acc, f1
0.86676025390625, 0.8528777463269982
eval metrics, batch: 4096 acc, f1
0.903411865234375, 0.8993032356590627
train metrics, batch: 4096  acc, f1 
0.964569091796875, 0.9649374476213486
eval metrics, batch: 5120 acc, f1
0.88818359375, 0.8800261951538966
eval metrics, batch: 6144 acc, f1
0.8818359375, 0.8735714752171357
eval metrics, batch: 7168 acc, f1
0.882354736328125, 0.8775685203417284
Epoch loss - train: tensor(0.1227, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4928, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.81732177734375, 0.7833827893175074
train metrics acc, f1 
0.9647979736328125, 0.9642014772515672
Epoch 3/10
----------
eval metrics, batch: 1024 acc, f1
0.872833251953125, 0.8613080379430854
eval metrics, batch: 2048 acc, f1
0.838348388671875, 0.8100821053386397
eval metrics, batch: 3072 acc, f1
0.844879150390625, 0.8197453810418809
eval metrics, batch: 4096 acc, f1
0.8167724609375, 0.7827471414097554
train metrics, batch: 4096  acc, f1 
0.9636344909667969, 0.9631351196668123
eval metrics, batch: 5120 acc, f1
0.851837158203125, 0.8285724374139332
eval metrics, batch: 6144 acc, f1
0.89349365234375, 0.8856862102849656
eval metrics, batch: 7168 acc, f1
0.88812255859375, 0.8781493053247358
Epoch loss - train: tensor(0.1008, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.3519, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.88018798828125, 0.8690984262469992
train metrics acc, f1 
0.977447509765625, 0.9774959270368622
Epoch 4/10
----------
eval metrics, batch: 1024 acc, f1
0.87908935546875, 0.8683020874883659
eval metrics, batch: 2048 acc, f1
0.841796875, 0.8150816865235072
eval metrics, batch: 3072 acc, f1
0.86669921875, 0.851175468483816
eval metrics, batch: 4096 acc, f1
0.8804931640625, 0.868440502586844
train metrics, batch: 4096  acc, f1 
0.9787635803222656, 0.9786625680808576
eval metrics, batch: 5120 acc, f1
0.8896484375, 0.8820074397963845
eval metrics, batch: 6144 acc, f1
0.87982177734375, 0.8677991137370753
eval metrics, batch: 7168 acc, f1
0.85894775390625, 0.8390332242111862
Epoch loss - train: tensor(0.0849, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.2890, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.901153564453125, 0.8947522339561332
train metrics acc, f1 
0.97894287109375, 0.9789914367269268
Epoch 5/10
----------
eval metrics, batch: 1024 acc, f1
0.861053466796875, 0.8425493654251824
eval metrics, batch: 2048 acc, f1
0.849761962890625, 0.8271600603868975
eval metrics, batch: 3072 acc, f1
0.869049072265625, 0.8541022066573731
eval metrics, batch: 4096 acc, f1
0.839691162109375, 0.8116326603793882
train metrics, batch: 4096  acc, f1 
0.9749183654785156, 0.9743857448391658
eval metrics, batch: 5120 acc, f1
0.87115478515625, 0.8553416021380114
eval metrics, batch: 6144 acc, f1
0.856292724609375, 0.8351248205595042
eval metrics, batch: 7168 acc, f1
0.899658203125, 0.8988058599039763
Epoch loss - train: tensor(0.0735, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4760, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.85498046875, 0.8342402678945166
train metrics acc, f1 
0.9837379455566406, 0.9836269573333026
Epoch 6/10
----------
eval metrics, batch: 1024 acc, f1
0.8641357421875, 0.848807987502547
eval metrics, batch: 2048 acc, f1
0.8756103515625, 0.8641061545642462
eval metrics, batch: 3072 acc, f1
0.894866943359375, 0.890115147842174
eval metrics, batch: 4096 acc, f1
0.898284912109375, 0.8927640680801776
train metrics, batch: 4096  acc, f1 
0.9803428649902344, 0.9804449875338218
eval metrics, batch: 5120 acc, f1
0.9013671875, 0.8969781971184496
eval metrics, batch: 6144 acc, f1
0.885711669921875, 0.8783498457040767
eval metrics, batch: 7168 acc, f1
0.85626220703125, 0.8351879067814403
Epoch loss - train: tensor(0.0644, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.6796, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.811431884765625, 0.7708680980457596
train metrics acc, f1 
0.9784355163574219, 0.9780460051341201
Epoch 7/10
----------
eval metrics, batch: 1024 acc, f1
0.863189697265625, 0.8491537400316296
eval metrics, batch: 2048 acc, f1
0.80718994140625, 0.7633353311357507
eval metrics, batch: 3072 acc, f1
0.898193359375, 0.8937647283612509
eval metrics, batch: 4096 acc, f1
0.8695068359375, 0.8554526401189912
train metrics, batch: 4096  acc, f1 
0.9856300354003906, 0.985646735175215
eval metrics, batch: 5120 acc, f1
0.897125244140625, 0.8912826136033799
eval metrics, batch: 6144 acc, f1
0.84088134765625, 0.8139982876712328
eval metrics, batch: 7168 acc, f1
0.8861083984375, 0.8778635947113497
Epoch loss - train: tensor(0.0568, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4885, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.881683349609375, 0.870960226327176
train metrics acc, f1 
0.9867362976074219, 0.9867470660207275
Epoch 8/10
----------
eval metrics, batch: 1024 acc, f1
0.864837646484375, 0.8482231589047668
eval metrics, batch: 2048 acc, f1
0.858001708984375, 0.8397120121258053
eval metrics, batch: 3072 acc, f1
0.81829833984375, 0.7820005858230814
eval metrics, batch: 4096 acc, f1
0.884796142578125, 0.8731220381138036
train metrics, batch: 4096  acc, f1 
0.9878387451171875, 0.9877753236394871
eval metrics, batch: 5120 acc, f1
0.888092041015625, 0.8804408072772326
eval metrics, batch: 6144 acc, f1
0.879638671875, 0.8716229412147647
eval metrics, batch: 7168 acc, f1
0.889892578125, 0.8811515910139008
Epoch loss - train: tensor(0.0503, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.5230, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.87310791015625, 0.8589169381107492
train metrics acc, f1 
0.9911651611328125, 0.9911544308051913
Epoch 9/10
----------
eval metrics, batch: 1024 acc, f1
0.8914794921875, 0.8823840709135411
eval metrics, batch: 2048 acc, f1
0.87994384765625, 0.8682606657290202
eval metrics, batch: 3072 acc, f1
0.8466796875, 0.8242865137101287
eval metrics, batch: 4096 acc, f1
0.87469482421875, 0.8609172820269629
train metrics, batch: 4096  acc, f1 
0.9885520935058594, 0.9885134023065058
eval metrics, batch: 5120 acc, f1
0.899078369140625, 0.8934154123827635
eval metrics, batch: 6144 acc, f1
0.88275146484375, 0.8706919763058697
eval metrics, batch: 7168 acc, f1
0.89373779296875, 0.8887042127469156
Epoch loss - train: tensor(0.0444, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.5060, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.8841552734375, 0.8737948001861826
train metrics acc, f1 
0.9907341003417969, 0.9907455032442174
Epoch 10/10
----------
eval metrics, batch: 1024 acc, f1
0.875518798828125, 0.8632905452961088
eval metrics, batch: 2048 acc, f1
0.876495361328125, 0.864689558326925
eval metrics, batch: 3072 acc, f1
0.8392333984375, 0.8133503401360545
eval metrics, batch: 4096 acc, f1
0.887176513671875, 0.8791790581391549
train metrics, batch: 4096  acc, f1 
0.9898223876953125, 0.9898836697859948
eval metrics, batch: 5120 acc, f1
0.8448486328125, 0.8198823779494083
eval metrics, batch: 6144 acc, f1
0.852447509765625, 0.8309499667843782
eval metrics, batch: 7168 acc, f1
0.8658447265625, 0.8494417425851085
Epoch loss - train: tensor(0.0396, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.5310, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.87603759765625, 0.8626124602584049
train metrics acc, f1 
0.9901199340820312, 0.9901204617062993
Training time 238m 50s
train_acc
0.5134620666503906	0.9479904174804688	0.9525337219238281	0.964569091796875	0.9647979736328125	0.9636344909667969	0.977447509765625	0.9787635803222656	0.97894287109375	0.9749183654785156	0.9837379455566406	0.9803428649902344	0.9784355163574219	0.9856300354003906	0.9867362976074219	0.9878387451171875	0.9911651611328125	0.9885520935058594	0.9907341003417969	0.9898223876953125	0.9901199340820312
train_f1
0.5157066969421967	0.9489294436703076	0.9509130573713258	0.9649374476213486	0.9642014772515672	0.9631351196668123	0.9774959270368622	0.9786625680808576	0.9789914367269268	0.9743857448391658	0.9836269573333026	0.9804449875338218	0.9780460051341201	0.985646735175215	0.9867470660207275	0.9877753236394871	0.9911544308051913	0.9885134023065058	0.9907455032442174	0.9898836697859948	0.9901204617062993
train_loss
tensor(0.1771, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.1227, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.1008, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.0849, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.0735, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.0644, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.0568, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.0503, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.0444, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.0396, device='cuda:0', grad_fn=<DivBackward0>)
valid_acc
0.53106689453125	0.86865234375	0.89056396484375	0.859954833984375	0.891357421875	0.88104248046875	0.893157958984375	0.8795166015625	0.8372802734375	0.8701171875	0.88525390625	0.86676025390625	0.903411865234375	0.88818359375	0.8818359375	0.882354736328125	0.81732177734375	0.872833251953125	0.838348388671875	0.844879150390625	0.8167724609375	0.851837158203125	0.89349365234375	0.88812255859375	0.88018798828125	0.87908935546875	0.841796875	0.86669921875	0.8804931640625	0.8896484375	0.87982177734375	0.85894775390625	0.901153564453125	0.861053466796875	0.849761962890625	0.869049072265625	0.839691162109375	0.87115478515625	0.856292724609375	0.899658203125	0.85498046875	0.8641357421875	0.8756103515625	0.894866943359375	0.898284912109375	0.9013671875	0.885711669921875	0.85626220703125	0.811431884765625	0.863189697265625	0.80718994140625	0.898193359375	0.8695068359375	0.897125244140625	0.84088134765625	0.8861083984375	0.881683349609375	0.864837646484375	0.858001708984375	0.81829833984375	0.884796142578125	0.888092041015625	0.879638671875	0.889892578125	0.87310791015625	0.8914794921875	0.87994384765625	0.8466796875	0.87469482421875	0.899078369140625	0.88275146484375	0.89373779296875	0.8841552734375	0.875518798828125	0.876495361328125	0.8392333984375	0.887176513671875	0.8448486328125	0.852447509765625	0.8658447265625	0.87603759765625
valid_f1
0.5336570561456753	0.8559957173447538	0.8917531997102149	0.8436083563371162	0.8872490023437005	0.8716834551320034	0.888804192472606	0.8678980124472997	0.8098430813124109	0.8551099611901681	0.8762750904902928	0.8528777463269982	0.8993032356590627	0.8800261951538966	0.8735714752171357	0.8775685203417284	0.7833827893175074	0.8613080379430854	0.8100821053386397	0.8197453810418809	0.7827471414097554	0.8285724374139332	0.8856862102849656	0.8781493053247358	0.8690984262469992	0.8683020874883659	0.8150816865235072	0.851175468483816	0.868440502586844	0.8820074397963845	0.8677991137370753	0.8390332242111862	0.8947522339561332	0.8425493654251824	0.8271600603868975	0.8541022066573731	0.8116326603793882	0.8553416021380114	0.8351248205595042	0.8988058599039763	0.8342402678945166	0.848807987502547	0.8641061545642462	0.890115147842174	0.8927640680801776	0.8969781971184496	0.8783498457040767	0.8351879067814403	0.7708680980457596	0.8491537400316296	0.7633353311357507	0.8937647283612509	0.8554526401189912	0.8912826136033799	0.8139982876712328	0.8778635947113497	0.870960226327176	0.8482231589047668	0.8397120121258053	0.7820005858230814	0.8731220381138036	0.8804408072772326	0.8716229412147647	0.8811515910139008	0.8589169381107492	0.8823840709135411	0.8682606657290202	0.8242865137101287	0.8609172820269629	0.8934154123827635	0.8706919763058697	0.8887042127469156	0.8737948001861826	0.8632905452961088	0.864689558326925	0.8133503401360545	0.8791790581391549	0.8198823779494083	0.8309499667843782	0.8494417425851085	0.8626124602584049
valid_loss
tensor(0.5003, device='cuda:0')	tensor(0.4928, device='cuda:0')	tensor(0.3519, device='cuda:0')	tensor(0.2890, device='cuda:0')	tensor(0.4760, device='cuda:0')	tensor(0.6796, device='cuda:0')	tensor(0.4885, device='cuda:0')	tensor(0.5230, device='cuda:0')	tensor(0.5060, device='cuda:0')	tensor(0.5310, device='cuda:0')
Best model metrics: train, valid, test: acc, f1
0.97894287109375, 0.9789914367269268
0.901153564453125, 0.8947522339561332
0.86700439453125, 0.8522210918955578
Model saved, path ./models/densenet_3-1558897740.pth
experiment validation
train set
Evaluation results
[[128009.   3063.]
 [  2457. 128615.]]
#############################
Accuracy
0.97894287109375
------------------------
Recall
0.9812545776367188
------------------------
Specificity
0.9766311645507812
------------------------
Precision
0.9767387110982853
------------------------
Fall_out
0.02336883544921875
------------------------
F1
0.9789914367269268
------------------------
#############################
valid set
Evaluation results
[[15761.   638.]
 [ 2601. 13768.]]
#############################
Accuracy
0.901153564453125
------------------------
Recall
0.8411020832060603
------------------------
Specificity
0.9610951887310202
------------------------
Precision
0.9557128974038595
------------------------
Fall_out
0.038904811268979815
------------------------
F1
0.8947522339561332
------------------------
#############################
test set
Evaluation results
[[15844.   547.]
 [ 3811. 12566.]]
#############################
Accuracy
0.86700439453125
------------------------
Recall
0.7672955974842768
------------------------
Specificity
0.9666280275761089
------------------------
Precision
0.9582856707084573
------------------------
Fall_out
0.03337197242389116
------------------------
F1
0.8522210918955578
------------------------
#############################
AUC: 0.9409463130174925
Experiment end
########################################
----------------------------------------
Starting experiment densenet_4-1558897740
Experiment parameters Experiment[name: densenet_4-1558897740, model: DenseNet(
  (features): Sequential(
    (conv0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (norm0): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu0): ReLU(inplace)
    (pool0): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (denseblock1): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(96, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (transition1): _Transition(
      (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock2): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer7): _DenseLayer(
        (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer8): _DenseLayer(
        (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer9): _DenseLayer(
        (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer10): _DenseLayer(
        (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer11): _DenseLayer(
        (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer12): _DenseLayer(
        (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (transition2): _Transition(
      (norm): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock3): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer7): _DenseLayer(
        (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer8): _DenseLayer(
        (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer9): _DenseLayer(
        (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer10): _DenseLayer(
        (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer11): _DenseLayer(
        (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer12): _DenseLayer(
        (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer13): _DenseLayer(
        (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer14): _DenseLayer(
        (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer15): _DenseLayer(
        (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer16): _DenseLayer(
        (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer17): _DenseLayer(
        (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer18): _DenseLayer(
        (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer19): _DenseLayer(
        (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer20): _DenseLayer(
        (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer21): _DenseLayer(
        (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer22): _DenseLayer(
        (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer23): _DenseLayer(
        (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer24): _DenseLayer(
        (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (transition3): _Transition(
      (norm): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock4): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer7): _DenseLayer(
        (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer8): _DenseLayer(
        (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer9): _DenseLayer(
        (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer10): _DenseLayer(
        (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer11): _DenseLayer(
        (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer12): _DenseLayer(
        (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer13): _DenseLayer(
        (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer14): _DenseLayer(
        (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer15): _DenseLayer(
        (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer16): _DenseLayer(
        (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (norm5): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (classifier): Linear(in_features=1024, out_features=1, bias=True)
), params: Params(lr: 1e-05, weight_decay: 0, batch_size: 32, num_epochs: 10), optimizer: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 1e-05
    weight_decay: 0
), criterion: BCEWithLogitsLoss()]
start metrics
eval metrics acc, f1
0.515289306640625, 0.2397932321830278
train metrics acc, f1
0.5296211242675781, 0.2742933148140519
Epoch 1/10
----------
eval metrics, batch: 1024 acc, f1
0.62530517578125, 0.6143844221105528
eval metrics, batch: 2048 acc, f1
0.69329833984375, 0.6925665341082899
eval metrics, batch: 3072 acc, f1
0.7305908203125, 0.7264332197087078
eval metrics, batch: 4096 acc, f1
0.75091552734375, 0.7435268979386627
train metrics, batch: 4096  acc, f1 
0.7538681030273438, 0.7515900515900515
eval metrics, batch: 5120 acc, f1
0.763763427734375, 0.7590800161837478
eval metrics, batch: 6144 acc, f1
0.7708740234375, 0.7651254457861478
eval metrics, batch: 7168 acc, f1
0.77386474609375, 0.7651198174210726
Epoch loss - train: tensor(0.5530, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4793, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.77935791015625, 0.7735813603908305
train metrics acc, f1 
0.78912353515625, 0.7896979380658906
Epoch 2/10
----------
eval metrics, batch: 1024 acc, f1
0.7802734375, 0.7738551416546265
eval metrics, batch: 2048 acc, f1
0.78143310546875, 0.7717218078663862
eval metrics, batch: 3072 acc, f1
0.78338623046875, 0.775223256697701
eval metrics, batch: 4096 acc, f1
0.784759521484375, 0.7760454704219986
train metrics, batch: 4096  acc, f1 
0.8007774353027344, 0.7993622620488292
eval metrics, batch: 5120 acc, f1
0.78729248046875, 0.7790948275862069
eval metrics, batch: 6144 acc, f1
0.788909912109375, 0.7796923272924164
eval metrics, batch: 7168 acc, f1
0.789215087890625, 0.7798706058577939
Epoch loss - train: tensor(0.4517, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4480, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.790679931640625, 0.7839753078643192
train metrics acc, f1 
0.8074951171875, 0.8076345422247974
Epoch 3/10
----------
eval metrics, batch: 1024 acc, f1
0.7891845703125, 0.7755685510071475
eval metrics, batch: 2048 acc, f1
0.792083740234375, 0.7828387466930163
eval metrics, batch: 3072 acc, f1
0.79229736328125, 0.7833312110021647
eval metrics, batch: 4096 acc, f1
0.793212890625, 0.7835835196422868
train metrics, batch: 4096  acc, f1 
0.8128128051757812, 0.8108516494106219
eval metrics, batch: 5120 acc, f1
0.793731689453125, 0.7819466399974191
eval metrics, batch: 6144 acc, f1
0.794403076171875, 0.784863483953377
eval metrics, batch: 7168 acc, f1
0.795074462890625, 0.7847963336858635
Epoch loss - train: tensor(0.4225, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4333, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.796630859375, 0.787594823739402
train metrics acc, f1 
0.8164939880371094, 0.8148675536193287
Epoch 4/10
----------
eval metrics, batch: 1024 acc, f1
0.793975830078125, 0.7807333788041183
eval metrics, batch: 2048 acc, f1
0.796905517578125, 0.7874141510940744
eval metrics, batch: 3072 acc, f1
0.796661376953125, 0.7878768584253923
eval metrics, batch: 4096 acc, f1
0.79681396484375, 0.7873794468927636
train metrics, batch: 4096  acc, f1 
0.8166007995605469, 0.8150407989751205
eval metrics, batch: 5120 acc, f1
0.798004150390625, 0.7897729077338416
eval metrics, batch: 6144 acc, f1
0.7978515625, 0.7886272257323378
eval metrics, batch: 7168 acc, f1
0.79833984375, 0.7895005096839959
Epoch loss - train: tensor(0.4120, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4295, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.79827880859375, 0.7882360479272121
train metrics acc, f1 
0.8191032409667969, 0.8171128191877081
Epoch 5/10
----------
eval metrics, batch: 1024 acc, f1
0.798431396484375, 0.7887549173249753
eval metrics, batch: 2048 acc, f1
0.799224853515625, 0.7903241227650827
eval metrics, batch: 3072 acc, f1
0.799407958984375, 0.7905553962336297
eval metrics, batch: 4096 acc, f1
0.799346923828125, 0.7888364325400649
train metrics, batch: 4096  acc, f1 
0.822418212890625, 0.8201778443900215
eval metrics, batch: 5120 acc, f1
0.799957275390625, 0.7903942698174143
eval metrics, batch: 6144 acc, f1
0.800537109375, 0.7909817716661337
eval metrics, batch: 7168 acc, f1
0.8006591796875, 0.7910161249040184
Epoch loss - train: tensor(0.4024, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4229, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.8009033203125, 0.7908572161313073
train metrics acc, f1 
0.8238182067871094, 0.8219469599713172
Epoch 6/10
----------
eval metrics, batch: 1024 acc, f1
0.800384521484375, 0.7901844426623897
eval metrics, batch: 2048 acc, f1
0.801422119140625, 0.7919690527190767
eval metrics, batch: 3072 acc, f1
0.801910400390625, 0.7931155378486056
eval metrics, batch: 4096 acc, f1
0.802337646484375, 0.7933905387731666
train metrics, batch: 4096  acc, f1 
0.8245697021484375, 0.8236953888147706
eval metrics, batch: 5120 acc, f1
0.801513671875, 0.7909757038179714
eval metrics, batch: 6144 acc, f1
0.80291748046875, 0.7933836703352957
eval metrics, batch: 7168 acc, f1
0.80267333984375, 0.7922903951172502
Epoch loss - train: tensor(0.3970, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4192, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.803436279296875, 0.7935378401769401
train metrics acc, f1 
0.8258705139160156, 0.8242663165878091
Epoch 7/10
----------
eval metrics, batch: 1024 acc, f1
0.8006591796875, 0.7897921091587823
eval metrics, batch: 2048 acc, f1
0.80084228515625, 0.7899040628420578
eval metrics, batch: 3072 acc, f1
0.803192138671875, 0.7939550784370107
eval metrics, batch: 4096 acc, f1
0.801055908203125, 0.7896757541538958
train metrics, batch: 4096  acc, f1 
0.8268585205078125, 0.8240993365164011
eval metrics, batch: 5120 acc, f1
0.803558349609375, 0.7938642841131073
eval metrics, batch: 6144 acc, f1
0.8048095703125, 0.7964094728800611
eval metrics, batch: 7168 acc, f1
0.803192138671875, 0.792028120868135
Epoch loss - train: tensor(0.3923, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4181, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.8043212890625, 0.7946451447604407
train metrics acc, f1 
0.8277587890625, 0.8260118992570671
Epoch 8/10
----------
eval metrics, batch: 1024 acc, f1
0.80291748046875, 0.7894771156604512
eval metrics, batch: 2048 acc, f1
0.804656982421875, 0.795906003889934
eval metrics, batch: 3072 acc, f1
0.804351806640625, 0.7961072416754127
eval metrics, batch: 4096 acc, f1
0.804901123046875, 0.7960700500813424
train metrics, batch: 4096  acc, f1 
0.8289642333984375, 0.8278584043615143
eval metrics, batch: 5120 acc, f1
0.805206298828125, 0.7950422245769515
eval metrics, batch: 6144 acc, f1
0.804656982421875, 0.795318645476929
eval metrics, batch: 7168 acc, f1
0.8048095703125, 0.7959287856550316
Epoch loss - train: tensor(0.3878, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4128, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.804931640625, 0.796251434400102
train metrics acc, f1 
0.82989501953125, 0.8290852504005335
Epoch 9/10
----------
eval metrics, batch: 1024 acc, f1
0.801483154296875, 0.7855188103795048
eval metrics, batch: 2048 acc, f1
0.802459716796875, 0.7919117883434597
eval metrics, batch: 3072 acc, f1
0.8028564453125, 0.7922829581993569
eval metrics, batch: 4096 acc, f1
0.80328369140625, 0.7938599296450272
train metrics, batch: 4096  acc, f1 
0.82958984375, 0.8285683585205424
eval metrics, batch: 5120 acc, f1
0.804107666015625, 0.7936609984248931
eval metrics, batch: 6144 acc, f1
0.803680419921875, 0.7930246774556803
eval metrics, batch: 7168 acc, f1
0.804107666015625, 0.7940714125308781
Epoch loss - train: tensor(0.3853, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4137, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.803680419921875, 0.793529543922714
train metrics acc, f1 
0.8306503295898438, 0.829071083697184
Epoch 10/10
----------
eval metrics, batch: 1024 acc, f1
0.80694580078125, 0.8013190954773869
eval metrics, batch: 2048 acc, f1
0.80413818359375, 0.7931279009798865
eval metrics, batch: 3072 acc, f1
0.805419921875, 0.7951814969482814
eval metrics, batch: 4096 acc, f1
0.805755615234375, 0.7958561852528946
train metrics, batch: 4096  acc, f1 
0.8317527770996094, 0.8305550326365491
eval metrics, batch: 5120 acc, f1
0.80548095703125, 0.7958098411071246
eval metrics, batch: 6144 acc, f1
0.804534912109375, 0.792979734315912
eval metrics, batch: 7168 acc, f1
0.8065185546875, 0.7989216619092927
Epoch loss - train: tensor(0.3834, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4124, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.806488037109375, 0.7968734984143255
train metrics acc, f1 
0.8320770263671875, 0.8310561866748541
Training time 165m 29s
train_acc
0.5296211242675781	0.7538681030273438	0.78912353515625	0.8007774353027344	0.8074951171875	0.8128128051757812	0.8164939880371094	0.8166007995605469	0.8191032409667969	0.822418212890625	0.8238182067871094	0.8245697021484375	0.8258705139160156	0.8268585205078125	0.8277587890625	0.8289642333984375	0.82989501953125	0.82958984375	0.8306503295898438	0.8317527770996094	0.8320770263671875
train_f1
0.2742933148140519	0.7515900515900515	0.7896979380658906	0.7993622620488292	0.8076345422247974	0.8108516494106219	0.8148675536193287	0.8150407989751205	0.8171128191877081	0.8201778443900215	0.8219469599713172	0.8236953888147706	0.8242663165878091	0.8240993365164011	0.8260118992570671	0.8278584043615143	0.8290852504005335	0.8285683585205424	0.829071083697184	0.8305550326365491	0.8310561866748541
train_loss
tensor(0.5530, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.4517, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.4225, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.4120, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.4024, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.3970, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.3923, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.3878, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.3853, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.3834, device='cuda:0', grad_fn=<DivBackward0>)
valid_acc
0.515289306640625	0.62530517578125	0.69329833984375	0.7305908203125	0.75091552734375	0.763763427734375	0.7708740234375	0.77386474609375	0.77935791015625	0.7802734375	0.78143310546875	0.78338623046875	0.784759521484375	0.78729248046875	0.788909912109375	0.789215087890625	0.790679931640625	0.7891845703125	0.792083740234375	0.79229736328125	0.793212890625	0.793731689453125	0.794403076171875	0.795074462890625	0.796630859375	0.793975830078125	0.796905517578125	0.796661376953125	0.79681396484375	0.798004150390625	0.7978515625	0.79833984375	0.79827880859375	0.798431396484375	0.799224853515625	0.799407958984375	0.799346923828125	0.799957275390625	0.800537109375	0.8006591796875	0.8009033203125	0.800384521484375	0.801422119140625	0.801910400390625	0.802337646484375	0.801513671875	0.80291748046875	0.80267333984375	0.803436279296875	0.8006591796875	0.80084228515625	0.803192138671875	0.801055908203125	0.803558349609375	0.8048095703125	0.803192138671875	0.8043212890625	0.80291748046875	0.804656982421875	0.804351806640625	0.804901123046875	0.805206298828125	0.804656982421875	0.8048095703125	0.804931640625	0.801483154296875	0.802459716796875	0.8028564453125	0.80328369140625	0.804107666015625	0.803680419921875	0.804107666015625	0.803680419921875	0.80694580078125	0.80413818359375	0.805419921875	0.805755615234375	0.80548095703125	0.804534912109375	0.8065185546875	0.806488037109375
valid_f1
0.2397932321830278	0.6143844221105528	0.6925665341082899	0.7264332197087078	0.7435268979386627	0.7590800161837478	0.7651254457861478	0.7651198174210726	0.7735813603908305	0.7738551416546265	0.7717218078663862	0.775223256697701	0.7760454704219986	0.7790948275862069	0.7796923272924164	0.7798706058577939	0.7839753078643192	0.7755685510071475	0.7828387466930163	0.7833312110021647	0.7835835196422868	0.7819466399974191	0.784863483953377	0.7847963336858635	0.787594823739402	0.7807333788041183	0.7874141510940744	0.7878768584253923	0.7873794468927636	0.7897729077338416	0.7886272257323378	0.7895005096839959	0.7882360479272121	0.7887549173249753	0.7903241227650827	0.7905553962336297	0.7888364325400649	0.7903942698174143	0.7909817716661337	0.7910161249040184	0.7908572161313073	0.7901844426623897	0.7919690527190767	0.7931155378486056	0.7933905387731666	0.7909757038179714	0.7933836703352957	0.7922903951172502	0.7935378401769401	0.7897921091587823	0.7899040628420578	0.7939550784370107	0.7896757541538958	0.7938642841131073	0.7964094728800611	0.792028120868135	0.7946451447604407	0.7894771156604512	0.795906003889934	0.7961072416754127	0.7960700500813424	0.7950422245769515	0.795318645476929	0.7959287856550316	0.796251434400102	0.7855188103795048	0.7919117883434597	0.7922829581993569	0.7938599296450272	0.7936609984248931	0.7930246774556803	0.7940714125308781	0.793529543922714	0.8013190954773869	0.7931279009798865	0.7951814969482814	0.7958561852528946	0.7958098411071246	0.792979734315912	0.7989216619092927	0.7968734984143255
valid_loss
tensor(0.4793, device='cuda:0')	tensor(0.4480, device='cuda:0')	tensor(0.4333, device='cuda:0')	tensor(0.4295, device='cuda:0')	tensor(0.4229, device='cuda:0')	tensor(0.4192, device='cuda:0')	tensor(0.4181, device='cuda:0')	tensor(0.4128, device='cuda:0')	tensor(0.4137, device='cuda:0')	tensor(0.4124, device='cuda:0')
Best model metrics: train, valid, test: acc, f1
0.8320770263671875, 0.8310561866748541
0.806488037109375, 0.7968734984143255
0.790374755859375, 0.7783407015392558
Model saved, path ./models/densenet_4-1558897740.pth
experiment validation
train set
Evaluation results
[[109854.  21218.]
 [ 22802. 108270.]]
#############################
Accuracy
0.8320770263671875
------------------------
Recall
0.8260345458984375
------------------------
Specificity
0.8381195068359375
------------------------
Precision
0.8361392561472878
------------------------
Fall_out
0.1618804931640625
------------------------
F1
0.8310561866748541
------------------------
#############################
valid set
Evaluation results
[[13989.  2410.]
 [ 3931. 12438.]]
#############################
Accuracy
0.806488037109375
------------------------
Recall
0.7598509377481826
------------------------
Specificity
0.8530398195011891
------------------------
Precision
0.8376885775862069
------------------------
Fall_out
0.1469601804988109
------------------------
F1
0.7968734984143255
------------------------
#############################
test set
Evaluation results
[[13839.  2552.]
 [ 4317. 12060.]]
#############################
Accuracy
0.790374755859375
------------------------
Recall
0.7363986078036271
------------------------
Specificity
0.8443048014154109
------------------------
Precision
0.8253490281960033
------------------------
Fall_out
0.1556951985845891
------------------------
F1
0.7783407015392558
------------------------
#############################
AUC: 0.8766487686179194
Experiment end
########################################
----------------------------------------
Starting experiment densenet_5-1558897740
Experiment parameters Experiment[name: densenet_5-1558897740, model: DenseNet(
  (features): Sequential(
    (conv0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (norm0): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu0): ReLU(inplace)
    (pool0): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (denseblock1): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(96, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (transition1): _Transition(
      (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock2): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer7): _DenseLayer(
        (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer8): _DenseLayer(
        (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer9): _DenseLayer(
        (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer10): _DenseLayer(
        (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer11): _DenseLayer(
        (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer12): _DenseLayer(
        (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (transition2): _Transition(
      (norm): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock3): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer7): _DenseLayer(
        (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer8): _DenseLayer(
        (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer9): _DenseLayer(
        (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer10): _DenseLayer(
        (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer11): _DenseLayer(
        (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer12): _DenseLayer(
        (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer13): _DenseLayer(
        (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer14): _DenseLayer(
        (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer15): _DenseLayer(
        (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer16): _DenseLayer(
        (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer17): _DenseLayer(
        (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer18): _DenseLayer(
        (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer19): _DenseLayer(
        (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer20): _DenseLayer(
        (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer21): _DenseLayer(
        (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer22): _DenseLayer(
        (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer23): _DenseLayer(
        (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer24): _DenseLayer(
        (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (transition3): _Transition(
      (norm): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock4): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer7): _DenseLayer(
        (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer8): _DenseLayer(
        (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer9): _DenseLayer(
        (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer10): _DenseLayer(
        (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer11): _DenseLayer(
        (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer12): _DenseLayer(
        (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer13): _DenseLayer(
        (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer14): _DenseLayer(
        (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer15): _DenseLayer(
        (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer16): _DenseLayer(
        (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (norm5): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (classifier): Linear(in_features=1024, out_features=1, bias=True)
), params: Params(lr: 0.001, weight_decay: 0, batch_size: 32, num_epochs: 10), optimizer: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.001
    weight_decay: 0
), criterion: BCEWithLogitsLoss()]
start metrics
eval metrics acc, f1
0.329071044921875, 0.19400960516185797
train metrics acc, f1
0.3762702941894531, 0.26889937177222833
Epoch 1/10
----------
eval metrics, batch: 1024 acc, f1
0.807830810546875, 0.8016755377783377
eval metrics, batch: 2048 acc, f1
0.813629150390625, 0.8049193419581536
eval metrics, batch: 3072 acc, f1
0.809326171875, 0.8063356270534995
eval metrics, batch: 4096 acc, f1
0.804901123046875, 0.7906336990338956
train metrics, batch: 4096  acc, f1 
0.8394699096679688, 0.8361879700418853
eval metrics, batch: 5120 acc, f1
0.81463623046875, 0.8107080528546498
eval metrics, batch: 6144 acc, f1
0.812530517578125, 0.8044813647792737
eval metrics, batch: 7168 acc, f1
0.822906494140625, 0.8184576880963554
Epoch loss - train: tensor(0.3794, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4062, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.807373046875, 0.7902432540210023
train metrics acc, f1 
0.8430557250976562, 0.8374669142337929
Epoch 2/10
----------
eval metrics, batch: 1024 acc, f1
0.814727783203125, 0.8092859611095404
eval metrics, batch: 2048 acc, f1
0.808746337890625, 0.7928606841844323
eval metrics, batch: 3072 acc, f1
0.797088623046875, 0.7721150221064537
eval metrics, batch: 4096 acc, f1
0.811065673828125, 0.7981085928583075
train metrics, batch: 4096  acc, f1 
0.8455085754394531, 0.8425125506986004
eval metrics, batch: 5120 acc, f1
0.802764892578125, 0.7803120432373636
eval metrics, batch: 6144 acc, f1
0.80828857421875, 0.7959196933272692
eval metrics, batch: 7168 acc, f1
0.813720703125, 0.8045969652346501
Epoch loss - train: tensor(0.3617, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4058, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.8123779296875, 0.7989667124452292
train metrics acc, f1 
0.8477973937988281, 0.8450807037162149
Epoch 3/10
----------
eval metrics, batch: 1024 acc, f1
0.8087158203125, 0.7898759637948374
eval metrics, batch: 2048 acc, f1
0.8134765625, 0.812676229005762
eval metrics, batch: 3072 acc, f1
0.81634521484375, 0.8113952613764573
eval metrics, batch: 4096 acc, f1
0.795684814453125, 0.7674135834636095
train metrics, batch: 4096  acc, f1 
0.8385581970214844, 0.826030657672434
eval metrics, batch: 5120 acc, f1
0.8155517578125, 0.8107820424519442
eval metrics, batch: 6144 acc, f1
0.810638427734375, 0.7984800753466922
eval metrics, batch: 7168 acc, f1
0.807281494140625, 0.7865183732801461
Epoch loss - train: tensor(0.3558, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4101, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.810821533203125, 0.8095135666656423
train metrics acc, f1 
0.8450431823730469, 0.8513091573294874
Epoch 4/10
----------
eval metrics, batch: 1024 acc, f1
0.8131103515625, 0.8065575841809337
eval metrics, batch: 2048 acc, f1
0.801055908203125, 0.7760640307787434
eval metrics, batch: 3072 acc, f1
0.8115234375, 0.7989583333333333
eval metrics, batch: 4096 acc, f1
0.81109619140625, 0.7962877641018891
train metrics, batch: 4096  acc, f1 
0.8496208190917969, 0.8461961631949186
eval metrics, batch: 5120 acc, f1
0.810150146484375, 0.8037725136422421
eval metrics, batch: 6144 acc, f1
0.81475830078125, 0.8040291857687092
eval metrics, batch: 7168 acc, f1
0.816314697265625, 0.8076566644297447
Epoch loss - train: tensor(0.3526, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.3988, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.81658935546875, 0.811822906882084
train metrics acc, f1 
0.8497848510742188, 0.8529068985611188
Epoch 5/10
----------
eval metrics, batch: 1024 acc, f1
0.81317138671875, 0.7990282975510472
eval metrics, batch: 2048 acc, f1
0.803863525390625, 0.7823495546750652
eval metrics, batch: 3072 acc, f1
0.80230712890625, 0.7797048221451405
eval metrics, batch: 4096 acc, f1
0.810028076171875, 0.7986805083923547
train metrics, batch: 4096  acc, f1 
0.8511161804199219, 0.8504229119798873
eval metrics, batch: 5120 acc, f1
0.813629150390625, 0.8098514805243329
eval metrics, batch: 6144 acc, f1
0.81341552734375, 0.8034336419753086
eval metrics, batch: 7168 acc, f1
0.81072998046875, 0.794254246284501
Epoch loss - train: tensor(0.3513, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4146, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.8070068359375, 0.7902487562189054
train metrics acc, f1 
0.8506507873535156, 0.8465803776808561
Epoch 6/10
----------
eval metrics, batch: 1024 acc, f1
0.80889892578125, 0.7918356492254505
eval metrics, batch: 2048 acc, f1
0.815521240234375, 0.805620759509952
eval metrics, batch: 3072 acc, f1
0.816009521484375, 0.804880416841969
eval metrics, batch: 4096 acc, f1
0.8134765625, 0.8033588572163953
train metrics, batch: 4096  acc, f1 
0.8532142639160156, 0.8533323168988585
eval metrics, batch: 5120 acc, f1
0.80499267578125, 0.782889372111987
eval metrics, batch: 6144 acc, f1
0.814453125, 0.8051906440243511
eval metrics, batch: 7168 acc, f1
0.816802978515625, 0.8061985472154963
Epoch loss - train: tensor(0.3486, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4094, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.8126220703125, 0.804196696217871
train metrics acc, f1 
0.8526153564453125, 0.8539237481662961
Epoch 7/10
----------
eval metrics, batch: 1024 acc, f1
0.81256103515625, 0.8019859436456251
eval metrics, batch: 2048 acc, f1
0.81744384765625, 0.8082569395474068
eval metrics, batch: 3072 acc, f1
0.817169189453125, 0.8109557918651983
eval metrics, batch: 4096 acc, f1
0.81817626953125, 0.8130412953432911
train metrics, batch: 4096  acc, f1 
0.852294921875, 0.8551201843924926
eval metrics, batch: 5120 acc, f1
0.817535400390625, 0.8117739650558791
eval metrics, batch: 6144 acc, f1
0.81396484375, 0.8061685214626391
eval metrics, batch: 7168 acc, f1
0.811065673828125, 0.7990000324664783
Epoch loss - train: tensor(0.3474, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4173, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.8084716796875, 0.8099794114085018
train metrics acc, f1 
0.844085693359375, 0.8525881470367592
Epoch 8/10
----------
eval metrics, batch: 1024 acc, f1
0.81622314453125, 0.8065904419321686
eval metrics, batch: 2048 acc, f1
0.815032958984375, 0.8051438675454107
eval metrics, batch: 3072 acc, f1
0.82012939453125, 0.8147472969575057
eval metrics, batch: 4096 acc, f1
0.817230224609375, 0.809903189969846
train metrics, batch: 4096  acc, f1 
0.8529891967773438, 0.8545560218592434
eval metrics, batch: 5120 acc, f1
0.800567626953125, 0.7795432311169584
eval metrics, batch: 6144 acc, f1
0.8026123046875, 0.7794749403341289
eval metrics, batch: 7168 acc, f1
0.81707763671875, 0.8086817746568784
Epoch loss - train: tensor(0.3463, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4078, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.8118896484375, 0.7998961173873523
train metrics acc, f1 
0.8547286987304688, 0.8538937869754379
Epoch 9/10
----------
eval metrics, batch: 1024 acc, f1
0.81024169921875, 0.7949478960559293
eval metrics, batch: 2048 acc, f1
0.81494140625, 0.8053040518846721
eval metrics, batch: 3072 acc, f1
0.803497314453125, 0.7829282270842464
eval metrics, batch: 4096 acc, f1
0.811767578125, 0.8028511155149268
train metrics, batch: 4096  acc, f1 
0.8541450500488281, 0.8556347201612995
eval metrics, batch: 5120 acc, f1
0.8114013671875, 0.8001810657009829
eval metrics, batch: 6144 acc, f1
0.807952880859375, 0.7902962444599954
eval metrics, batch: 7168 acc, f1
0.811279296875, 0.8042170581903375
Epoch loss - train: tensor(0.3446, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4086, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.811614990234375, 0.7985247560298966
train metrics acc, f1 
0.8564300537109375, 0.8548576188566316
Epoch 10/10
----------
eval metrics, batch: 1024 acc, f1
0.808624267578125, 0.7898669704788392
eval metrics, batch: 2048 acc, f1
0.811614990234375, 0.7964922691458148
eval metrics, batch: 3072 acc, f1
0.80804443359375, 0.7927239174850063
eval metrics, batch: 4096 acc, f1
0.8089599609375, 0.7944440795954555
train metrics, batch: 4096  acc, f1 
0.8551177978515625, 0.8533262274949602
eval metrics, batch: 5120 acc, f1
0.810028076171875, 0.7945205479452054
eval metrics, batch: 6144 acc, f1
0.806427001953125, 0.8080031479855919
eval metrics, batch: 7168 acc, f1
0.808685302734375, 0.7909427418548037
Epoch loss - train: tensor(0.3430, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4089, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.8126220703125, 0.80352
train metrics acc, f1 
0.8558235168457031, 0.8568170539052822
Training time 169m 33s
train_acc
0.3762702941894531	0.8394699096679688	0.8430557250976562	0.8455085754394531	0.8477973937988281	0.8385581970214844	0.8450431823730469	0.8496208190917969	0.8497848510742188	0.8511161804199219	0.8506507873535156	0.8532142639160156	0.8526153564453125	0.852294921875	0.844085693359375	0.8529891967773438	0.8547286987304688	0.8541450500488281	0.8564300537109375	0.8551177978515625	0.8558235168457031
train_f1
0.26889937177222833	0.8361879700418853	0.8374669142337929	0.8425125506986004	0.8450807037162149	0.826030657672434	0.8513091573294874	0.8461961631949186	0.8529068985611188	0.8504229119798873	0.8465803776808561	0.8533323168988585	0.8539237481662961	0.8551201843924926	0.8525881470367592	0.8545560218592434	0.8538937869754379	0.8556347201612995	0.8548576188566316	0.8533262274949602	0.8568170539052822
train_loss
tensor(0.3794, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.3617, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.3558, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.3526, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.3513, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.3486, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.3474, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.3463, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.3446, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.3430, device='cuda:0', grad_fn=<DivBackward0>)
valid_acc
0.329071044921875	0.807830810546875	0.813629150390625	0.809326171875	0.804901123046875	0.81463623046875	0.812530517578125	0.822906494140625	0.807373046875	0.814727783203125	0.808746337890625	0.797088623046875	0.811065673828125	0.802764892578125	0.80828857421875	0.813720703125	0.8123779296875	0.8087158203125	0.8134765625	0.81634521484375	0.795684814453125	0.8155517578125	0.810638427734375	0.807281494140625	0.810821533203125	0.8131103515625	0.801055908203125	0.8115234375	0.81109619140625	0.810150146484375	0.81475830078125	0.816314697265625	0.81658935546875	0.81317138671875	0.803863525390625	0.80230712890625	0.810028076171875	0.813629150390625	0.81341552734375	0.81072998046875	0.8070068359375	0.80889892578125	0.815521240234375	0.816009521484375	0.8134765625	0.80499267578125	0.814453125	0.816802978515625	0.8126220703125	0.81256103515625	0.81744384765625	0.817169189453125	0.81817626953125	0.817535400390625	0.81396484375	0.811065673828125	0.8084716796875	0.81622314453125	0.815032958984375	0.82012939453125	0.817230224609375	0.800567626953125	0.8026123046875	0.81707763671875	0.8118896484375	0.81024169921875	0.81494140625	0.803497314453125	0.811767578125	0.8114013671875	0.807952880859375	0.811279296875	0.811614990234375	0.808624267578125	0.811614990234375	0.80804443359375	0.8089599609375	0.810028076171875	0.806427001953125	0.808685302734375	0.8126220703125
valid_f1
0.19400960516185797	0.8016755377783377	0.8049193419581536	0.8063356270534995	0.7906336990338956	0.8107080528546498	0.8044813647792737	0.8184576880963554	0.7902432540210023	0.8092859611095404	0.7928606841844323	0.7721150221064537	0.7981085928583075	0.7803120432373636	0.7959196933272692	0.8045969652346501	0.7989667124452292	0.7898759637948374	0.812676229005762	0.8113952613764573	0.7674135834636095	0.8107820424519442	0.7984800753466922	0.7865183732801461	0.8095135666656423	0.8065575841809337	0.7760640307787434	0.7989583333333333	0.7962877641018891	0.8037725136422421	0.8040291857687092	0.8076566644297447	0.811822906882084	0.7990282975510472	0.7823495546750652	0.7797048221451405	0.7986805083923547	0.8098514805243329	0.8034336419753086	0.794254246284501	0.7902487562189054	0.7918356492254505	0.805620759509952	0.804880416841969	0.8033588572163953	0.782889372111987	0.8051906440243511	0.8061985472154963	0.804196696217871	0.8019859436456251	0.8082569395474068	0.8109557918651983	0.8130412953432911	0.8117739650558791	0.8061685214626391	0.7990000324664783	0.8099794114085018	0.8065904419321686	0.8051438675454107	0.8147472969575057	0.809903189969846	0.7795432311169584	0.7794749403341289	0.8086817746568784	0.7998961173873523	0.7949478960559293	0.8053040518846721	0.7829282270842464	0.8028511155149268	0.8001810657009829	0.7902962444599954	0.8042170581903375	0.7985247560298966	0.7898669704788392	0.7964922691458148	0.7927239174850063	0.7944440795954555	0.7945205479452054	0.8080031479855919	0.7909427418548037	0.80352
valid_loss
tensor(0.4062, device='cuda:0')	tensor(0.4058, device='cuda:0')	tensor(0.4101, device='cuda:0')	tensor(0.3988, device='cuda:0')	tensor(0.4146, device='cuda:0')	tensor(0.4094, device='cuda:0')	tensor(0.4173, device='cuda:0')	tensor(0.4078, device='cuda:0')	tensor(0.4086, device='cuda:0')	tensor(0.4089, device='cuda:0')
Best model metrics: train, valid, test: acc, f1
0.8497848510742188, 0.8529068985611188
0.81658935546875, 0.811822906882084
0.806549072265625, 0.8009420631182289
Model saved, path ./models/densenet_5-1558897740.pth
experiment validation
train set
Evaluation results
[[108601.  22471.]
 [ 16907. 114165.]]
#############################
Accuracy
0.8497848510742188
------------------------
Recall
0.8710098266601562
------------------------
Specificity
0.8285598754882812
------------------------
Precision
0.835541145818086
------------------------
Fall_out
0.17144012451171875
------------------------
F1
0.8529068985611188
------------------------
#############################
valid set
Evaluation results
[[13794.  2605.]
 [ 3405. 12964.]]
#############################
Accuracy
0.81658935546875
------------------------
Recall
0.791984849410471
------------------------
Specificity
0.841148850539667
------------------------
Precision
0.8326803262894212
------------------------
Fall_out
0.15885114946033294
------------------------
F1
0.811822906882084
------------------------
#############################
test set
Evaluation results
[[13676.  2715.]
 [ 3624. 12753.]]
#############################
Accuracy
0.806549072265625
------------------------
Recall
0.778714050192343
------------------------
Specificity
0.8343603196876335
------------------------
Precision
0.8244763382467029
------------------------
Fall_out
0.16563968031236653
------------------------
F1
0.8009420631182289
------------------------
#############################
AUC: 0.8873669392652066
Experiment end
########################################
----------------------------------------
Starting experiment densenet_6-1558897741
Experiment parameters Experiment[name: densenet_6-1558897741, model: DenseNet(
  (features): Sequential(
    (conv0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (norm0): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu0): ReLU(inplace)
    (pool0): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (denseblock1): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(96, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (transition1): _Transition(
      (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock2): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer7): _DenseLayer(
        (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer8): _DenseLayer(
        (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer9): _DenseLayer(
        (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer10): _DenseLayer(
        (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer11): _DenseLayer(
        (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer12): _DenseLayer(
        (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (transition2): _Transition(
      (norm): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock3): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer7): _DenseLayer(
        (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer8): _DenseLayer(
        (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer9): _DenseLayer(
        (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer10): _DenseLayer(
        (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer11): _DenseLayer(
        (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer12): _DenseLayer(
        (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer13): _DenseLayer(
        (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer14): _DenseLayer(
        (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer15): _DenseLayer(
        (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer16): _DenseLayer(
        (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer17): _DenseLayer(
        (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer18): _DenseLayer(
        (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer19): _DenseLayer(
        (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer20): _DenseLayer(
        (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer21): _DenseLayer(
        (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer22): _DenseLayer(
        (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer23): _DenseLayer(
        (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer24): _DenseLayer(
        (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (transition3): _Transition(
      (norm): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock4): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer7): _DenseLayer(
        (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer8): _DenseLayer(
        (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer9): _DenseLayer(
        (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer10): _DenseLayer(
        (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer11): _DenseLayer(
        (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer12): _DenseLayer(
        (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer13): _DenseLayer(
        (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer14): _DenseLayer(
        (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer15): _DenseLayer(
        (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer16): _DenseLayer(
        (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (norm5): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (classifier): Linear(in_features=1024, out_features=1, bias=True)
), params: Params(lr: 0.0001, weight_decay: 0, batch_size: 32, num_epochs: 10), optimizer: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.0001
    weight_decay: 0
), criterion: BCEWithLogitsLoss()]
start metrics
eval metrics acc, f1
0.37939453125, 0.19633259563705344
train metrics acc, f1
0.4116363525390625, 0.24530997700249546
Epoch 1/10
----------
eval metrics, batch: 1024 acc, f1
0.7760009765625, 0.7585049680858064
eval metrics, batch: 2048 acc, f1
0.791961669921875, 0.7776074119988255
eval metrics, batch: 3072 acc, f1
0.80078125, 0.7901504436157901
eval metrics, batch: 4096 acc, f1
0.801605224609375, 0.7885922409027348
train metrics, batch: 4096  acc, f1 
0.8226280212402344, 0.8178509728952595
eval metrics, batch: 5120 acc, f1
0.80255126953125, 0.7958604152205465
eval metrics, batch: 6144 acc, f1
0.80426025390625, 0.7917126712996038
eval metrics, batch: 7168 acc, f1
0.806549072265625, 0.79687249655526
Epoch loss - train: tensor(0.4198, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4143, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.80535888671875, 0.7916775542200157
train metrics acc, f1 
0.8301048278808594, 0.8253718058806693
Epoch 2/10
----------
eval metrics, batch: 1024 acc, f1
0.8076171875, 0.7995803395434603
eval metrics, batch: 2048 acc, f1
0.8101806640625, 0.8029775102945834
eval metrics, batch: 3072 acc, f1
0.811370849609375, 0.8043677797119797
eval metrics, batch: 4096 acc, f1
0.810943603515625, 0.8019944385847158
train metrics, batch: 4096  acc, f1 
0.8351593017578125, 0.8341126338822987
eval metrics, batch: 5120 acc, f1
0.8121337890625, 0.8070582335610856
eval metrics, batch: 6144 acc, f1
0.810272216796875, 0.8015196500973726
eval metrics, batch: 7168 acc, f1
0.810699462890625, 0.8014976479247335
Epoch loss - train: tensor(0.3772, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4032, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.81243896484375, 0.8044170061099797
train metrics acc, f1 
0.8380584716796875, 0.8379991451947735
Epoch 3/10
----------
eval metrics, batch: 1024 acc, f1
0.81036376953125, 0.7993671703474106
eval metrics, batch: 2048 acc, f1
0.81463623046875, 0.8072969543147208
eval metrics, batch: 3072 acc, f1
0.81488037109375, 0.8080622705986584
eval metrics, batch: 4096 acc, f1
0.814605712890625, 0.8104346740724561
train metrics, batch: 4096  acc, f1 
0.8381118774414062, 0.8409656433625134
eval metrics, batch: 5120 acc, f1
0.813812255859375, 0.8059416648112218
eval metrics, batch: 6144 acc, f1
0.81396484375, 0.8053639846743295
eval metrics, batch: 7168 acc, f1
0.81500244140625, 0.8071637612927853
Epoch loss - train: tensor(0.3686, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4017, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.815521240234375, 0.8087327954437589
train metrics acc, f1 
0.8403968811035156, 0.8414450672093438
Epoch 4/10
----------
eval metrics, batch: 1024 acc, f1
0.808013916015625, 0.7913502039733342
eval metrics, batch: 2048 acc, f1
0.81298828125, 0.8028694589204143
eval metrics, batch: 3072 acc, f1
0.81719970703125, 0.808381317978247
eval metrics, batch: 4096 acc, f1
0.815277099609375, 0.8056135392915637
train metrics, batch: 4096  acc, f1 
0.8419990539550781, 0.8405422157544399
eval metrics, batch: 5120 acc, f1
0.814117431640625, 0.8035984909554058
eval metrics, batch: 6144 acc, f1
0.817047119140625, 0.8102788062913383
eval metrics, batch: 7168 acc, f1
0.818603515625, 0.8126930106510367
Epoch loss - train: tensor(0.3639, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.3994, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.815948486328125, 0.8072239092216718
train metrics acc, f1 
0.8430824279785156, 0.842484558623621
Epoch 5/10
----------
eval metrics, batch: 1024 acc, f1
0.81573486328125, 0.8084755439954323
eval metrics, batch: 2048 acc, f1
0.8154296875, 0.8099428068631764
eval metrics, batch: 3072 acc, f1
0.812225341796875, 0.7998308337942028
eval metrics, batch: 4096 acc, f1
0.80975341796875, 0.7950286052475833
train metrics, batch: 4096  acc, f1 
0.8424301147460938, 0.8380194975804491
eval metrics, batch: 5120 acc, f1
0.813568115234375, 0.8018552755343648
eval metrics, batch: 6144 acc, f1
0.816802978515625, 0.81190662697791
eval metrics, batch: 7168 acc, f1
0.812591552734375, 0.8001822145576416
Epoch loss - train: tensor(0.3613, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4010, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.81451416015625, 0.8066055746468117
train metrics acc, f1 
0.8441123962402344, 0.8445577131554423
Epoch 6/10
----------
eval metrics, batch: 1024 acc, f1
0.81304931640625, 0.803376556682501
eval metrics, batch: 2048 acc, f1
0.815216064453125, 0.8076617642387471
eval metrics, batch: 3072 acc, f1
0.815032958984375, 0.8060914355184439
eval metrics, batch: 4096 acc, f1
0.815521240234375, 0.8086843687691869
train metrics, batch: 4096  acc, f1 
0.8438911437988281, 0.8451159463622704
eval metrics, batch: 5120 acc, f1
0.815460205078125, 0.8079158857723706
eval metrics, batch: 6144 acc, f1
0.81402587890625, 0.8053159542521244
eval metrics, batch: 7168 acc, f1
0.815887451171875, 0.8075168299141754
Epoch loss - train: tensor(0.3601, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.3978, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.815765380859375, 0.8055779201958069
train metrics acc, f1 
0.8444366455078125, 0.8428988589171655
Epoch 7/10
----------
eval metrics, batch: 1024 acc, f1
0.814422607421875, 0.8009166803077427
eval metrics, batch: 2048 acc, f1
0.81524658203125, 0.8064949178546315
eval metrics, batch: 3072 acc, f1
0.812286376953125, 0.7996221129100564
eval metrics, batch: 4096 acc, f1
0.8140869140625, 0.8025539638296493
train metrics, batch: 4096  acc, f1 
0.8446922302246094, 0.8424523154436434
eval metrics, batch: 5120 acc, f1
0.818267822265625, 0.8115565963102433
eval metrics, batch: 6144 acc, f1
0.814849853515625, 0.804005814892586
eval metrics, batch: 7168 acc, f1
0.8155517578125, 0.8064185510217154
Epoch loss - train: tensor(0.3582, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4008, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.81524658203125, 0.8055127216653817
train metrics acc, f1 
0.8454780578613281, 0.8446048850850305
Epoch 8/10
----------
eval metrics, batch: 1024 acc, f1
0.813262939453125, 0.7987237261932173
eval metrics, batch: 2048 acc, f1
0.81658935546875, 0.8067399832786675
eval metrics, batch: 3072 acc, f1
0.8177490234375, 0.8106531388712745
eval metrics, batch: 4096 acc, f1
0.816741943359375, 0.8083857174766266
train metrics, batch: 4096  acc, f1 
0.8465309143066406, 0.8463627094177356
eval metrics, batch: 5120 acc, f1
0.8172607421875, 0.8092629164808562
eval metrics, batch: 6144 acc, f1
0.814361572265625, 0.805100765755663
eval metrics, batch: 7168 acc, f1
0.815582275390625, 0.8069760756380362
Epoch loss - train: tensor(0.3556, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.3985, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.816619873046875, 0.8067037668478786
train metrics acc, f1 
0.8472862243652344, 0.8463407425603863
Epoch 9/10
----------
eval metrics, batch: 1024 acc, f1
0.813629150390625, 0.8029682206807549
eval metrics, batch: 2048 acc, f1
0.8167724609375, 0.8081053439018154
eval metrics, batch: 3072 acc, f1
0.816162109375, 0.8081039755351682
eval metrics, batch: 4096 acc, f1
0.816680908203125, 0.8075111353222033
train metrics, batch: 4096  acc, f1 
0.8468132019042969, 0.8462742846205379
eval metrics, batch: 5120 acc, f1
0.816314697265625, 0.809736051841315
eval metrics, batch: 6144 acc, f1
0.816314697265625, 0.8069038529402329
eval metrics, batch: 7168 acc, f1
0.816162109375, 0.8086282483004003
Epoch loss - train: tensor(0.3546, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.3995, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.814697265625, 0.8036476523088864
train metrics acc, f1 
0.8471755981445312, 0.8454159592529711
Epoch 10/10
----------
eval metrics, batch: 1024 acc, f1
0.80950927734375, 0.795008210180624
eval metrics, batch: 2048 acc, f1
0.81414794921875, 0.8027083063366593
eval metrics, batch: 3072 acc, f1
0.812286376953125, 0.7984534224581409
eval metrics, batch: 4096 acc, f1
0.8182373046875, 0.8122675408182564
train metrics, batch: 4096  acc, f1 
0.8461685180664062, 0.8484657182152279
eval metrics, batch: 5120 acc, f1
0.814361572265625, 0.8030818037616134
eval metrics, batch: 6144 acc, f1
0.81634521484375, 0.8068801745715936
eval metrics, batch: 7168 acc, f1
0.81524658203125, 0.8055127216653817
Epoch loss - train: tensor(0.3553, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4098, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.809722900390625, 0.794840577802639
train metrics acc, f1 
0.8462600708007812, 0.8422647003569416
Training time 167m 51s
train_acc
0.4116363525390625	0.8226280212402344	0.8301048278808594	0.8351593017578125	0.8380584716796875	0.8381118774414062	0.8403968811035156	0.8419990539550781	0.8430824279785156	0.8424301147460938	0.8441123962402344	0.8438911437988281	0.8444366455078125	0.8446922302246094	0.8454780578613281	0.8465309143066406	0.8472862243652344	0.8468132019042969	0.8471755981445312	0.8461685180664062	0.8462600708007812
train_f1
0.24530997700249546	0.8178509728952595	0.8253718058806693	0.8341126338822987	0.8379991451947735	0.8409656433625134	0.8414450672093438	0.8405422157544399	0.842484558623621	0.8380194975804491	0.8445577131554423	0.8451159463622704	0.8428988589171655	0.8424523154436434	0.8446048850850305	0.8463627094177356	0.8463407425603863	0.8462742846205379	0.8454159592529711	0.8484657182152279	0.8422647003569416
train_loss
tensor(0.4198, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.3772, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.3686, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.3639, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.3613, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.3601, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.3582, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.3556, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.3546, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.3553, device='cuda:0', grad_fn=<DivBackward0>)
valid_acc
0.37939453125	0.7760009765625	0.791961669921875	0.80078125	0.801605224609375	0.80255126953125	0.80426025390625	0.806549072265625	0.80535888671875	0.8076171875	0.8101806640625	0.811370849609375	0.810943603515625	0.8121337890625	0.810272216796875	0.810699462890625	0.81243896484375	0.81036376953125	0.81463623046875	0.81488037109375	0.814605712890625	0.813812255859375	0.81396484375	0.81500244140625	0.815521240234375	0.808013916015625	0.81298828125	0.81719970703125	0.815277099609375	0.814117431640625	0.817047119140625	0.818603515625	0.815948486328125	0.81573486328125	0.8154296875	0.812225341796875	0.80975341796875	0.813568115234375	0.816802978515625	0.812591552734375	0.81451416015625	0.81304931640625	0.815216064453125	0.815032958984375	0.815521240234375	0.815460205078125	0.81402587890625	0.815887451171875	0.815765380859375	0.814422607421875	0.81524658203125	0.812286376953125	0.8140869140625	0.818267822265625	0.814849853515625	0.8155517578125	0.81524658203125	0.813262939453125	0.81658935546875	0.8177490234375	0.816741943359375	0.8172607421875	0.814361572265625	0.815582275390625	0.816619873046875	0.813629150390625	0.8167724609375	0.816162109375	0.816680908203125	0.816314697265625	0.816314697265625	0.816162109375	0.814697265625	0.80950927734375	0.81414794921875	0.812286376953125	0.8182373046875	0.814361572265625	0.81634521484375	0.81524658203125	0.809722900390625
valid_f1
0.19633259563705344	0.7585049680858064	0.7776074119988255	0.7901504436157901	0.7885922409027348	0.7958604152205465	0.7917126712996038	0.79687249655526	0.7916775542200157	0.7995803395434603	0.8029775102945834	0.8043677797119797	0.8019944385847158	0.8070582335610856	0.8015196500973726	0.8014976479247335	0.8044170061099797	0.7993671703474106	0.8072969543147208	0.8080622705986584	0.8104346740724561	0.8059416648112218	0.8053639846743295	0.8071637612927853	0.8087327954437589	0.7913502039733342	0.8028694589204143	0.808381317978247	0.8056135392915637	0.8035984909554058	0.8102788062913383	0.8126930106510367	0.8072239092216718	0.8084755439954323	0.8099428068631764	0.7998308337942028	0.7950286052475833	0.8018552755343648	0.81190662697791	0.8001822145576416	0.8066055746468117	0.803376556682501	0.8076617642387471	0.8060914355184439	0.8086843687691869	0.8079158857723706	0.8053159542521244	0.8075168299141754	0.8055779201958069	0.8009166803077427	0.8064949178546315	0.7996221129100564	0.8025539638296493	0.8115565963102433	0.804005814892586	0.8064185510217154	0.8055127216653817	0.7987237261932173	0.8067399832786675	0.8106531388712745	0.8083857174766266	0.8092629164808562	0.805100765755663	0.8069760756380362	0.8067037668478786	0.8029682206807549	0.8081053439018154	0.8081039755351682	0.8075111353222033	0.809736051841315	0.8069038529402329	0.8086282483004003	0.8036476523088864	0.795008210180624	0.8027083063366593	0.7984534224581409	0.8122675408182564	0.8030818037616134	0.8068801745715936	0.8055127216653817	0.794840577802639
valid_loss
tensor(0.4143, device='cuda:0')	tensor(0.4032, device='cuda:0')	tensor(0.4017, device='cuda:0')	tensor(0.3994, device='cuda:0')	tensor(0.4010, device='cuda:0')	tensor(0.3978, device='cuda:0')	tensor(0.4008, device='cuda:0')	tensor(0.3985, device='cuda:0')	tensor(0.3995, device='cuda:0')	tensor(0.4098, device='cuda:0')
Best model metrics: train, valid, test: acc, f1
0.8403968811035156, 0.8414450672093438
0.815521240234375, 0.8087327954437589
0.798797607421875, 0.7905986977925996
Model saved, path ./models/densenet_6-1558897741.pth
experiment validation
train set
Evaluation results
[[109286.  21786.]
 [ 20053. 111019.]]
#############################
Accuracy
0.8403968811035156
------------------------
Recall
0.8470077514648438
------------------------
Specificity
0.8337860107421875
------------------------
Precision
0.8359549715748654
------------------------
Fall_out
0.1662139892578125
------------------------
F1
0.8414450672093438
------------------------
#############################
valid set
Evaluation results
[[13943.  2456.]
 [ 3589. 12780.]]
#############################
Accuracy
0.815521240234375
------------------------
Recall
0.7807440894373511
------------------------
Specificity
0.85023477041283
------------------------
Precision
0.8388028353898661
------------------------
Fall_out
0.14976522958716995
------------------------
F1
0.8087327954437589
------------------------
#############################
test set
Evaluation results
[[13729.  2662.]
 [ 3931. 12446.]]
#############################
Accuracy
0.798797607421875
------------------------
Recall
0.7599682481528973
------------------------
Specificity
0.83759380147642
------------------------
Precision
0.8238019592268997
------------------------
Fall_out
0.16240619852358001
------------------------
F1
0.7905986977925996
------------------------
#############################
AUC: 0.8817959081679565
Experiment end
########################################
----------------------------------------
Starting experiment densenet_7-1558897741
Experiment parameters Experiment[name: densenet_7-1558897741, model: DenseNet(
  (features): Sequential(
    (conv0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (norm0): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu0): ReLU(inplace)
    (pool0): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (denseblock1): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(96, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (transition1): _Transition(
      (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock2): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer7): _DenseLayer(
        (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer8): _DenseLayer(
        (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer9): _DenseLayer(
        (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer10): _DenseLayer(
        (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer11): _DenseLayer(
        (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer12): _DenseLayer(
        (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (transition2): _Transition(
      (norm): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock3): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer7): _DenseLayer(
        (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer8): _DenseLayer(
        (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer9): _DenseLayer(
        (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer10): _DenseLayer(
        (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer11): _DenseLayer(
        (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer12): _DenseLayer(
        (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer13): _DenseLayer(
        (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer14): _DenseLayer(
        (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer15): _DenseLayer(
        (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer16): _DenseLayer(
        (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer17): _DenseLayer(
        (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer18): _DenseLayer(
        (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer19): _DenseLayer(
        (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer20): _DenseLayer(
        (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer21): _DenseLayer(
        (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer22): _DenseLayer(
        (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer23): _DenseLayer(
        (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer24): _DenseLayer(
        (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (transition3): _Transition(
      (norm): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock4): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer7): _DenseLayer(
        (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer8): _DenseLayer(
        (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer9): _DenseLayer(
        (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer10): _DenseLayer(
        (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer11): _DenseLayer(
        (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer12): _DenseLayer(
        (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer13): _DenseLayer(
        (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer14): _DenseLayer(
        (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer15): _DenseLayer(
        (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer16): _DenseLayer(
        (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (norm5): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (classifier): Linear(in_features=1024, out_features=1, bias=True)
), params: Params(lr: 1e-06, weight_decay: 0, batch_size: 32, num_epochs: 8), optimizer: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 1e-06
    weight_decay: 0
), criterion: BCEWithLogitsLoss()]
start metrics
eval metrics acc, f1
0.468475341796875, 0.47232405247371767
train metrics acc, f1
0.4552345275878906, 0.4474332831610839
Epoch 1/8
----------
eval metrics, batch: 1024 acc, f1
0.758026123046875, 0.74482669841985
eval metrics, batch: 2048 acc, f1
0.821075439453125, 0.812689690425226
eval metrics, batch: 3072 acc, f1
0.8260498046875, 0.8091986342639084
eval metrics, batch: 4096 acc, f1
0.82958984375, 0.8146574614976102
train metrics, batch: 4096  acc, f1 
0.8886642456054688, 0.8865990597194701
eval metrics, batch: 5120 acc, f1
0.837158203125, 0.8245544814887881
eval metrics, batch: 6144 acc, f1
0.834503173828125, 0.8195281040966421
eval metrics, batch: 7168 acc, f1
0.845794677734375, 0.8331076394622982
Epoch loss - train: tensor(0.3192, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.3481, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.85064697265625, 0.840917956052529
train metrics acc, f1 
0.91436767578125, 0.9148497124736371
Epoch 2/8
----------
eval metrics, batch: 1024 acc, f1
0.796112060546875, 0.7697080417772569
eval metrics, batch: 2048 acc, f1
0.8404541015625, 0.8281958593493263
eval metrics, batch: 3072 acc, f1
0.8465576171875, 0.834963565942362
eval metrics, batch: 4096 acc, f1
0.84307861328125, 0.8297125447079083
train metrics, batch: 4096  acc, f1 
0.9185333251953125, 0.9181034482758621
eval metrics, batch: 5120 acc, f1
0.843963623046875, 0.8286585570188667
eval metrics, batch: 6144 acc, f1
0.85162353515625, 0.8393364615689644
eval metrics, batch: 7168 acc, f1
0.85009765625, 0.8366695484471637
Epoch loss - train: tensor(0.2456, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.3782, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.842987060546875, 0.8246122379410261
train metrics acc, f1 
0.9309272766113281, 0.9294126361010295
Epoch 3/8
----------
eval metrics, batch: 1024 acc, f1
0.8251953125, 0.8098147287336477
eval metrics, batch: 2048 acc, f1
0.84722900390625, 0.8339855408900975
eval metrics, batch: 3072 acc, f1
0.841949462890625, 0.825086966800635
eval metrics, batch: 4096 acc, f1
0.85003662109375, 0.8366790747141718
train metrics, batch: 4096  acc, f1 
0.9331169128417969, 0.9327668255496033
eval metrics, batch: 5120 acc, f1
0.840118408203125, 0.8208582663703197
eval metrics, batch: 6144 acc, f1
0.851470947265625, 0.8361775892827089
eval metrics, batch: 7168 acc, f1
0.846282958984375, 0.8295719844357977
Epoch loss - train: tensor(0.2082, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.3778, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.84649658203125, 0.8282573067467905
train metrics acc, f1 
0.9421234130859375, 0.9411960776714081
Epoch 4/8
----------
eval metrics, batch: 1024 acc, f1
0.826690673828125, 0.8065274418287739
eval metrics, batch: 2048 acc, f1
0.843780517578125, 0.8257005686267833
eval metrics, batch: 3072 acc, f1
0.8663330078125, 0.858453981385729
eval metrics, batch: 4096 acc, f1
0.85333251953125, 0.8395004007480631
train metrics, batch: 4096  acc, f1 
0.9429435729980469, 0.9426796506436419
eval metrics, batch: 5120 acc, f1
0.85150146484375, 0.8351402629082532
eval metrics, batch: 6144 acc, f1
0.860809326171875, 0.847951461812848
eval metrics, batch: 7168 acc, f1
0.8597412109375, 0.847663241630759
Epoch loss - train: tensor(0.1840, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.3645, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.855499267578125, 0.8415805145705778
train metrics acc, f1 
0.949127197265625, 0.948870127978039
Epoch 5/8
----------
eval metrics, batch: 1024 acc, f1
0.832672119140625, 0.8146695960790942
eval metrics, batch: 2048 acc, f1
0.8531494140625, 0.8390743094107418
eval metrics, batch: 3072 acc, f1
0.859832763671875, 0.8474339810662681
eval metrics, batch: 4096 acc, f1
0.856201171875, 0.8427236315086782
train metrics, batch: 4096  acc, f1 
0.9488372802734375, 0.9486594496929979
eval metrics, batch: 5120 acc, f1
0.8546142578125, 0.8402414486921529
eval metrics, batch: 6144 acc, f1
0.843231201171875, 0.8231852132309916
eval metrics, batch: 7168 acc, f1
0.858184814453125, 0.8439713930765873
Epoch loss - train: tensor(0.1656, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.3757, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.854034423828125, 0.8384285376482113
train metrics acc, f1 
0.9542503356933594, 0.9538807043450507
Epoch 6/8
----------
eval metrics, batch: 1024 acc, f1
0.83905029296875, 0.8221607769085514
eval metrics, batch: 2048 acc, f1
0.842315673828125, 0.8214396793033141
eval metrics, batch: 3072 acc, f1
0.861053466796875, 0.8489833825334173
eval metrics, batch: 4096 acc, f1
0.847930908203125, 0.8298911002628614
train metrics, batch: 4096  acc, f1 
0.9549179077148438, 0.9544385587502795
eval metrics, batch: 5120 acc, f1
0.857208251953125, 0.8423358156147859
eval metrics, batch: 6144 acc, f1
0.85321044921875, 0.8375548801080716
eval metrics, batch: 7168 acc, f1
0.86285400390625, 0.8504094268024766
Epoch loss - train: tensor(0.1522, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.3810, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.8565673828125, 0.8418360479203123
train metrics acc, f1 
0.9591636657714844, 0.958949285782763
Epoch 7/8
----------
eval metrics, batch: 1024 acc, f1
0.838592529296875, 0.8194818935799857
eval metrics, batch: 2048 acc, f1
0.854644775390625, 0.8387227846815427
eval metrics, batch: 3072 acc, f1
0.859954833984375, 0.8469466030750759
eval metrics, batch: 4096 acc, f1
0.8553466796875, 0.8398432220570348
train metrics, batch: 4096  acc, f1 
0.95928955078125, 0.9589724663421986
eval metrics, batch: 5120 acc, f1
0.8427734375, 0.822308063737325
eval metrics, batch: 6144 acc, f1
0.851959228515625, 0.8347358021326611
eval metrics, batch: 7168 acc, f1
0.852142333984375, 0.8348389296062724
Epoch loss - train: tensor(0.1404, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4311, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.843719482421875, 0.8233589734745266
train metrics acc, f1 
0.9627532958984375, 0.9623436126066365
Epoch 8/8
----------
eval metrics, batch: 1024 acc, f1
0.837921142578125, 0.8161711259561801
eval metrics, batch: 2048 acc, f1
0.859771728515625, 0.8463159302986722
eval metrics, batch: 3072 acc, f1
0.867279052734375, 0.8572553910788723
eval metrics, batch: 4096 acc, f1
0.84832763671875, 0.8292917496736965
train metrics, batch: 4096  acc, f1 
0.962982177734375, 0.9625336864783055
eval metrics, batch: 5120 acc, f1
0.849151611328125, 0.8308871326422389
eval metrics, batch: 6144 acc, f1
0.85992431640625, 0.8459007587457195
eval metrics, batch: 7168 acc, f1
0.85760498046875, 0.8426625303479903
Epoch loss - train: tensor(0.1298, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4266, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.8519287109375, 0.8341536778780421
train metrics acc, f1 
0.9665107727050781, 0.9662043292643022
Training time 190m 8s
train_acc
0.4552345275878906	0.8886642456054688	0.91436767578125	0.9185333251953125	0.9309272766113281	0.9331169128417969	0.9421234130859375	0.9429435729980469	0.949127197265625	0.9488372802734375	0.9542503356933594	0.9549179077148438	0.9591636657714844	0.95928955078125	0.9627532958984375	0.962982177734375	0.9665107727050781
train_f1
0.4474332831610839	0.8865990597194701	0.9148497124736371	0.9181034482758621	0.9294126361010295	0.9327668255496033	0.9411960776714081	0.9426796506436419	0.948870127978039	0.9486594496929979	0.9538807043450507	0.9544385587502795	0.958949285782763	0.9589724663421986	0.9623436126066365	0.9625336864783055	0.9662043292643022
train_loss
tensor(0.3192, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.2456, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.2082, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.1840, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.1656, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.1522, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.1404, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.1298, device='cuda:0', grad_fn=<DivBackward0>)
valid_acc
0.468475341796875	0.758026123046875	0.821075439453125	0.8260498046875	0.82958984375	0.837158203125	0.834503173828125	0.845794677734375	0.85064697265625	0.796112060546875	0.8404541015625	0.8465576171875	0.84307861328125	0.843963623046875	0.85162353515625	0.85009765625	0.842987060546875	0.8251953125	0.84722900390625	0.841949462890625	0.85003662109375	0.840118408203125	0.851470947265625	0.846282958984375	0.84649658203125	0.826690673828125	0.843780517578125	0.8663330078125	0.85333251953125	0.85150146484375	0.860809326171875	0.8597412109375	0.855499267578125	0.832672119140625	0.8531494140625	0.859832763671875	0.856201171875	0.8546142578125	0.843231201171875	0.858184814453125	0.854034423828125	0.83905029296875	0.842315673828125	0.861053466796875	0.847930908203125	0.857208251953125	0.85321044921875	0.86285400390625	0.8565673828125	0.838592529296875	0.854644775390625	0.859954833984375	0.8553466796875	0.8427734375	0.851959228515625	0.852142333984375	0.843719482421875	0.837921142578125	0.859771728515625	0.867279052734375	0.84832763671875	0.849151611328125	0.85992431640625	0.85760498046875	0.8519287109375
valid_f1
0.47232405247371767	0.74482669841985	0.812689690425226	0.8091986342639084	0.8146574614976102	0.8245544814887881	0.8195281040966421	0.8331076394622982	0.840917956052529	0.7697080417772569	0.8281958593493263	0.834963565942362	0.8297125447079083	0.8286585570188667	0.8393364615689644	0.8366695484471637	0.8246122379410261	0.8098147287336477	0.8339855408900975	0.825086966800635	0.8366790747141718	0.8208582663703197	0.8361775892827089	0.8295719844357977	0.8282573067467905	0.8065274418287739	0.8257005686267833	0.858453981385729	0.8395004007480631	0.8351402629082532	0.847951461812848	0.847663241630759	0.8415805145705778	0.8146695960790942	0.8390743094107418	0.8474339810662681	0.8427236315086782	0.8402414486921529	0.8231852132309916	0.8439713930765873	0.8384285376482113	0.8221607769085514	0.8214396793033141	0.8489833825334173	0.8298911002628614	0.8423358156147859	0.8375548801080716	0.8504094268024766	0.8418360479203123	0.8194818935799857	0.8387227846815427	0.8469466030750759	0.8398432220570348	0.822308063737325	0.8347358021326611	0.8348389296062724	0.8233589734745266	0.8161711259561801	0.8463159302986722	0.8572553910788723	0.8292917496736965	0.8308871326422389	0.8459007587457195	0.8426625303479903	0.8341536778780421
valid_loss
tensor(0.3481, device='cuda:0')	tensor(0.3782, device='cuda:0')	tensor(0.3778, device='cuda:0')	tensor(0.3645, device='cuda:0')	tensor(0.3757, device='cuda:0')	tensor(0.3810, device='cuda:0')	tensor(0.4311, device='cuda:0')	tensor(0.4266, device='cuda:0')
Best model metrics: train, valid, test: acc, f1
0.9591636657714844, 0.958949285782763
0.8565673828125, 0.8418360479203123
0.820068359375, 0.7919988710929232
Model saved, path ./models/densenet_7-1558897741.pth
experiment validation
train set
Evaluation results
[[126404.   4668.]
 [  6037. 125035.]]
#############################
Accuracy
0.9591636657714844
------------------------
Recall
0.9539413452148438
------------------------
Specificity
0.964385986328125
------------------------
Precision
0.9640100845778432
------------------------
Fall_out
0.035614013671875
------------------------
F1
0.958949285782763
------------------------
#############################
valid set
Evaluation results
[[15560.   839.]
 [ 3861. 12508.]]
#############################
Accuracy
0.8565673828125
------------------------
Recall
0.764127313824913
------------------------
Specificity
0.9488383438014513
------------------------
Precision
0.9371394320821158
------------------------
Fall_out
0.05116165619854869
------------------------
F1
0.8418360479203123
------------------------
#############################
test set
Evaluation results
[[15647.   744.]
 [ 5152. 11225.]]
#############################
Accuracy
0.820068359375
------------------------
Recall
0.6854124687061123
------------------------
Specificity
0.9546092367762796
------------------------
Precision
0.937839418497786
------------------------
Fall_out
0.045390763223720335
------------------------
F1
0.7919988710929232
------------------------
#############################
AUC: 0.927063485332246
Experiment end
########################################
----------------------------------------
Starting experiment densenet_8-1558897741
Experiment parameters Experiment[name: densenet_8-1558897741, model: DenseNet(
  (features): Sequential(
    (conv0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (norm0): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu0): ReLU(inplace)
    (pool0): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (denseblock1): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(96, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (transition1): _Transition(
      (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock2): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer7): _DenseLayer(
        (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer8): _DenseLayer(
        (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer9): _DenseLayer(
        (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer10): _DenseLayer(
        (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer11): _DenseLayer(
        (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer12): _DenseLayer(
        (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (transition2): _Transition(
      (norm): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock3): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer7): _DenseLayer(
        (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer8): _DenseLayer(
        (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer9): _DenseLayer(
        (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer10): _DenseLayer(
        (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer11): _DenseLayer(
        (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer12): _DenseLayer(
        (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer13): _DenseLayer(
        (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer14): _DenseLayer(
        (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer15): _DenseLayer(
        (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer16): _DenseLayer(
        (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer17): _DenseLayer(
        (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer18): _DenseLayer(
        (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer19): _DenseLayer(
        (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer20): _DenseLayer(
        (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer21): _DenseLayer(
        (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer22): _DenseLayer(
        (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer23): _DenseLayer(
        (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer24): _DenseLayer(
        (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (transition3): _Transition(
      (norm): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock4): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer7): _DenseLayer(
        (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer8): _DenseLayer(
        (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer9): _DenseLayer(
        (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer10): _DenseLayer(
        (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer11): _DenseLayer(
        (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer12): _DenseLayer(
        (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer13): _DenseLayer(
        (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer14): _DenseLayer(
        (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer15): _DenseLayer(
        (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer16): _DenseLayer(
        (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (norm5): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (classifier): Linear(in_features=1024, out_features=1, bias=True)
), params: Params(lr: 1e-06, weight_decay: 0, batch_size: 32, num_epochs: 8), optimizer: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 1e-06
    weight_decay: 0
), criterion: BCEWithLogitsLoss()]
start metrics
eval metrics acc, f1
0.412841796875, 0.20627062706270627
train metrics acc, f1
0.4406929016113281, 0.26666666666666666
Epoch 1/8
----------
eval metrics, batch: 1024 acc, f1
0.47650146484375, 0.5143811572868305
eval metrics, batch: 2048 acc, f1
0.4918212890625, 0.5189507742084585
eval metrics, batch: 3072 acc, f1
0.505462646484375, 0.5219905017551104
eval metrics, batch: 4096 acc, f1
0.520111083984375, 0.5299094197482885
train metrics, batch: 4096  acc, f1 
0.5163078308105469, 0.5202698356847478
eval metrics, batch: 5120 acc, f1
0.533294677734375, 0.5403780843326421
eval metrics, batch: 6144 acc, f1
0.548095703125, 0.5546198267564967
eval metrics, batch: 7168 acc, f1
0.56036376953125, 0.5715050565139798
Epoch loss - train: tensor(0.7190, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.6795, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.57586669921875, 0.5851590949794042
train metrics acc, f1 
0.5697708129882812, 0.5752154393154152
Epoch 2/8
----------
eval metrics, batch: 1024 acc, f1
0.57623291015625, 0.5843510536398467
eval metrics, batch: 2048 acc, f1
0.586090087890625, 0.590501494520093
eval metrics, batch: 3072 acc, f1
0.599395751953125, 0.6037132075471698
eval metrics, batch: 4096 acc, f1
0.61083984375, 0.6092418949561806
train metrics, batch: 4096  acc, f1 
0.6070137023925781, 0.6041582613841147
eval metrics, batch: 5120 acc, f1
0.622344970703125, 0.6200607902735562
eval metrics, batch: 6144 acc, f1
0.634857177734375, 0.6358462428097513
eval metrics, batch: 7168 acc, f1
0.64471435546875, 0.6454501157266415
Epoch loss - train: tensor(0.6594, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.6298, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.652252197265625, 0.651390461039557
train metrics acc, f1 
0.646209716796875, 0.6450126310954605
Epoch 3/8
----------
eval metrics, batch: 1024 acc, f1
0.665069580078125, 0.6693380735741616
eval metrics, batch: 2048 acc, f1
0.67333984375, 0.6768311092325343
eval metrics, batch: 3072 acc, f1
0.679443359375, 0.6820823244552058
eval metrics, batch: 4096 acc, f1
0.686370849609375, 0.6859587471352178
train metrics, batch: 4096  acc, f1 
0.6774139404296875, 0.677140522751048
eval metrics, batch: 5120 acc, f1
0.692962646484375, 0.6926906747304438
eval metrics, batch: 6144 acc, f1
0.69903564453125, 0.6990172740035403
eval metrics, batch: 7168 acc, f1
0.70465087890625, 0.7035289792917535
Epoch loss - train: tensor(0.6109, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.5849, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.7088623046875, 0.7081676353624962
train metrics acc, f1 
0.70196533203125, 0.702700234405918
Epoch 4/8
----------
eval metrics, batch: 1024 acc, f1
0.717559814453125, 0.7205869033602029
eval metrics, batch: 2048 acc, f1
0.720123291015625, 0.7234735413839891
eval metrics, batch: 3072 acc, f1
0.724456787109375, 0.7273934965731711
eval metrics, batch: 4096 acc, f1
0.728668212890625, 0.7327702804243936
train metrics, batch: 4096  acc, f1 
0.721038818359375, 0.7263398971641557
eval metrics, batch: 5120 acc, f1
0.73260498046875, 0.7352870090634441
eval metrics, batch: 6144 acc, f1
0.737091064453125, 0.740644850528344
eval metrics, batch: 7168 acc, f1
0.7401123046875, 0.7424077434966727
Epoch loss - train: tensor(0.5715, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.5495, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.7430419921875, 0.7443837279902854
train metrics acc, f1 
0.7347297668457031, 0.7376866755438535
Epoch 5/8
----------
eval metrics, batch: 1024 acc, f1
0.73968505859375, 0.7327861662803082
eval metrics, batch: 2048 acc, f1
0.742645263671875, 0.7368552438605798
eval metrics, batch: 3072 acc, f1
0.7451171875, 0.7409911306828754
eval metrics, batch: 4096 acc, f1
0.7484130859375, 0.7442928039702233
train metrics, batch: 4096  acc, f1 
0.7445449829101562, 0.7433171068266319
eval metrics, batch: 5120 acc, f1
0.750396728515625, 0.7462853243167789
eval metrics, batch: 6144 acc, f1
0.752685546875, 0.7492419085339439
eval metrics, batch: 7168 acc, f1
0.754608154296875, 0.7514143506352985
Epoch loss - train: tensor(0.5496, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.5332, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.75689697265625, 0.7543783917118895
train metrics acc, f1 
0.7528724670410156, 0.7535371750535474
Epoch 6/8
----------
eval metrics, batch: 1024 acc, f1
0.76007080078125, 0.7578091306758672
eval metrics, batch: 2048 acc, f1
0.76153564453125, 0.7586036453506333
eval metrics, batch: 3072 acc, f1
0.763458251953125, 0.7596067363458735
eval metrics, batch: 4096 acc, f1
0.764312744140625, 0.7600434985241572
train metrics, batch: 4096  acc, f1 
0.7602005004882812, 0.7595014193785341
eval metrics, batch: 5120 acc, f1
0.7652587890625, 0.760448458424167
eval metrics, batch: 6144 acc, f1
0.766937255859375, 0.7631276945504172
eval metrics, batch: 7168 acc, f1
0.767486572265625, 0.7627292828002865
Epoch loss - train: tensor(0.5300, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.5181, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.768798828125, 0.7643399278337688
train metrics acc, f1 
0.7658233642578125, 0.7650328023210418
Epoch 7/8
----------
eval metrics, batch: 1024 acc, f1
0.76849365234375, 0.7591440182880366
eval metrics, batch: 2048 acc, f1
0.771728515625, 0.7663960024984384
eval metrics, batch: 3072 acc, f1
0.7720947265625, 0.7668726977586314
eval metrics, batch: 4096 acc, f1
0.7735595703125, 0.7685445130700606
train metrics, batch: 4096  acc, f1 
0.7707481384277344, 0.769541091609113
eval metrics, batch: 5120 acc, f1
0.773590087890625, 0.7686406586210123
eval metrics, batch: 6144 acc, f1
0.7744140625, 0.7694898341025321
eval metrics, batch: 7168 acc, f1
0.774932861328125, 0.7703994271660285
Epoch loss - train: tensor(0.5112, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.5007, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.775604248046875, 0.7707703338840914
train metrics acc, f1 
0.7747116088867188, 0.7739648956284111
Epoch 8/8
----------
eval metrics, batch: 1024 acc, f1
0.776641845703125, 0.7745572154628061
eval metrics, batch: 2048 acc, f1
0.776336669921875, 0.7724972838739718
eval metrics, batch: 3072 acc, f1
0.777069091796875, 0.7716116929810849
eval metrics, batch: 4096 acc, f1
0.777923583984375, 0.7716159809183065
train metrics, batch: 4096  acc, f1 
0.7778511047363281, 0.7763229154263634
eval metrics, batch: 5120 acc, f1
0.778472900390625, 0.772495063779108
eval metrics, batch: 6144 acc, f1
0.778961181640625, 0.7721395539056847
eval metrics, batch: 7168 acc, f1
0.7796630859375, 0.7727272727272727
Epoch loss - train: tensor(0.4993, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4923, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.78009033203125, 0.773010773010773
train metrics acc, f1 
0.7801475524902344, 0.7779340425613895
Training time 133m 41s
train_acc
0.4406929016113281	0.5163078308105469	0.5697708129882812	0.6070137023925781	0.646209716796875	0.6774139404296875	0.70196533203125	0.721038818359375	0.7347297668457031	0.7445449829101562	0.7528724670410156	0.7602005004882812	0.7658233642578125	0.7707481384277344	0.7747116088867188	0.7778511047363281	0.7801475524902344
train_f1
0.26666666666666666	0.5202698356847478	0.5752154393154152	0.6041582613841147	0.6450126310954605	0.677140522751048	0.702700234405918	0.7263398971641557	0.7376866755438535	0.7433171068266319	0.7535371750535474	0.7595014193785341	0.7650328023210418	0.769541091609113	0.7739648956284111	0.7763229154263634	0.7779340425613895
train_loss
tensor(0.7190, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.6594, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.6109, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.5715, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.5496, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.5300, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.5112, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.4993, device='cuda:0', grad_fn=<DivBackward0>)
valid_acc
0.412841796875	0.47650146484375	0.4918212890625	0.505462646484375	0.520111083984375	0.533294677734375	0.548095703125	0.56036376953125	0.57586669921875	0.57623291015625	0.586090087890625	0.599395751953125	0.61083984375	0.622344970703125	0.634857177734375	0.64471435546875	0.652252197265625	0.665069580078125	0.67333984375	0.679443359375	0.686370849609375	0.692962646484375	0.69903564453125	0.70465087890625	0.7088623046875	0.717559814453125	0.720123291015625	0.724456787109375	0.728668212890625	0.73260498046875	0.737091064453125	0.7401123046875	0.7430419921875	0.73968505859375	0.742645263671875	0.7451171875	0.7484130859375	0.750396728515625	0.752685546875	0.754608154296875	0.75689697265625	0.76007080078125	0.76153564453125	0.763458251953125	0.764312744140625	0.7652587890625	0.766937255859375	0.767486572265625	0.768798828125	0.76849365234375	0.771728515625	0.7720947265625	0.7735595703125	0.773590087890625	0.7744140625	0.774932861328125	0.775604248046875	0.776641845703125	0.776336669921875	0.777069091796875	0.777923583984375	0.778472900390625	0.778961181640625	0.7796630859375	0.78009033203125
valid_f1
0.20627062706270627	0.5143811572868305	0.5189507742084585	0.5219905017551104	0.5299094197482885	0.5403780843326421	0.5546198267564967	0.5715050565139798	0.5851590949794042	0.5843510536398467	0.590501494520093	0.6037132075471698	0.6092418949561806	0.6200607902735562	0.6358462428097513	0.6454501157266415	0.651390461039557	0.6693380735741616	0.6768311092325343	0.6820823244552058	0.6859587471352178	0.6926906747304438	0.6990172740035403	0.7035289792917535	0.7081676353624962	0.7205869033602029	0.7234735413839891	0.7273934965731711	0.7327702804243936	0.7352870090634441	0.740644850528344	0.7424077434966727	0.7443837279902854	0.7327861662803082	0.7368552438605798	0.7409911306828754	0.7442928039702233	0.7462853243167789	0.7492419085339439	0.7514143506352985	0.7543783917118895	0.7578091306758672	0.7586036453506333	0.7596067363458735	0.7600434985241572	0.760448458424167	0.7631276945504172	0.7627292828002865	0.7643399278337688	0.7591440182880366	0.7663960024984384	0.7668726977586314	0.7685445130700606	0.7686406586210123	0.7694898341025321	0.7703994271660285	0.7707703338840914	0.7745572154628061	0.7724972838739718	0.7716116929810849	0.7716159809183065	0.772495063779108	0.7721395539056847	0.7727272727272727	0.773010773010773
valid_loss
tensor(0.6795, device='cuda:0')	tensor(0.6298, device='cuda:0')	tensor(0.5849, device='cuda:0')	tensor(0.5495, device='cuda:0')	tensor(0.5332, device='cuda:0')	tensor(0.5181, device='cuda:0')	tensor(0.5007, device='cuda:0')	tensor(0.4923, device='cuda:0')
Best model metrics: train, valid, test: acc, f1
0.7801475524902344, 0.7779340425613895
0.78009033203125, 0.773010773010773
0.763031005859375, 0.7546525956586306
Model saved, path ./models/densenet_8-1558897741.pth
experiment validation
train set
Evaluation results
[[103562.  27510.]
 [ 30123. 100949.]]
#############################
Accuracy
0.7801475524902344
------------------------
Recall
0.7701797485351562
------------------------
Specificity
0.7901153564453125
------------------------
Precision
0.785846067616905
------------------------
Fall_out
0.2098846435546875
------------------------
F1
0.7779340425613895
------------------------
#############################
valid set
Evaluation results
[[13292.  3107.]
 [ 4099. 12270.]]
#############################
Accuracy
0.78009033203125
------------------------
Recall
0.7495876351640296
------------------------
Specificity
0.8105372278797488
------------------------
Precision
0.7979449827664694
------------------------
Fall_out
0.18946277212025123
------------------------
F1
0.773010773010773
------------------------
#############################
test set
Evaluation results
[[13061.  3330.]
 [ 4435. 11942.]]
#############################
Accuracy
0.763031005859375
------------------------
Recall
0.729193380961104
------------------------
Specificity
0.7968397291196389
------------------------
Precision
0.7819539025667889
------------------------
Fall_out
0.20316027088036118
------------------------
F1
0.7546525956586306
------------------------
#############################
AUC: 0.8405687443460095
Experiment end
########################################
----------------------------------------
Starting experiment densenet_9-1558897741
Experiment parameters Experiment[name: densenet_9-1558897741, model: DenseNet(
  (features): Sequential(
    (conv0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (norm0): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu0): ReLU(inplace)
    (pool0): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (denseblock1): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(96, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (transition1): _Transition(
      (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock2): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer7): _DenseLayer(
        (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer8): _DenseLayer(
        (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer9): _DenseLayer(
        (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer10): _DenseLayer(
        (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer11): _DenseLayer(
        (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer12): _DenseLayer(
        (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (transition2): _Transition(
      (norm): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock3): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer7): _DenseLayer(
        (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer8): _DenseLayer(
        (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer9): _DenseLayer(
        (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer10): _DenseLayer(
        (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer11): _DenseLayer(
        (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer12): _DenseLayer(
        (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer13): _DenseLayer(
        (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer14): _DenseLayer(
        (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer15): _DenseLayer(
        (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer16): _DenseLayer(
        (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer17): _DenseLayer(
        (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer18): _DenseLayer(
        (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer19): _DenseLayer(
        (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer20): _DenseLayer(
        (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer21): _DenseLayer(
        (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer22): _DenseLayer(
        (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer23): _DenseLayer(
        (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer24): _DenseLayer(
        (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (transition3): _Transition(
      (norm): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock4): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer7): _DenseLayer(
        (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer8): _DenseLayer(
        (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer9): _DenseLayer(
        (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer10): _DenseLayer(
        (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer11): _DenseLayer(
        (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer12): _DenseLayer(
        (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer13): _DenseLayer(
        (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer14): _DenseLayer(
        (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer15): _DenseLayer(
        (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer16): _DenseLayer(
        (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (norm5): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (classifier): Linear(in_features=1024, out_features=1, bias=True)
), params: Params(lr: 0.001, weight_decay: 0, batch_size: 32, num_epochs: 15), optimizer: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.001
    weight_decay: 0
), criterion: BCEWithLogitsLoss()]
start metrics
eval metrics acc, f1
0.497283935546875, 0.0
train metrics acc, f1
0.49729156494140625, 0.0014094325897187198
Epoch 1/15
----------
eval metrics, batch: 1024 acc, f1
0.6424560546875, 0.4815011506461321
eval metrics, batch: 2048 acc, f1
0.753631591796875, 0.7051605127643257
eval metrics, batch: 3072 acc, f1
0.8115234375, 0.8178063602572423
eval metrics, batch: 4096 acc, f1
0.739532470703125, 0.6728004600345026
train metrics, batch: 4096  acc, f1 
0.8078041076660156, 0.7778772181196958
eval metrics, batch: 5120 acc, f1
0.803955078125, 0.788906414300736
eval metrics, batch: 6144 acc, f1
0.818359375, 0.8129948473042604
eval metrics, batch: 7168 acc, f1
0.82489013671875, 0.82253974144863
Epoch loss - train: tensor(0.3661, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4149, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.81475830078125, 0.8057351340971645
train metrics acc, f1 
0.8804473876953125, 0.8829811067134643
Epoch 2/15
----------
eval metrics, batch: 1024 acc, f1
0.809417724609375, 0.8009688625426268
eval metrics, batch: 2048 acc, f1
0.818145751953125, 0.8090859577740044
eval metrics, batch: 3072 acc, f1
0.830780029296875, 0.8326946866608333
eval metrics, batch: 4096 acc, f1
0.832275390625, 0.8270610446821901
train metrics, batch: 4096  acc, f1 
0.8815193176269531, 0.884138903499446
eval metrics, batch: 5120 acc, f1
0.817169189453125, 0.8101410236095706
eval metrics, batch: 6144 acc, f1
0.821685791015625, 0.8117165597911901
eval metrics, batch: 7168 acc, f1
0.819427490234375, 0.8012895859220204
Epoch loss - train: tensor(0.3041, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4408, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.80523681640625, 0.784216932648093
train metrics acc, f1 
0.9024314880371094, 0.9021009802533119
Epoch 3/15
----------
eval metrics, batch: 1024 acc, f1
0.82110595703125, 0.7969940434963292
eval metrics, batch: 2048 acc, f1
0.78759765625, 0.7559436145592258
eval metrics, batch: 3072 acc, f1
0.834869384765625, 0.8367771711260595
eval metrics, batch: 4096 acc, f1
0.802490234375, 0.7650134340280299
train metrics, batch: 4096  acc, f1 
0.8872947692871094, 0.8778804224275115
eval metrics, batch: 5120 acc, f1
0.845367431640625, 0.8312631123247527
eval metrics, batch: 6144 acc, f1
0.8131103515625, 0.7814730231230373
eval metrics, batch: 7168 acc, f1
0.851593017578125, 0.8445083932853718
Epoch loss - train: tensor(0.2509, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.3720, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.829681396484375, 0.8203675689594129
train metrics acc, f1 
0.9109344482421875, 0.9130603156162261
Epoch 4/15
----------
eval metrics, batch: 1024 acc, f1
0.853607177734375, 0.843771372740596
eval metrics, batch: 2048 acc, f1
0.864013671875, 0.8614686314742275
eval metrics, batch: 3072 acc, f1
0.829803466796875, 0.816116588084012
eval metrics, batch: 4096 acc, f1
0.8516845703125, 0.8435890834191555
train metrics, batch: 4096  acc, f1 
0.9254646301269531, 0.9268654202459155
eval metrics, batch: 5120 acc, f1
0.8682861328125, 0.8659710576982796
eval metrics, batch: 6144 acc, f1
0.838897705078125, 0.8250654471948835
eval metrics, batch: 7168 acc, f1
0.832550048828125, 0.8148722966361888
Epoch loss - train: tensor(0.2128, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.3298, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.861785888671875, 0.8538513666139598
train metrics acc, f1 
0.9346466064453125, 0.9352742494880727
Epoch 5/15
----------
eval metrics, batch: 1024 acc, f1
0.84918212890625, 0.8357921318447634
eval metrics, batch: 2048 acc, f1
0.789703369140625, 0.7436479297645177
eval metrics, batch: 3072 acc, f1
0.85260009765625, 0.8548590660496425
eval metrics, batch: 4096 acc, f1
0.8623046875, 0.8525875588081547
train metrics, batch: 4096  acc, f1 
0.9338493347167969, 0.9340071773521431
eval metrics, batch: 5120 acc, f1
0.808685302734375, 0.7713128807500091
eval metrics, batch: 6144 acc, f1
0.85565185546875, 0.843914994720169
eval metrics, batch: 7168 acc, f1
0.796173095703125, 0.7531325078543707
Epoch loss - train: tensor(0.1863, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.3544, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.856231689453125, 0.8461513340517945
train metrics acc, f1 
0.9382820129394531, 0.9385261318084237
Epoch 6/15
----------
eval metrics, batch: 1024 acc, f1
0.84521484375, 0.8254044750430293
eval metrics, batch: 2048 acc, f1
0.873199462890625, 0.8702495081660057
eval metrics, batch: 3072 acc, f1
0.819183349609375, 0.7913952751469915
eval metrics, batch: 4096 acc, f1
0.8443603515625, 0.8263652458123383
train metrics, batch: 4096  acc, f1 
0.9483108520507812, 0.9479022484697487
eval metrics, batch: 5120 acc, f1
0.8673095703125, 0.8576573037386237
eval metrics, batch: 6144 acc, f1
0.809051513671875, 0.7737970427677958
eval metrics, batch: 7168 acc, f1
0.881195068359375, 0.8820124261251705
Epoch loss - train: tensor(0.1670, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4487, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.826446533203125, 0.7963473589973142
train metrics acc, f1 
0.9426536560058594, 0.9403435809724874
Epoch 7/15
----------
eval metrics, batch: 1024 acc, f1
0.850799560546875, 0.8349704641350211
eval metrics, batch: 2048 acc, f1
0.836212158203125, 0.8115982728964088
eval metrics, batch: 3072 acc, f1
0.868804931640625, 0.8595786379225869
eval metrics, batch: 4096 acc, f1
0.877197265625, 0.8694100084377231
train metrics, batch: 4096  acc, f1 
0.9459457397460938, 0.9459791236189794
eval metrics, batch: 5120 acc, f1
0.87139892578125, 0.8625839692167221
eval metrics, batch: 6144 acc, f1
0.876861572265625, 0.8723303274798292
eval metrics, batch: 7168 acc, f1
0.861663818359375, 0.849246732515215
Epoch loss - train: tensor(0.1535, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.2921, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.877105712890625, 0.8705852106565543
train metrics acc, f1 
0.9521942138671875, 0.9527283426252141
Epoch 8/15
----------
eval metrics, batch: 1024 acc, f1
0.847747802734375, 0.8283384371881775
eval metrics, batch: 2048 acc, f1
0.834381103515625, 0.809865816487405
eval metrics, batch: 3072 acc, f1
0.874267578125, 0.8660336866749041
eval metrics, batch: 4096 acc, f1
0.875579833984375, 0.8700392081859042
train metrics, batch: 4096  acc, f1 
0.9435501098632812, 0.9442900920843592
eval metrics, batch: 5120 acc, f1
0.845001220703125, 0.8261747493069578
eval metrics, batch: 6144 acc, f1
0.852752685546875, 0.8334311457865847
eval metrics, batch: 7168 acc, f1
0.869171142578125, 0.8598790652067331
Epoch loss - train: tensor(0.1407, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.3394, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.865203857421875, 0.8539400152111372
train metrics acc, f1 
0.9581146240234375, 0.958184490939973
Epoch 9/15
----------
eval metrics, batch: 1024 acc, f1
0.872711181640625, 0.8620016542597188
eval metrics, batch: 2048 acc, f1
0.874176025390625, 0.8651689067660813
eval metrics, batch: 3072 acc, f1
0.8665771484375, 0.8547701302152538
eval metrics, batch: 4096 acc, f1
0.876861572265625, 0.8704530131312807
train metrics, batch: 4096  acc, f1 
0.9487648010253906, 0.9495429904540793
eval metrics, batch: 5120 acc, f1
0.87005615234375, 0.8621560375526061
eval metrics, batch: 6144 acc, f1
0.845733642578125, 0.8251651506242866
eval metrics, batch: 7168 acc, f1
0.874969482421875, 0.8675695768820506
Epoch loss - train: tensor(0.1302, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.3881, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.834564208984375, 0.8097026713939692
train metrics acc, f1 
0.9587783813476562, 0.9580029847961944
Epoch 10/15
----------
eval metrics, batch: 1024 acc, f1
0.873321533203125, 0.8612123441104684
eval metrics, batch: 2048 acc, f1
0.880157470703125, 0.8733021455073399
eval metrics, batch: 3072 acc, f1
0.873870849609375, 0.8621552212920655
eval metrics, batch: 4096 acc, f1
0.865386962890625, 0.8518058121955316
train metrics, batch: 4096  acc, f1 
0.9642105102539062, 0.9640324175950561
eval metrics, batch: 5120 acc, f1
0.849578857421875, 0.8295348435068304
eval metrics, batch: 6144 acc, f1
0.8759765625, 0.8680605155509382
eval metrics, batch: 7168 acc, f1
0.866546630859375, 0.8616708316199032
Epoch loss - train: tensor(0.1216, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.3786, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.851898193359375, 0.8370875155258652
train metrics acc, f1 
0.9590377807617188, 0.9590577720839434
Epoch 11/15
----------
eval metrics, batch: 1024 acc, f1
0.887237548828125, 0.8816425894487332
eval metrics, batch: 2048 acc, f1
0.84033203125, 0.8206622334955782
eval metrics, batch: 3072 acc, f1
0.8253173828125, 0.8006547328829142
eval metrics, batch: 4096 acc, f1
0.877166748046875, 0.8734157310438092
train metrics, batch: 4096  acc, f1 
0.9526443481445312, 0.9539095566941412
eval metrics, batch: 5120 acc, f1
0.855987548828125, 0.8389254872512544
eval metrics, batch: 6144 acc, f1
0.85943603515625, 0.8428737122194173
eval metrics, batch: 7168 acc, f1
0.840301513671875, 0.8179889395151473
Epoch loss - train: tensor(0.1145, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.3973, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.864990234375, 0.8528570478281114
train metrics acc, f1 
0.9667129516601562, 0.9667844146352604
Epoch 12/15
----------
eval metrics, batch: 1024 acc, f1
0.866058349609375, 0.8530189879776297
eval metrics, batch: 2048 acc, f1
0.8594970703125, 0.8430811179277437
eval metrics, batch: 3072 acc, f1
0.869659423828125, 0.8562582034799583
eval metrics, batch: 4096 acc, f1
0.82281494140625, 0.7895309214819111
train metrics, batch: 4096  acc, f1 
0.9568557739257812, 0.9554531490015361
eval metrics, batch: 5120 acc, f1
0.817657470703125, 0.783710407239819
eval metrics, batch: 6144 acc, f1
0.8350830078125, 0.8088297721805575
eval metrics, batch: 7168 acc, f1
0.8658447265625, 0.8518568443755477
Epoch loss - train: tensor(0.1067, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.5130, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.839324951171875, 0.8165696965473992
train metrics acc, f1 
0.9667549133300781, 0.9663077726016276
Epoch 13/15
----------
eval metrics, batch: 1024 acc, f1
0.84442138671875, 0.8240734350196701
eval metrics, batch: 2048 acc, f1
0.870208740234375, 0.8596415959869311
eval metrics, batch: 3072 acc, f1
0.873443603515625, 0.8637603075002463
eval metrics, batch: 4096 acc, f1
0.87127685546875, 0.8604974202936897
train metrics, batch: 4096  acc, f1 
0.9658546447753906, 0.9660340987139935
eval metrics, batch: 5120 acc, f1
0.856201171875, 0.8363661619669398
eval metrics, batch: 6144 acc, f1
0.831146240234375, 0.8048806291215573
eval metrics, batch: 7168 acc, f1
0.8309326171875, 0.803921568627451
Epoch loss - train: tensor(0.1006, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4315, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.85125732421875, 0.832543118257404
train metrics acc, f1 
0.9722366333007812, 0.9720124286659181
Epoch 14/15
----------
eval metrics, batch: 1024 acc, f1
0.8643798828125, 0.8505615710538704
eval metrics, batch: 2048 acc, f1
0.8719482421875, 0.8594210667381399
eval metrics, batch: 3072 acc, f1
0.877471923828125, 0.8687179151816369
eval metrics, batch: 4096 acc, f1
0.847747802734375, 0.8256874323049509
train metrics, batch: 4096  acc, f1 
0.9710731506347656, 0.9705739686531081
eval metrics, batch: 5120 acc, f1
0.874359130859375, 0.8648346958206113
eval metrics, batch: 6144 acc, f1
0.88311767578125, 0.8779710699037787
eval metrics, batch: 7168 acc, f1
0.87188720703125, 0.8613239957716702
Epoch loss - train: tensor(0.0943, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.5562, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.83416748046875, 0.807468820861678
train metrics acc, f1 
0.9716224670410156, 0.971198036247343
Epoch 15/15
----------
eval metrics, batch: 1024 acc, f1
0.85076904296875, 0.8331285831285832
eval metrics, batch: 2048 acc, f1
0.8734130859375, 0.8643735286424274
eval metrics, batch: 3072 acc, f1
0.881622314453125, 0.8768923164810054
eval metrics, batch: 4096 acc, f1
0.813385009765625, 0.776359580148484
train metrics, batch: 4096  acc, f1 
0.963592529296875, 0.9625546339817481
eval metrics, batch: 5120 acc, f1
0.849700927734375, 0.8294962783451618
eval metrics, batch: 6144 acc, f1
0.820281982421875, 0.7857376750955066
eval metrics, batch: 7168 acc, f1
0.886444091796875, 0.884516309239316
Epoch loss - train: tensor(0.0900, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4103, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.8509521484375, 0.8342046303211351
train metrics acc, f1 
0.9713287353515625, 0.971366964578238
Training time 353m 17s
train_acc
0.49729156494140625	0.8078041076660156	0.8804473876953125	0.8815193176269531	0.9024314880371094	0.8872947692871094	0.9109344482421875	0.9254646301269531	0.9346466064453125	0.9338493347167969	0.9382820129394531	0.9483108520507812	0.9426536560058594	0.9459457397460938	0.9521942138671875	0.9435501098632812	0.9581146240234375	0.9487648010253906	0.9587783813476562	0.9642105102539062	0.9590377807617188	0.9526443481445312	0.9667129516601562	0.9568557739257812	0.9667549133300781	0.9658546447753906	0.9722366333007812	0.9710731506347656	0.9716224670410156	0.963592529296875	0.9713287353515625
train_f1
0.0014094325897187198	0.7778772181196958	0.8829811067134643	0.884138903499446	0.9021009802533119	0.8778804224275115	0.9130603156162261	0.9268654202459155	0.9352742494880727	0.9340071773521431	0.9385261318084237	0.9479022484697487	0.9403435809724874	0.9459791236189794	0.9527283426252141	0.9442900920843592	0.958184490939973	0.9495429904540793	0.9580029847961944	0.9640324175950561	0.9590577720839434	0.9539095566941412	0.9667844146352604	0.9554531490015361	0.9663077726016276	0.9660340987139935	0.9720124286659181	0.9705739686531081	0.971198036247343	0.9625546339817481	0.971366964578238
train_loss
tensor(0.3661, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.3041, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.2509, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.2128, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.1863, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.1670, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.1535, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.1407, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.1302, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.1216, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.1145, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.1067, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.1006, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.0943, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.0900, device='cuda:0', grad_fn=<DivBackward0>)
valid_acc
0.497283935546875	0.6424560546875	0.753631591796875	0.8115234375	0.739532470703125	0.803955078125	0.818359375	0.82489013671875	0.81475830078125	0.809417724609375	0.818145751953125	0.830780029296875	0.832275390625	0.817169189453125	0.821685791015625	0.819427490234375	0.80523681640625	0.82110595703125	0.78759765625	0.834869384765625	0.802490234375	0.845367431640625	0.8131103515625	0.851593017578125	0.829681396484375	0.853607177734375	0.864013671875	0.829803466796875	0.8516845703125	0.8682861328125	0.838897705078125	0.832550048828125	0.861785888671875	0.84918212890625	0.789703369140625	0.85260009765625	0.8623046875	0.808685302734375	0.85565185546875	0.796173095703125	0.856231689453125	0.84521484375	0.873199462890625	0.819183349609375	0.8443603515625	0.8673095703125	0.809051513671875	0.881195068359375	0.826446533203125	0.850799560546875	0.836212158203125	0.868804931640625	0.877197265625	0.87139892578125	0.876861572265625	0.861663818359375	0.877105712890625	0.847747802734375	0.834381103515625	0.874267578125	0.875579833984375	0.845001220703125	0.852752685546875	0.869171142578125	0.865203857421875	0.872711181640625	0.874176025390625	0.8665771484375	0.876861572265625	0.87005615234375	0.845733642578125	0.874969482421875	0.834564208984375	0.873321533203125	0.880157470703125	0.873870849609375	0.865386962890625	0.849578857421875	0.8759765625	0.866546630859375	0.851898193359375	0.887237548828125	0.84033203125	0.8253173828125	0.877166748046875	0.855987548828125	0.85943603515625	0.840301513671875	0.864990234375	0.866058349609375	0.8594970703125	0.869659423828125	0.82281494140625	0.817657470703125	0.8350830078125	0.8658447265625	0.839324951171875	0.84442138671875	0.870208740234375	0.873443603515625	0.87127685546875	0.856201171875	0.831146240234375	0.8309326171875	0.85125732421875	0.8643798828125	0.8719482421875	0.877471923828125	0.847747802734375	0.874359130859375	0.88311767578125	0.87188720703125	0.83416748046875	0.85076904296875	0.8734130859375	0.881622314453125	0.813385009765625	0.849700927734375	0.820281982421875	0.886444091796875	0.8509521484375
valid_f1
0.0	0.4815011506461321	0.7051605127643257	0.8178063602572423	0.6728004600345026	0.788906414300736	0.8129948473042604	0.82253974144863	0.8057351340971645	0.8009688625426268	0.8090859577740044	0.8326946866608333	0.8270610446821901	0.8101410236095706	0.8117165597911901	0.8012895859220204	0.784216932648093	0.7969940434963292	0.7559436145592258	0.8367771711260595	0.7650134340280299	0.8312631123247527	0.7814730231230373	0.8445083932853718	0.8203675689594129	0.843771372740596	0.8614686314742275	0.816116588084012	0.8435890834191555	0.8659710576982796	0.8250654471948835	0.8148722966361888	0.8538513666139598	0.8357921318447634	0.7436479297645177	0.8548590660496425	0.8525875588081547	0.7713128807500091	0.843914994720169	0.7531325078543707	0.8461513340517945	0.8254044750430293	0.8702495081660057	0.7913952751469915	0.8263652458123383	0.8576573037386237	0.7737970427677958	0.8820124261251705	0.7963473589973142	0.8349704641350211	0.8115982728964088	0.8595786379225869	0.8694100084377231	0.8625839692167221	0.8723303274798292	0.849246732515215	0.8705852106565543	0.8283384371881775	0.809865816487405	0.8660336866749041	0.8700392081859042	0.8261747493069578	0.8334311457865847	0.8598790652067331	0.8539400152111372	0.8620016542597188	0.8651689067660813	0.8547701302152538	0.8704530131312807	0.8621560375526061	0.8251651506242866	0.8675695768820506	0.8097026713939692	0.8612123441104684	0.8733021455073399	0.8621552212920655	0.8518058121955316	0.8295348435068304	0.8680605155509382	0.8616708316199032	0.8370875155258652	0.8816425894487332	0.8206622334955782	0.8006547328829142	0.8734157310438092	0.8389254872512544	0.8428737122194173	0.8179889395151473	0.8528570478281114	0.8530189879776297	0.8430811179277437	0.8562582034799583	0.7895309214819111	0.783710407239819	0.8088297721805575	0.8518568443755477	0.8165696965473992	0.8240734350196701	0.8596415959869311	0.8637603075002463	0.8604974202936897	0.8363661619669398	0.8048806291215573	0.803921568627451	0.832543118257404	0.8505615710538704	0.8594210667381399	0.8687179151816369	0.8256874323049509	0.8648346958206113	0.8779710699037787	0.8613239957716702	0.807468820861678	0.8331285831285832	0.8643735286424274	0.8768923164810054	0.776359580148484	0.8294962783451618	0.7857376750955066	0.884516309239316	0.8342046303211351
valid_loss
tensor(0.4149, device='cuda:0')	tensor(0.4408, device='cuda:0')	tensor(0.3720, device='cuda:0')	tensor(0.3298, device='cuda:0')	tensor(0.3544, device='cuda:0')	tensor(0.4487, device='cuda:0')	tensor(0.2921, device='cuda:0')	tensor(0.3394, device='cuda:0')	tensor(0.3881, device='cuda:0')	tensor(0.3786, device='cuda:0')	tensor(0.3973, device='cuda:0')	tensor(0.5130, device='cuda:0')	tensor(0.4315, device='cuda:0')	tensor(0.5562, device='cuda:0')	tensor(0.4103, device='cuda:0')
Best model metrics: train, valid, test: acc, f1
0.9521942138671875, 0.9527283426252141
0.877105712890625, 0.8705852106565543
0.8125, 0.7861617708478351
Model saved, path ./models/densenet_9-1558897741.pth
experiment validation
train set
Evaluation results
[[123325.   7747.]
 [  4785. 126287.]]
#############################
Accuracy
0.9521942138671875
------------------------
Recall
0.9634933471679688
------------------------
Specificity
0.9408950805664062
------------------------
Precision
0.9422012325230912
------------------------
Fall_out
0.05910491943359375
------------------------
F1
0.9527283426252141
------------------------
#############################
valid set
Evaluation results
[[15196.  1203.]
 [ 2824. 13545.]]
#############################
Accuracy
0.877105712890625
------------------------
Recall
0.8274787708473333
------------------------
Specificity
0.9266418684066101
------------------------
Precision
0.9184296175752644
------------------------
Fall_out
0.07335813159338984
------------------------
F1
0.8705852106565543
------------------------
#############################
test set
Evaluation results
[[15330.  1061.]
 [ 5083. 11294.]]
#############################
Accuracy
0.8125
------------------------
Recall
0.6896256945716553
------------------------
Specificity
0.935269355133915
------------------------
Precision
0.9141238365034399
------------------------
Fall_out
0.06473064486608504
------------------------
F1
0.7861617708478351
------------------------
#############################
AUC: 0.8787822259974818
Experiment end
########################################
----------------------------------------
Starting experiment densenet_10-1558897741
Experiment parameters Experiment[name: densenet_10-1558897741, model: DenseNet(
  (features): Sequential(
    (conv0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (norm0): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu0): ReLU(inplace)
    (pool0): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (denseblock1): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(96, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (transition1): _Transition(
      (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock2): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer7): _DenseLayer(
        (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer8): _DenseLayer(
        (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer9): _DenseLayer(
        (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer10): _DenseLayer(
        (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer11): _DenseLayer(
        (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer12): _DenseLayer(
        (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (transition2): _Transition(
      (norm): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock3): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer7): _DenseLayer(
        (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer8): _DenseLayer(
        (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer9): _DenseLayer(
        (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer10): _DenseLayer(
        (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer11): _DenseLayer(
        (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer12): _DenseLayer(
        (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer13): _DenseLayer(
        (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer14): _DenseLayer(
        (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer15): _DenseLayer(
        (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer16): _DenseLayer(
        (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer17): _DenseLayer(
        (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer18): _DenseLayer(
        (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer19): _DenseLayer(
        (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer20): _DenseLayer(
        (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer21): _DenseLayer(
        (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer22): _DenseLayer(
        (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer23): _DenseLayer(
        (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer24): _DenseLayer(
        (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (transition3): _Transition(
      (norm): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock4): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer7): _DenseLayer(
        (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer8): _DenseLayer(
        (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer9): _DenseLayer(
        (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer10): _DenseLayer(
        (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer11): _DenseLayer(
        (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer12): _DenseLayer(
        (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer13): _DenseLayer(
        (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer14): _DenseLayer(
        (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer15): _DenseLayer(
        (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer16): _DenseLayer(
        (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (norm5): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (classifier): Linear(in_features=1024, out_features=1, bias=True)
), params: Params(lr: 0.0001, weight_decay: 0, batch_size: 32, num_epochs: 15), optimizer: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.0001
    weight_decay: 0
), criterion: BCEWithLogitsLoss()]
start metrics
eval metrics acc, f1
0.499542236328125, 0.6662596414107496
train metrics acc, f1
0.5, 0.6666666666666666
Epoch 1/15
----------
eval metrics, batch: 1024 acc, f1
0.80865478515625, 0.8013307984790875
eval metrics, batch: 2048 acc, f1
0.819549560546875, 0.8284047708871413
eval metrics, batch: 3072 acc, f1
0.81817626953125, 0.805978898007034
eval metrics, batch: 4096 acc, f1
0.826751708984375, 0.8169359259617555
train metrics, batch: 4096  acc, f1 
0.8777732849121094, 0.8771937893578938
eval metrics, batch: 5120 acc, f1
0.82550048828125, 0.8156078684295388
eval metrics, batch: 6144 acc, f1
0.819183349609375, 0.8069340806152041
eval metrics, batch: 7168 acc, f1
0.83587646484375, 0.8301111953500127
Epoch loss - train: tensor(0.3332, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.3925, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.82733154296875, 0.8276366295010052
train metrics acc, f1 
0.8778038024902344, 0.8844795937870772
Epoch 2/15
----------
eval metrics, batch: 1024 acc, f1
0.832794189453125, 0.8264766429136975
eval metrics, batch: 2048 acc, f1
0.843780517578125, 0.8371767549858457
eval metrics, batch: 3072 acc, f1
0.842376708984375, 0.8426791751698091
eval metrics, batch: 4096 acc, f1
0.824615478515625, 0.8121834046864277
train metrics, batch: 4096  acc, f1 
0.9057464599609375, 0.9068936670510299
eval metrics, batch: 5120 acc, f1
0.8232421875, 0.8035677948857085
eval metrics, batch: 6144 acc, f1
0.8436279296875, 0.8403439895307534
eval metrics, batch: 7168 acc, f1
0.80096435546875, 0.7698983911939035
Epoch loss - train: tensor(0.2521, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.3889, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.84716796875, 0.8374448195273955
train metrics acc, f1 
0.9219627380371094, 0.9226844450491514
Epoch 3/15
----------
eval metrics, batch: 1024 acc, f1
0.833770751953125, 0.8205212692345711
eval metrics, batch: 2048 acc, f1
0.794219970703125, 0.7591527663678251
eval metrics, batch: 3072 acc, f1
0.7393798828125, 0.6645718774548312
eval metrics, batch: 4096 acc, f1
0.800048828125, 0.7666999002991027
train metrics, batch: 4096  acc, f1 
0.9200096130371094, 0.917410090077316
eval metrics, batch: 5120 acc, f1
0.82537841796875, 0.8023215642921302
eval metrics, batch: 6144 acc, f1
0.740447998046875, 0.6603841392804376
eval metrics, batch: 7168 acc, f1
0.814208984375, 0.7871775152066001
Epoch loss - train: tensor(0.2111, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4160, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.83154296875, 0.8145535174360008
train metrics acc, f1 
0.9376296997070312, 0.9378780510045898
Epoch 4/15
----------
eval metrics, batch: 1024 acc, f1
0.831787109375, 0.8124149196841819
eval metrics, batch: 2048 acc, f1
0.84844970703125, 0.8394542868227078
eval metrics, batch: 3072 acc, f1
0.8529052734375, 0.8508478772125263
eval metrics, batch: 4096 acc, f1
0.8341064453125, 0.819365986575397
train metrics, batch: 4096  acc, f1 
0.9365158081054688, 0.9372639197798469
eval metrics, batch: 5120 acc, f1
0.81561279296875, 0.7845374794950432
eval metrics, batch: 6144 acc, f1
0.818603515625, 0.7931946280704196
eval metrics, batch: 7168 acc, f1
0.77178955078125, 0.714971794480866
Epoch loss - train: tensor(0.1844, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.5595, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.778472900390625, 0.7300383056268362
train metrics acc, f1 
0.9310188293457031, 0.9280670838189723
Epoch 5/15
----------
eval metrics, batch: 1024 acc, f1
0.834716796875, 0.8171629194517588
eval metrics, batch: 2048 acc, f1
0.848663330078125, 0.8430249121585262
eval metrics, batch: 3072 acc, f1
0.85504150390625, 0.8476782965623396
eval metrics, batch: 4096 acc, f1
0.787322998046875, 0.7402050326188258
train metrics, batch: 4096  acc, f1 
0.9413070678710938, 0.9389686632288774
eval metrics, batch: 5120 acc, f1
0.848175048828125, 0.8478825867604342
eval metrics, batch: 6144 acc, f1
0.826507568359375, 0.8036472904362242
eval metrics, batch: 7168 acc, f1
0.851165771484375, 0.8458353089932037
Epoch loss - train: tensor(0.1639, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.3831, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.841583251953125, 0.8357850115466136
train metrics acc, f1 
0.9354743957519531, 0.9376329654852019
Epoch 6/15
----------
eval metrics, batch: 1024 acc, f1
0.83172607421875, 0.8103590590177466
eval metrics, batch: 2048 acc, f1
0.842926025390625, 0.8313399089032343
eval metrics, batch: 3072 acc, f1
0.835845947265625, 0.83162738285285
eval metrics, batch: 4096 acc, f1
0.837493896484375, 0.8224112056028015
train metrics, batch: 4096  acc, f1 
0.9545135498046875, 0.9549493728275653
eval metrics, batch: 5120 acc, f1
0.798919677734375, 0.7604087124104578
eval metrics, batch: 6144 acc, f1
0.83740234375, 0.8203641267700607
eval metrics, batch: 7168 acc, f1
0.83575439453125, 0.8172247503905454
Epoch loss - train: tensor(0.1471, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4099, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.83673095703125, 0.817530695770805
train metrics acc, f1 
0.9590568542480469, 0.9588829084222422
Epoch 7/15
----------
eval metrics, batch: 1024 acc, f1
0.820770263671875, 0.7943123314537877
eval metrics, batch: 2048 acc, f1
0.802337646484375, 0.7656572234885488
eval metrics, batch: 3072 acc, f1
0.842437744140625, 0.8277104815296826
eval metrics, batch: 4096 acc, f1
0.814605712890625, 0.7810416291223644
train metrics, batch: 4096  acc, f1 
0.9582939147949219, 0.9574530185279593
eval metrics, batch: 5120 acc, f1
0.84051513671875, 0.8214432144321443
eval metrics, batch: 6144 acc, f1
0.843017578125, 0.8265326768732717
eval metrics, batch: 7168 acc, f1
0.863555908203125, 0.8546347173001267
Epoch loss - train: tensor(0.1334, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.3905, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.85675048828125, 0.8471507652230543
train metrics acc, f1 
0.9550628662109375, 0.9557741402613005
Epoch 8/15
----------
eval metrics, batch: 1024 acc, f1
0.813262939453125, 0.7814720902824899
eval metrics, batch: 2048 acc, f1
0.850830078125, 0.8389137885578698
eval metrics, batch: 3072 acc, f1
0.827178955078125, 0.8044881753840842
eval metrics, batch: 4096 acc, f1
0.8597412109375, 0.8532192130812468
train metrics, batch: 4096  acc, f1 
0.953033447265625, 0.9541759714158107
eval metrics, batch: 5120 acc, f1
0.808349609375, 0.7712370683374618
eval metrics, batch: 6144 acc, f1
0.8590087890625, 0.8552812930710437
eval metrics, batch: 7168 acc, f1
0.824676513671875, 0.8036367365075024
Epoch loss - train: tensor(0.1207, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4667, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.8277587890625, 0.8044216508420542
train metrics acc, f1 
0.95843505859375, 0.9582547928830858
Epoch 9/15
----------
eval metrics, batch: 1024 acc, f1
0.835906982421875, 0.8144262295081968
eval metrics, batch: 2048 acc, f1
0.832061767578125, 0.8082912384601986
eval metrics, batch: 3072 acc, f1
0.853515625, 0.8432192317742357
eval metrics, batch: 4096 acc, f1
0.82769775390625, 0.802269384324438
train metrics, batch: 4096  acc, f1 
0.9689598083496094, 0.968752760102455
eval metrics, batch: 5120 acc, f1
0.838836669921875, 0.8213645435172344
eval metrics, batch: 6144 acc, f1
0.788482666015625, 0.7433818356844015
eval metrics, batch: 7168 acc, f1
0.771636962890625, 0.7145527369826435
Epoch loss - train: tensor(0.1096, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.5534, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.8106689453125, 0.7786341254549347
train metrics acc, f1 
0.9676666259765625, 0.9673490142299128
Epoch 10/15
----------
eval metrics, batch: 1024 acc, f1
0.833038330078125, 0.8140696686491079
eval metrics, batch: 2048 acc, f1
0.83245849609375, 0.8111714934305565
eval metrics, batch: 3072 acc, f1
0.799774169921875, 0.7598550565499067
eval metrics, batch: 4096 acc, f1
0.82025146484375, 0.7932607932607932
train metrics, batch: 4096  acc, f1 
0.9704132080078125, 0.9702832971900168
eval metrics, batch: 5120 acc, f1
0.826171875, 0.8015331010452962
eval metrics, batch: 6144 acc, f1
0.838836669921875, 0.8215818101962904
eval metrics, batch: 7168 acc, f1
0.825469970703125, 0.800863539816846
Epoch loss - train: tensor(0.1000, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.7729, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.7672119140625, 0.7059821153253161
train metrics acc, f1 
0.9617767333984375, 0.9605862500295013
Epoch 11/15
----------
eval metrics, batch: 1024 acc, f1
0.827056884765625, 0.8044176013805004
eval metrics, batch: 2048 acc, f1
0.810638427734375, 0.7842864592386581
eval metrics, batch: 3072 acc, f1
0.8076171875, 0.7716769286490403
eval metrics, batch: 4096 acc, f1
0.815948486328125, 0.7875435938986156
train metrics, batch: 4096  acc, f1 
0.9755973815917969, 0.9754901397334069
eval metrics, batch: 5120 acc, f1
0.866241455078125, 0.8609410197024018
eval metrics, batch: 6144 acc, f1
0.799652099609375, 0.7574178768059713
eval metrics, batch: 7168 acc, f1
0.832489013671875, 0.8112253671286583
Epoch loss - train: tensor(0.0902, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.6231, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.814117431640625, 0.7850361743426857
train metrics acc, f1 
0.9736671447753906, 0.973594519227459
Epoch 12/15
----------
eval metrics, batch: 1024 acc, f1
0.82513427734375, 0.7983672320360335
eval metrics, batch: 2048 acc, f1
0.822998046875, 0.7960618846694796
eval metrics, batch: 3072 acc, f1
0.8245849609375, 0.7994557253506385
eval metrics, batch: 4096 acc, f1
0.85809326171875, 0.8485736615865572
train metrics, batch: 4096  acc, f1 
0.9724693298339844, 0.9727905775545829
eval metrics, batch: 5120 acc, f1
0.81640625, 0.7829255971711049
eval metrics, batch: 6144 acc, f1
0.811309814453125, 0.7792968052828841
eval metrics, batch: 7168 acc, f1
0.81219482421875, 0.7847047299188357
Epoch loss - train: tensor(0.0820, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.5540, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.83306884765625, 0.8161838833254923
train metrics acc, f1 
0.9768257141113281, 0.9771006178121384
Epoch 13/15
----------
eval metrics, batch: 1024 acc, f1
0.820709228515625, 0.794314322725204
eval metrics, batch: 2048 acc, f1
0.806488037109375, 0.7690570710565612
eval metrics, batch: 3072 acc, f1
0.8416748046875, 0.8237053146663041
eval metrics, batch: 4096 acc, f1
0.79803466796875, 0.7560454143320554
train metrics, batch: 4096  acc, f1 
0.9735107421875, 0.973030705536007
eval metrics, batch: 5120 acc, f1
0.806793212890625, 0.774545066058901
eval metrics, batch: 6144 acc, f1
0.8399658203125, 0.8210971615720524
eval metrics, batch: 7168 acc, f1
0.81024169921875, 0.7775313059033989
Epoch loss - train: tensor(0.0757, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4865, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.849761962890625, 0.8417703210876483
train metrics acc, f1 
0.960479736328125, 0.9616154131159689
Epoch 14/15
----------
eval metrics, batch: 1024 acc, f1
0.810760498046875, 0.7781474723623484
eval metrics, batch: 2048 acc, f1
0.814422607421875, 0.784170363797693
eval metrics, batch: 3072 acc, f1
0.838531494140625, 0.8220016820857864
eval metrics, batch: 4096 acc, f1
0.8125, 0.7800372332808249
train metrics, batch: 4096  acc, f1 
0.9773635864257812, 0.9771227215248435
eval metrics, batch: 5120 acc, f1
0.821868896484375, 0.7947536833221984
eval metrics, batch: 6144 acc, f1
0.8389892578125, 0.8199686071111718
eval metrics, batch: 7168 acc, f1
0.824920654296875, 0.8007363412177416
Epoch loss - train: tensor(0.0679, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.7104, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.7923583984375, 0.7489484170909896
train metrics acc, f1 
0.9807205200195312, 0.9804977812077947
Epoch 15/15
----------
eval metrics, batch: 1024 acc, f1
0.81964111328125, 0.7889285714285714
eval metrics, batch: 2048 acc, f1
0.803924560546875, 0.767066671500562
eval metrics, batch: 3072 acc, f1
0.842010498046875, 0.8235695055038681
eval metrics, batch: 4096 acc, f1
0.730133056640625, 0.6368228674688899
train metrics, batch: 4096  acc, f1 
0.9540367126464844, 0.9518923256900331
eval metrics, batch: 5120 acc, f1
0.846099853515625, 0.8317148863750126
eval metrics, batch: 6144 acc, f1
0.840667724609375, 0.8221669675397664
eval metrics, batch: 7168 acc, f1
0.81488037109375, 0.783712472366826
Epoch loss - train: tensor(0.0633, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.7315, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.816375732421875, 0.788587892203366
train metrics acc, f1 
0.9828109741210938, 0.9827890454910049
Training time 353m 34s
train_acc
0.5	0.8777732849121094	0.8778038024902344	0.9057464599609375	0.9219627380371094	0.9200096130371094	0.9376296997070312	0.9365158081054688	0.9310188293457031	0.9413070678710938	0.9354743957519531	0.9545135498046875	0.9590568542480469	0.9582939147949219	0.9550628662109375	0.953033447265625	0.95843505859375	0.9689598083496094	0.9676666259765625	0.9704132080078125	0.9617767333984375	0.9755973815917969	0.9736671447753906	0.9724693298339844	0.9768257141113281	0.9735107421875	0.960479736328125	0.9773635864257812	0.9807205200195312	0.9540367126464844	0.9828109741210938
train_f1
0.6666666666666666	0.8771937893578938	0.8844795937870772	0.9068936670510299	0.9226844450491514	0.917410090077316	0.9378780510045898	0.9372639197798469	0.9280670838189723	0.9389686632288774	0.9376329654852019	0.9549493728275653	0.9588829084222422	0.9574530185279593	0.9557741402613005	0.9541759714158107	0.9582547928830858	0.968752760102455	0.9673490142299128	0.9702832971900168	0.9605862500295013	0.9754901397334069	0.973594519227459	0.9727905775545829	0.9771006178121384	0.973030705536007	0.9616154131159689	0.9771227215248435	0.9804977812077947	0.9518923256900331	0.9827890454910049
train_loss
tensor(0.3332, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.2521, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.2111, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.1844, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.1639, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.1471, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.1334, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.1207, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.1096, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.1000, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.0902, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.0820, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.0757, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.0679, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.0633, device='cuda:0', grad_fn=<DivBackward0>)
valid_acc
0.499542236328125	0.80865478515625	0.819549560546875	0.81817626953125	0.826751708984375	0.82550048828125	0.819183349609375	0.83587646484375	0.82733154296875	0.832794189453125	0.843780517578125	0.842376708984375	0.824615478515625	0.8232421875	0.8436279296875	0.80096435546875	0.84716796875	0.833770751953125	0.794219970703125	0.7393798828125	0.800048828125	0.82537841796875	0.740447998046875	0.814208984375	0.83154296875	0.831787109375	0.84844970703125	0.8529052734375	0.8341064453125	0.81561279296875	0.818603515625	0.77178955078125	0.778472900390625	0.834716796875	0.848663330078125	0.85504150390625	0.787322998046875	0.848175048828125	0.826507568359375	0.851165771484375	0.841583251953125	0.83172607421875	0.842926025390625	0.835845947265625	0.837493896484375	0.798919677734375	0.83740234375	0.83575439453125	0.83673095703125	0.820770263671875	0.802337646484375	0.842437744140625	0.814605712890625	0.84051513671875	0.843017578125	0.863555908203125	0.85675048828125	0.813262939453125	0.850830078125	0.827178955078125	0.8597412109375	0.808349609375	0.8590087890625	0.824676513671875	0.8277587890625	0.835906982421875	0.832061767578125	0.853515625	0.82769775390625	0.838836669921875	0.788482666015625	0.771636962890625	0.8106689453125	0.833038330078125	0.83245849609375	0.799774169921875	0.82025146484375	0.826171875	0.838836669921875	0.825469970703125	0.7672119140625	0.827056884765625	0.810638427734375	0.8076171875	0.815948486328125	0.866241455078125	0.799652099609375	0.832489013671875	0.814117431640625	0.82513427734375	0.822998046875	0.8245849609375	0.85809326171875	0.81640625	0.811309814453125	0.81219482421875	0.83306884765625	0.820709228515625	0.806488037109375	0.8416748046875	0.79803466796875	0.806793212890625	0.8399658203125	0.81024169921875	0.849761962890625	0.810760498046875	0.814422607421875	0.838531494140625	0.8125	0.821868896484375	0.8389892578125	0.824920654296875	0.7923583984375	0.81964111328125	0.803924560546875	0.842010498046875	0.730133056640625	0.846099853515625	0.840667724609375	0.81488037109375	0.816375732421875
valid_f1
0.6662596414107496	0.8013307984790875	0.8284047708871413	0.805978898007034	0.8169359259617555	0.8156078684295388	0.8069340806152041	0.8301111953500127	0.8276366295010052	0.8264766429136975	0.8371767549858457	0.8426791751698091	0.8121834046864277	0.8035677948857085	0.8403439895307534	0.7698983911939035	0.8374448195273955	0.8205212692345711	0.7591527663678251	0.6645718774548312	0.7666999002991027	0.8023215642921302	0.6603841392804376	0.7871775152066001	0.8145535174360008	0.8124149196841819	0.8394542868227078	0.8508478772125263	0.819365986575397	0.7845374794950432	0.7931946280704196	0.714971794480866	0.7300383056268362	0.8171629194517588	0.8430249121585262	0.8476782965623396	0.7402050326188258	0.8478825867604342	0.8036472904362242	0.8458353089932037	0.8357850115466136	0.8103590590177466	0.8313399089032343	0.83162738285285	0.8224112056028015	0.7604087124104578	0.8203641267700607	0.8172247503905454	0.817530695770805	0.7943123314537877	0.7656572234885488	0.8277104815296826	0.7810416291223644	0.8214432144321443	0.8265326768732717	0.8546347173001267	0.8471507652230543	0.7814720902824899	0.8389137885578698	0.8044881753840842	0.8532192130812468	0.7712370683374618	0.8552812930710437	0.8036367365075024	0.8044216508420542	0.8144262295081968	0.8082912384601986	0.8432192317742357	0.802269384324438	0.8213645435172344	0.7433818356844015	0.7145527369826435	0.7786341254549347	0.8140696686491079	0.8111714934305565	0.7598550565499067	0.7932607932607932	0.8015331010452962	0.8215818101962904	0.800863539816846	0.7059821153253161	0.8044176013805004	0.7842864592386581	0.7716769286490403	0.7875435938986156	0.8609410197024018	0.7574178768059713	0.8112253671286583	0.7850361743426857	0.7983672320360335	0.7960618846694796	0.7994557253506385	0.8485736615865572	0.7829255971711049	0.7792968052828841	0.7847047299188357	0.8161838833254923	0.794314322725204	0.7690570710565612	0.8237053146663041	0.7560454143320554	0.774545066058901	0.8210971615720524	0.7775313059033989	0.8417703210876483	0.7781474723623484	0.784170363797693	0.8220016820857864	0.7800372332808249	0.7947536833221984	0.8199686071111718	0.8007363412177416	0.7489484170909896	0.7889285714285714	0.767066671500562	0.8235695055038681	0.6368228674688899	0.8317148863750126	0.8221669675397664	0.783712472366826	0.788587892203366
valid_loss
tensor(0.3925, device='cuda:0')	tensor(0.3889, device='cuda:0')	tensor(0.4160, device='cuda:0')	tensor(0.5595, device='cuda:0')	tensor(0.3831, device='cuda:0')	tensor(0.4099, device='cuda:0')	tensor(0.3905, device='cuda:0')	tensor(0.4667, device='cuda:0')	tensor(0.5534, device='cuda:0')	tensor(0.7729, device='cuda:0')	tensor(0.6231, device='cuda:0')	tensor(0.5540, device='cuda:0')	tensor(0.4865, device='cuda:0')	tensor(0.7104, device='cuda:0')	tensor(0.7315, device='cuda:0')
Best model metrics: train, valid, test: acc, f1
0.9550628662109375, 0.9557741402613005
0.85675048828125, 0.8471507652230543
0.790985107421875, 0.7582506794677208
Model saved, path ./models/densenet_10-1558897741.pth
experiment validation
train set
Evaluation results
[[123074.   7998.]
 [  3782. 127290.]]
#############################
Accuracy
0.9550628662109375
------------------------
Recall
0.9711456298828125
------------------------
Specificity
0.9389801025390625
------------------------
Precision
0.9408816746496363
------------------------
Fall_out
0.0610198974609375
------------------------
F1
0.9557741402613005
------------------------
#############################
valid set
Evaluation results
[[15066.  1333.]
 [ 3361. 13008.]]
#############################
Accuracy
0.85675048828125
------------------------
Recall
0.7946728572301301
------------------------
Specificity
0.9187145557655955
------------------------
Precision
0.9070497175929154
------------------------
Fall_out
0.08128544423440454
------------------------
F1
0.8471507652230543
------------------------
#############################
test set
Evaluation results
[[15178.  1213.]
 [ 5636. 10741.]]
#############################
Accuracy
0.790985107421875
------------------------
Recall
0.6558588264028821
------------------------
Specificity
0.9259959734000366
------------------------
Precision
0.8985276894763259
------------------------
Fall_out
0.0740040265999634
------------------------
F1
0.7582506794677208
------------------------
#############################
AUC: 0.8998708057912792
Experiment end
########################################
----------------------------------------
Starting experiment densenet_11-1558897741
Experiment parameters Experiment[name: densenet_11-1558897741, model: DenseNet(
  (features): Sequential(
    (conv0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (norm0): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu0): ReLU(inplace)
    (pool0): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (denseblock1): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(96, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (transition1): _Transition(
      (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock2): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer7): _DenseLayer(
        (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer8): _DenseLayer(
        (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer9): _DenseLayer(
        (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer10): _DenseLayer(
        (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer11): _DenseLayer(
        (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer12): _DenseLayer(
        (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (transition2): _Transition(
      (norm): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock3): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer7): _DenseLayer(
        (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer8): _DenseLayer(
        (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer9): _DenseLayer(
        (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer10): _DenseLayer(
        (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer11): _DenseLayer(
        (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer12): _DenseLayer(
        (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer13): _DenseLayer(
        (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer14): _DenseLayer(
        (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer15): _DenseLayer(
        (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer16): _DenseLayer(
        (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer17): _DenseLayer(
        (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer18): _DenseLayer(
        (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer19): _DenseLayer(
        (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer20): _DenseLayer(
        (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer21): _DenseLayer(
        (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer22): _DenseLayer(
        (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer23): _DenseLayer(
        (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer24): _DenseLayer(
        (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (transition3): _Transition(
      (norm): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock4): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer7): _DenseLayer(
        (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer8): _DenseLayer(
        (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer9): _DenseLayer(
        (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer10): _DenseLayer(
        (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer11): _DenseLayer(
        (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer12): _DenseLayer(
        (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer13): _DenseLayer(
        (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer14): _DenseLayer(
        (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer15): _DenseLayer(
        (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer16): _DenseLayer(
        (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (norm5): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (classifier): Linear(in_features=1024, out_features=1, bias=True)
), params: Params(lr: 1e-05, weight_decay: 0, batch_size: 32, num_epochs: 15), optimizer: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 1e-05
    weight_decay: 0
), criterion: BCEWithLogitsLoss()]
start metrics
eval metrics acc, f1
0.500457763671875, 0.0
train metrics acc, f1
0.5, 0.0
Epoch 1/15
----------
eval metrics, batch: 1024 acc, f1
0.7958984375, 0.7867618926157378
eval metrics, batch: 2048 acc, f1
0.771759033203125, 0.7403936269915652
eval metrics, batch: 3072 acc, f1
0.81884765625, 0.8198373194124075
eval metrics, batch: 4096 acc, f1
0.7960205078125, 0.7771257085695231
train metrics, batch: 4096  acc, f1 
0.85565185546875, 0.8517241379310345
eval metrics, batch: 5120 acc, f1
0.76422119140625, 0.7234590879805283
eval metrics, batch: 6144 acc, f1
0.81817626953125, 0.8122045010401563
eval metrics, batch: 7168 acc, f1
0.8028564453125, 0.7901779914252306
Epoch loss - train: tensor(0.3615, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4114, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.810791015625, 0.8104207436399217
train metrics acc, f1 
0.8693161010742188, 0.8759541155511783
Epoch 2/15
----------
eval metrics, batch: 1024 acc, f1
0.816192626953125, 0.8117165275563475
eval metrics, batch: 2048 acc, f1
0.82305908203125, 0.8177761015777233
eval metrics, batch: 3072 acc, f1
0.821380615234375, 0.8253930372005609
eval metrics, batch: 4096 acc, f1
0.76513671875, 0.7190830778215798
train metrics, batch: 4096  acc, f1 
0.8692436218261719, 0.8601207115369705
eval metrics, batch: 5120 acc, f1
0.7755126953125, 0.7349953166654658
eval metrics, batch: 6144 acc, f1
0.816680908203125, 0.8092592004572444
eval metrics, batch: 7168 acc, f1
0.746002197265625, 0.6933647717643592
Epoch loss - train: tensor(0.3021, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4536, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.801971435546875, 0.7898980087421078
train metrics acc, f1 
0.891326904296875, 0.8939515768784061
Epoch 3/15
----------
eval metrics, batch: 1024 acc, f1
0.807403564453125, 0.7929529871067222
eval metrics, batch: 2048 acc, f1
0.80316162109375, 0.7869881109643329
eval metrics, batch: 3072 acc, f1
0.80413818359375, 0.7828969623164874
eval metrics, batch: 4096 acc, f1
0.803466796875, 0.7796633365266183
train metrics, batch: 4096  acc, f1 
0.90350341796875, 0.9023116788828559
eval metrics, batch: 5120 acc, f1
0.79827880859375, 0.7748637602179836
eval metrics, batch: 6144 acc, f1
0.804595947265625, 0.7853431224647155
eval metrics, batch: 7168 acc, f1
0.782257080078125, 0.7533275713050994
Epoch loss - train: tensor(0.2667, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.5283, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.763641357421875, 0.7159153431390529
train metrics acc, f1 
0.9035720825195312, 0.8996522484756098
Epoch 4/15
----------
eval metrics, batch: 1024 acc, f1
0.8154296875, 0.8034065791184501
eval metrics, batch: 2048 acc, f1
0.816680908203125, 0.8293029467761643
eval metrics, batch: 3072 acc, f1
0.761077880859375, 0.7115646759753896
eval metrics, batch: 4096 acc, f1
0.7904052734375, 0.7605299860529986
train metrics, batch: 4096  acc, f1 
0.9122085571289062, 0.9110329364465749
eval metrics, batch: 5120 acc, f1
0.791961669921875, 0.759821019624423
eval metrics, batch: 6144 acc, f1
0.758819580078125, 0.7048145519740037
eval metrics, batch: 7168 acc, f1
0.832183837890625, 0.8327503877855166
Epoch loss - train: tensor(0.2408, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.5847, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.757049560546875, 0.7009503775215056
train metrics acc, f1 
0.9145736694335938, 0.9105513748422247
Epoch 5/15
----------
eval metrics, batch: 1024 acc, f1
0.8115234375, 0.7994674978894734
eval metrics, batch: 2048 acc, f1
0.817108154296875, 0.8076392232386455
eval metrics, batch: 3072 acc, f1
0.785919189453125, 0.7542304593070105
eval metrics, batch: 4096 acc, f1
0.7762451171875, 0.7373172828890799
train metrics, batch: 4096  acc, f1 
0.9225845336914062, 0.9212525707190252
eval metrics, batch: 5120 acc, f1
0.8011474609375, 0.7739540692430444
eval metrics, batch: 6144 acc, f1
0.79693603515625, 0.7723260110860193
eval metrics, batch: 7168 acc, f1
0.816741943359375, 0.8103584399178904
Epoch loss - train: tensor(0.2189, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.5988, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.774505615234375, 0.7329695348921254
train metrics acc, f1 
0.9110298156738281, 0.9083644050149497
Epoch 6/15
----------
eval metrics, batch: 1024 acc, f1
0.817352294921875, 0.8090604562131122
eval metrics, batch: 2048 acc, f1
0.745452880859375, 0.6794758482880529
eval metrics, batch: 3072 acc, f1
0.792816162109375, 0.761194554855957
eval metrics, batch: 4096 acc, f1
0.7972412109375, 0.7735977646016493
train metrics, batch: 4096  acc, f1 
0.9336433410644531, 0.9338479968055371
eval metrics, batch: 5120 acc, f1
0.79205322265625, 0.7650020692509312
eval metrics, batch: 6144 acc, f1
0.795654296875, 0.7670956521739131
eval metrics, batch: 7168 acc, f1
0.747039794921875, 0.6923276790022642
Epoch loss - train: tensor(0.2008, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.5139, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.798797607421875, 0.7751440946761706
train metrics acc, f1 
0.937286376953125, 0.9378026634382567
Epoch 7/15
----------
eval metrics, batch: 1024 acc, f1
0.79351806640625, 0.7733788853161844
eval metrics, batch: 2048 acc, f1
0.804840087890625, 0.7986143914344198
eval metrics, batch: 3072 acc, f1
0.7763671875, 0.7369705671213209
eval metrics, batch: 4096 acc, f1
0.76788330078125, 0.7213919413919414
train metrics, batch: 4096  acc, f1 
0.9371223449707031, 0.9357059550881737
eval metrics, batch: 5120 acc, f1
0.78814697265625, 0.7580847504878728
eval metrics, batch: 6144 acc, f1
0.78662109375, 0.7667311670114099
eval metrics, batch: 7168 acc, f1
0.8045654296875, 0.7906094690034005
Epoch loss - train: tensor(0.1853, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4691, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.826629638671875, 0.8190821948345595
train metrics acc, f1 
0.9286155700683594, 0.9310513807778044
Epoch 8/15
----------
eval metrics, batch: 1024 acc, f1
0.79461669921875, 0.7687920846502679
eval metrics, batch: 2048 acc, f1
0.803131103515625, 0.7821859067427491
eval metrics, batch: 3072 acc, f1
0.822906494140625, 0.8167029912505133
eval metrics, batch: 4096 acc, f1
0.792205810546875, 0.764321068844969
train metrics, batch: 4096  acc, f1 
0.9448738098144531, 0.9450747425913045
eval metrics, batch: 5120 acc, f1
0.80023193359375, 0.7715661641541038
eval metrics, batch: 6144 acc, f1
0.812774658203125, 0.7947405399979925
eval metrics, batch: 7168 acc, f1
0.775604248046875, 0.7488128992587025
Epoch loss - train: tensor(0.1709, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.6253, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.7857666015625, 0.7492678048432031
train metrics acc, f1 
0.9488868713378906, 0.948259816887866
Epoch 9/15
----------
eval metrics, batch: 1024 acc, f1
0.803619384765625, 0.782608695652174
eval metrics, batch: 2048 acc, f1
0.7867431640625, 0.7538223067709434
eval metrics, batch: 3072 acc, f1
0.816253662109375, 0.8083887598256054
eval metrics, batch: 4096 acc, f1
0.796539306640625, 0.7735163229948704
train metrics, batch: 4096  acc, f1 
0.9518165588378906, 0.9523165957575322
eval metrics, batch: 5120 acc, f1
0.76812744140625, 0.7205590290547995
eval metrics, batch: 6144 acc, f1
0.811126708984375, 0.794378550782418
eval metrics, batch: 7168 acc, f1
0.758941650390625, 0.7015979751426089
Epoch loss - train: tensor(0.1574, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.5195, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.801483154296875, 0.776268271711092
train metrics acc, f1 
0.9541854858398438, 0.9543154931720491
Epoch 10/15
----------
eval metrics, batch: 1024 acc, f1
0.7840576171875, 0.7500353257029815
eval metrics, batch: 2048 acc, f1
0.813385009765625, 0.7993832223352252
eval metrics, batch: 3072 acc, f1
0.7860107421875, 0.7519105575997735
eval metrics, batch: 4096 acc, f1
0.776885986328125, 0.7319916419223579
train metrics, batch: 4096  acc, f1 
0.9543647766113281, 0.9532868662019953
eval metrics, batch: 5120 acc, f1
0.829193115234375, 0.8245509545155324
eval metrics, batch: 6144 acc, f1
0.757537841796875, 0.7017082785808147
eval metrics, batch: 7168 acc, f1
0.746856689453125, 0.6820011500862565
Epoch loss - train: tensor(0.1434, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.5829, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.7904052734375, 0.7650037637719839
train metrics acc, f1 
0.9580230712890625, 0.9585829996085634
Epoch 11/15
----------
eval metrics, batch: 1024 acc, f1
0.768096923828125, 0.7256975778796521
eval metrics, batch: 2048 acc, f1
0.805694580078125, 0.782688828970272
eval metrics, batch: 3072 acc, f1
0.754608154296875, 0.6948039625004745
eval metrics, batch: 4096 acc, f1
0.771697998046875, 0.7236526171918289
train metrics, batch: 4096  acc, f1 
0.9549446105957031, 0.9538475966441721
eval metrics, batch: 5120 acc, f1
0.78668212890625, 0.7555260212646894
eval metrics, batch: 6144 acc, f1
0.80694580078125, 0.7867448759439051
eval metrics, batch: 7168 acc, f1
0.748687744140625, 0.6989801513323829
Epoch loss - train: tensor(0.1325, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.5920, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.80401611328125, 0.7830698554249426
train metrics acc, f1 
0.9657821655273438, 0.9661634565330557
Epoch 12/15
----------
eval metrics, batch: 1024 acc, f1
0.797821044921875, 0.7773932327542757
eval metrics, batch: 2048 acc, f1
0.779022216796875, 0.738771239943721
eval metrics, batch: 3072 acc, f1
0.7830810546875, 0.7501054703979749
eval metrics, batch: 4096 acc, f1
0.784210205078125, 0.7475454318254847
train metrics, batch: 4096  acc, f1 
0.9651832580566406, 0.9648172633250712
eval metrics, batch: 5120 acc, f1
0.790924072265625, 0.7627194957226474
eval metrics, batch: 6144 acc, f1
0.79791259765625, 0.7737460707940412
eval metrics, batch: 7168 acc, f1
0.808135986328125, 0.7892743422155187
Epoch loss - train: tensor(0.1205, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.6817, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.809173583984375, 0.7863755935909261
train metrics acc, f1 
0.9713897705078125, 0.9716014509765314
Epoch 13/15
----------
eval metrics, batch: 1024 acc, f1
0.7735595703125, 0.7385114180998027
eval metrics, batch: 2048 acc, f1
0.794891357421875, 0.7686482393032942
eval metrics, batch: 3072 acc, f1
0.76947021484375, 0.7217064544650752
eval metrics, batch: 4096 acc, f1
0.793731689453125, 0.7711373717536315
train metrics, batch: 4096  acc, f1 
0.972076416015625, 0.9724652618433228
eval metrics, batch: 5120 acc, f1
0.76617431640625, 0.7166000887705282
eval metrics, batch: 6144 acc, f1
0.743621826171875, 0.6814061966703326
eval metrics, batch: 7168 acc, f1
0.7720947265625, 0.7308246828143022
Epoch loss - train: tensor(0.1100, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.6959, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.798370361328125, 0.7793179464911988
train metrics acc, f1 
0.9725303649902344, 0.9729567330261344
Epoch 14/15
----------
eval metrics, batch: 1024 acc, f1
0.76788330078125, 0.7239802583829293
eval metrics, batch: 2048 acc, f1
0.764404296875, 0.7224219761254135
eval metrics, batch: 3072 acc, f1
0.7772216796875, 0.7379567808170006
eval metrics, batch: 4096 acc, f1
0.772186279296875, 0.7294407596680077
train metrics, batch: 4096  acc, f1 
0.975921630859375, 0.9757142967072711
eval metrics, batch: 5120 acc, f1
0.784759521484375, 0.7550786540264611
eval metrics, batch: 6144 acc, f1
0.799774169921875, 0.7882933754961118
eval metrics, batch: 7168 acc, f1
0.73858642578125, 0.6726286020025988
Epoch loss - train: tensor(0.1011, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.9672, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.76025390625, 0.7080639167595689
train metrics acc, f1 
0.9652633666992188, 0.9645849052200901
Epoch 15/15
----------
eval metrics, batch: 1024 acc, f1
0.793060302734375, 0.7695497026338148
eval metrics, batch: 2048 acc, f1
0.816192626953125, 0.8040982273540414
eval metrics, batch: 3072 acc, f1
0.78289794921875, 0.7483195358381094
eval metrics, batch: 4096 acc, f1
0.758819580078125, 0.7107141549837109
train metrics, batch: 4096  acc, f1 
0.9790077209472656, 0.9788852096706737
eval metrics, batch: 5120 acc, f1
0.78753662109375, 0.7594166839449858
eval metrics, batch: 6144 acc, f1
0.78228759765625, 0.7529436210001386
eval metrics, batch: 7168 acc, f1
0.78521728515625, 0.7538988740471362
Epoch loss - train: tensor(0.0914, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.9195, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.76641845703125, 0.7216322374163515
train metrics acc, f1 
0.9744491577148438, 0.9743056621144699
Training time 360m 33s
train_acc
0.5	0.85565185546875	0.8693161010742188	0.8692436218261719	0.891326904296875	0.90350341796875	0.9035720825195312	0.9122085571289062	0.9145736694335938	0.9225845336914062	0.9110298156738281	0.9336433410644531	0.937286376953125	0.9371223449707031	0.9286155700683594	0.9448738098144531	0.9488868713378906	0.9518165588378906	0.9541854858398438	0.9543647766113281	0.9580230712890625	0.9549446105957031	0.9657821655273438	0.9651832580566406	0.9713897705078125	0.972076416015625	0.9725303649902344	0.975921630859375	0.9652633666992188	0.9790077209472656	0.9744491577148438
train_f1
0.0	0.8517241379310345	0.8759541155511783	0.8601207115369705	0.8939515768784061	0.9023116788828559	0.8996522484756098	0.9110329364465749	0.9105513748422247	0.9212525707190252	0.9083644050149497	0.9338479968055371	0.9378026634382567	0.9357059550881737	0.9310513807778044	0.9450747425913045	0.948259816887866	0.9523165957575322	0.9543154931720491	0.9532868662019953	0.9585829996085634	0.9538475966441721	0.9661634565330557	0.9648172633250712	0.9716014509765314	0.9724652618433228	0.9729567330261344	0.9757142967072711	0.9645849052200901	0.9788852096706737	0.9743056621144699
train_loss
tensor(0.3615, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.3021, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.2667, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.2408, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.2189, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.2008, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.1853, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.1709, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.1574, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.1434, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.1325, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.1205, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.1100, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.1011, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.0914, device='cuda:0', grad_fn=<DivBackward0>)
valid_acc
0.500457763671875	0.7958984375	0.771759033203125	0.81884765625	0.7960205078125	0.76422119140625	0.81817626953125	0.8028564453125	0.810791015625	0.816192626953125	0.82305908203125	0.821380615234375	0.76513671875	0.7755126953125	0.816680908203125	0.746002197265625	0.801971435546875	0.807403564453125	0.80316162109375	0.80413818359375	0.803466796875	0.79827880859375	0.804595947265625	0.782257080078125	0.763641357421875	0.8154296875	0.816680908203125	0.761077880859375	0.7904052734375	0.791961669921875	0.758819580078125	0.832183837890625	0.757049560546875	0.8115234375	0.817108154296875	0.785919189453125	0.7762451171875	0.8011474609375	0.79693603515625	0.816741943359375	0.774505615234375	0.817352294921875	0.745452880859375	0.792816162109375	0.7972412109375	0.79205322265625	0.795654296875	0.747039794921875	0.798797607421875	0.79351806640625	0.804840087890625	0.7763671875	0.76788330078125	0.78814697265625	0.78662109375	0.8045654296875	0.826629638671875	0.79461669921875	0.803131103515625	0.822906494140625	0.792205810546875	0.80023193359375	0.812774658203125	0.775604248046875	0.7857666015625	0.803619384765625	0.7867431640625	0.816253662109375	0.796539306640625	0.76812744140625	0.811126708984375	0.758941650390625	0.801483154296875	0.7840576171875	0.813385009765625	0.7860107421875	0.776885986328125	0.829193115234375	0.757537841796875	0.746856689453125	0.7904052734375	0.768096923828125	0.805694580078125	0.754608154296875	0.771697998046875	0.78668212890625	0.80694580078125	0.748687744140625	0.80401611328125	0.797821044921875	0.779022216796875	0.7830810546875	0.784210205078125	0.790924072265625	0.79791259765625	0.808135986328125	0.809173583984375	0.7735595703125	0.794891357421875	0.76947021484375	0.793731689453125	0.76617431640625	0.743621826171875	0.7720947265625	0.798370361328125	0.76788330078125	0.764404296875	0.7772216796875	0.772186279296875	0.784759521484375	0.799774169921875	0.73858642578125	0.76025390625	0.793060302734375	0.816192626953125	0.78289794921875	0.758819580078125	0.78753662109375	0.78228759765625	0.78521728515625	0.76641845703125
valid_f1
0.0	0.7867618926157378	0.7403936269915652	0.8198373194124075	0.7771257085695231	0.7234590879805283	0.8122045010401563	0.7901779914252306	0.8104207436399217	0.8117165275563475	0.8177761015777233	0.8253930372005609	0.7190830778215798	0.7349953166654658	0.8092592004572444	0.6933647717643592	0.7898980087421078	0.7929529871067222	0.7869881109643329	0.7828969623164874	0.7796633365266183	0.7748637602179836	0.7853431224647155	0.7533275713050994	0.7159153431390529	0.8034065791184501	0.8293029467761643	0.7115646759753896	0.7605299860529986	0.759821019624423	0.7048145519740037	0.8327503877855166	0.7009503775215056	0.7994674978894734	0.8076392232386455	0.7542304593070105	0.7373172828890799	0.7739540692430444	0.7723260110860193	0.8103584399178904	0.7329695348921254	0.8090604562131122	0.6794758482880529	0.761194554855957	0.7735977646016493	0.7650020692509312	0.7670956521739131	0.6923276790022642	0.7751440946761706	0.7733788853161844	0.7986143914344198	0.7369705671213209	0.7213919413919414	0.7580847504878728	0.7667311670114099	0.7906094690034005	0.8190821948345595	0.7687920846502679	0.7821859067427491	0.8167029912505133	0.764321068844969	0.7715661641541038	0.7947405399979925	0.7488128992587025	0.7492678048432031	0.782608695652174	0.7538223067709434	0.8083887598256054	0.7735163229948704	0.7205590290547995	0.794378550782418	0.7015979751426089	0.776268271711092	0.7500353257029815	0.7993832223352252	0.7519105575997735	0.7319916419223579	0.8245509545155324	0.7017082785808147	0.6820011500862565	0.7650037637719839	0.7256975778796521	0.782688828970272	0.6948039625004745	0.7236526171918289	0.7555260212646894	0.7867448759439051	0.6989801513323829	0.7830698554249426	0.7773932327542757	0.738771239943721	0.7501054703979749	0.7475454318254847	0.7627194957226474	0.7737460707940412	0.7892743422155187	0.7863755935909261	0.7385114180998027	0.7686482393032942	0.7217064544650752	0.7711373717536315	0.7166000887705282	0.6814061966703326	0.7308246828143022	0.7793179464911988	0.7239802583829293	0.7224219761254135	0.7379567808170006	0.7294407596680077	0.7550786540264611	0.7882933754961118	0.6726286020025988	0.7080639167595689	0.7695497026338148	0.8040982273540414	0.7483195358381094	0.7107141549837109	0.7594166839449858	0.7529436210001386	0.7538988740471362	0.7216322374163515
valid_loss
tensor(0.4114, device='cuda:0')	tensor(0.4536, device='cuda:0')	tensor(0.5283, device='cuda:0')	tensor(0.5847, device='cuda:0')	tensor(0.5988, device='cuda:0')	tensor(0.5139, device='cuda:0')	tensor(0.4691, device='cuda:0')	tensor(0.6253, device='cuda:0')	tensor(0.5195, device='cuda:0')	tensor(0.5829, device='cuda:0')	tensor(0.5920, device='cuda:0')	tensor(0.6817, device='cuda:0')	tensor(0.6959, device='cuda:0')	tensor(0.9672, device='cuda:0')	tensor(0.9195, device='cuda:0')
Best model metrics: train, valid, test: acc, f1
0.9286155700683594, 0.9310513807778044
0.826629638671875, 0.8190821948345595
0.7872314453125, 0.7690013915578822
Model saved, path ./models/densenet_11-1558897741.pth
experiment validation
train set
Evaluation results
[[117085.  13987.]
 [  4726. 126346.]]
#############################
Accuracy
0.9286155700683594
------------------------
Recall
0.9639434814453125
------------------------
Specificity
0.8932876586914062
------------------------
Precision
0.9003299295247732
------------------------
Fall_out
0.10671234130859375
------------------------
F1
0.9310513807778044
------------------------
#############################
valid set
Evaluation results
[[14227.  2172.]
 [ 3509. 12860.]]
#############################
Accuracy
0.826629638671875
------------------------
Recall
0.7856313763821858
------------------------
Specificity
0.8675528995670467
------------------------
Precision
0.8555082490686535
------------------------
Fall_out
0.13244710043295324
------------------------
F1
0.8190821948345595
------------------------
#############################
test set
Evaluation results
[[14191.  2200.]
 [ 4772. 11605.]]
#############################
Accuracy
0.7872314453125
------------------------
Recall
0.7086157415888136
------------------------
Specificity
0.8657800012201818
------------------------
Precision
0.8406374501992032
------------------------
Fall_out
0.1342199987798182
------------------------
F1
0.7690013915578822
------------------------
#############################
AUC: 0.8713645495357473
Experiment end
########################################
----------------------------------------
Starting experiment densenet_12-1558897741
Experiment parameters Experiment[name: densenet_12-1558897741, model: DenseNet(
  (features): Sequential(
    (conv0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (norm0): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu0): ReLU(inplace)
    (pool0): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (denseblock1): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(96, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (transition1): _Transition(
      (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock2): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer7): _DenseLayer(
        (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer8): _DenseLayer(
        (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer9): _DenseLayer(
        (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer10): _DenseLayer(
        (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer11): _DenseLayer(
        (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer12): _DenseLayer(
        (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (transition2): _Transition(
      (norm): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock3): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer7): _DenseLayer(
        (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer8): _DenseLayer(
        (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer9): _DenseLayer(
        (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer10): _DenseLayer(
        (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer11): _DenseLayer(
        (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer12): _DenseLayer(
        (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer13): _DenseLayer(
        (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer14): _DenseLayer(
        (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer15): _DenseLayer(
        (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer16): _DenseLayer(
        (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer17): _DenseLayer(
        (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer18): _DenseLayer(
        (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer19): _DenseLayer(
        (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer20): _DenseLayer(
        (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer21): _DenseLayer(
        (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer22): _DenseLayer(
        (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer23): _DenseLayer(
        (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer24): _DenseLayer(
        (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (transition3): _Transition(
      (norm): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock4): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer7): _DenseLayer(
        (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer8): _DenseLayer(
        (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer9): _DenseLayer(
        (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer10): _DenseLayer(
        (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer11): _DenseLayer(
        (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer12): _DenseLayer(
        (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer13): _DenseLayer(
        (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer14): _DenseLayer(
        (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer15): _DenseLayer(
        (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer16): _DenseLayer(
        (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (norm5): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (classifier): Linear(in_features=1024, out_features=1, bias=True)
), params: Params(lr: 1e-06, weight_decay: 0, batch_size: 32, num_epochs: 15), optimizer: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 1e-06
    weight_decay: 0
), criterion: BCEWithLogitsLoss()]
start metrics
eval metrics acc, f1
0.500457763671875, 0.0
train metrics acc, f1
0.4999732971191406, 0.0
Epoch 1/15
----------
eval metrics, batch: 1024 acc, f1
0.744293212890625, 0.7392400336103072
eval metrics, batch: 2048 acc, f1
0.767974853515625, 0.7685751681733783
eval metrics, batch: 3072 acc, f1
0.768463134765625, 0.7567099567099567
eval metrics, batch: 4096 acc, f1
0.77789306640625, 0.7700183277507426
train metrics, batch: 4096  acc, f1 
0.8087959289550781, 0.8072481435476986
eval metrics, batch: 5120 acc, f1
0.7803955078125, 0.7671046669687358
eval metrics, batch: 6144 acc, f1
0.784271240234375, 0.7747937175443627
eval metrics, batch: 7168 acc, f1
0.790435791015625, 0.7804878048780488
Epoch loss - train: tensor(0.4344, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4477, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.7911376953125, 0.7865518962075848
train metrics acc, f1 
0.8265151977539062, 0.8279629279364479
Epoch 2/15
----------
eval metrics, batch: 1024 acc, f1
0.773345947265625, 0.7686076580365766
eval metrics, batch: 2048 acc, f1
0.78375244140625, 0.7753329105897273
eval metrics, batch: 3072 acc, f1
0.79449462890625, 0.7879055118110236
eval metrics, batch: 4096 acc, f1
0.791839599609375, 0.78276378228606
train metrics, batch: 4096  acc, f1 
0.8292579650878906, 0.8276597628921155
eval metrics, batch: 5120 acc, f1
0.78594970703125, 0.7704842931937173
eval metrics, batch: 6144 acc, f1
0.787322998046875, 0.7745754488112566
eval metrics, batch: 7168 acc, f1
0.792236328125, 0.7855342741935484
Epoch loss - train: tensor(0.3945, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4489, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.79296875, 0.783397190293742
train metrics acc, f1 
0.8427619934082031, 0.8428812661286941
Epoch 3/15
----------
eval metrics, batch: 1024 acc, f1
0.789886474609375, 0.7858142790480634
eval metrics, batch: 2048 acc, f1
0.796661376953125, 0.7911481678838981
eval metrics, batch: 3072 acc, f1
0.792755126953125, 0.7829449931281363
eval metrics, batch: 4096 acc, f1
0.79168701171875, 0.77893645961526
train metrics, batch: 4096  acc, f1 
0.8436088562011719, 0.8417855612971445
eval metrics, batch: 5120 acc, f1
0.7991943359375, 0.8008836167766145
eval metrics, batch: 6144 acc, f1
0.795318603515625, 0.7898743694977913
eval metrics, batch: 7168 acc, f1
0.795562744140625, 0.7913149123080278
Epoch loss - train: tensor(0.3706, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4385, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.79730224609375, 0.7948353617100142
train metrics acc, f1 
0.8538856506347656, 0.8590376299567577
Epoch 4/15
----------
eval metrics, batch: 1024 acc, f1
0.795623779296875, 0.7911690417537185
eval metrics, batch: 2048 acc, f1
0.801605224609375, 0.7990852056741973
eval metrics, batch: 3072 acc, f1
0.791900634765625, 0.785086198745627
eval metrics, batch: 4096 acc, f1
0.78955078125, 0.7776774775936552
train metrics, batch: 4096  acc, f1 
0.8548851013183594, 0.855537031903299
eval metrics, batch: 5120 acc, f1
0.79205322265625, 0.7816865308214789
eval metrics, batch: 6144 acc, f1
0.792266845703125, 0.7841719775516027
eval metrics, batch: 7168 acc, f1
0.795135498046875, 0.7866247099583611
Epoch loss - train: tensor(0.3532, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4776, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.78857421875, 0.7711114047839303
train metrics acc, f1 
0.860626220703125, 0.8591692620802368
Epoch 5/15
----------
eval metrics, batch: 1024 acc, f1
0.795989990234375, 0.789110066563614
eval metrics, batch: 2048 acc, f1
0.802337646484375, 0.7991690180149452
eval metrics, batch: 3072 acc, f1
0.798309326171875, 0.795165039516504
eval metrics, batch: 4096 acc, f1
0.793853759765625, 0.7845088844227518
train metrics, batch: 4096  acc, f1 
0.8636665344238281, 0.8661986859100353
eval metrics, batch: 5120 acc, f1
0.781646728515625, 0.7557103349380313
eval metrics, batch: 6144 acc, f1
0.790863037109375, 0.7749203534009919
eval metrics, batch: 7168 acc, f1
0.785552978515625, 0.7665370942556231
Epoch loss - train: tensor(0.3396, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4630, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.793121337890625, 0.7868842151592317
train metrics acc, f1 
0.8685951232910156, 0.8733766353113295
Epoch 6/15
----------
eval metrics, batch: 1024 acc, f1
0.798065185546875, 0.7908990361826513
eval metrics, batch: 2048 acc, f1
0.791717529296875, 0.7757073844030365
eval metrics, batch: 3072 acc, f1
0.792633056640625, 0.7821347269870788
eval metrics, batch: 4096 acc, f1
0.792022705078125, 0.7865443041939424
train metrics, batch: 4096  acc, f1 
0.867584228515625, 0.8724667499448894
eval metrics, batch: 5120 acc, f1
0.79608154296875, 0.7892645389176233
eval metrics, batch: 6144 acc, f1
0.791595458984375, 0.7835705004278516
eval metrics, batch: 7168 acc, f1
0.789031982421875, 0.7729497158997602
Epoch loss - train: tensor(0.3285, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4663, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.794189453125, 0.7832068921177832
train metrics acc, f1 
0.875579833984375, 0.8780382009363268
Epoch 7/15
----------
eval metrics, batch: 1024 acc, f1
0.801605224609375, 0.800772271766112
eval metrics, batch: 2048 acc, f1
0.802215576171875, 0.8041106241499169
eval metrics, batch: 3072 acc, f1
0.7789306640625, 0.756291212488225
eval metrics, batch: 4096 acc, f1
0.794647216796875, 0.7843891185235028
train metrics, batch: 4096  acc, f1 
0.8750228881835938, 0.8778157352985052
eval metrics, batch: 5120 acc, f1
0.787384033203125, 0.7737913568622358
eval metrics, batch: 6144 acc, f1
0.78546142578125, 0.7707110241356817
eval metrics, batch: 7168 acc, f1
0.785888671875, 0.7657898250767793
Epoch loss - train: tensor(0.3177, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4758, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.792999267578125, 0.7793500536742461
train metrics acc, f1 
0.8800277709960938, 0.8817082161072411
Epoch 8/15
----------
eval metrics, batch: 1024 acc, f1
0.798095703125, 0.7931724396648743
eval metrics, batch: 2048 acc, f1
0.790618896484375, 0.7761281691519561
eval metrics, batch: 3072 acc, f1
0.78765869140625, 0.7704842327483837
eval metrics, batch: 4096 acc, f1
0.78399658203125, 0.7619079655543596
train metrics, batch: 4096  acc, f1 
0.8777847290039062, 0.8766972505311124
eval metrics, batch: 5120 acc, f1
0.78558349609375, 0.7653463362500835
eval metrics, batch: 6144 acc, f1
0.792022705078125, 0.7806636413375817
eval metrics, batch: 7168 acc, f1
0.78814697265625, 0.7723486587525414
Epoch loss - train: tensor(0.3077, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4931, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.789825439453125, 0.7776019633803727
train metrics acc, f1 
0.8839797973632812, 0.8870484947969666
Epoch 9/15
----------
eval metrics, batch: 1024 acc, f1
0.7984619140625, 0.7911844684753051
eval metrics, batch: 2048 acc, f1
0.797882080078125, 0.7890025168052502
eval metrics, batch: 3072 acc, f1
0.786346435546875, 0.7682478731503857
eval metrics, batch: 4096 acc, f1
0.793121337890625, 0.7829400275367423
train metrics, batch: 4096  acc, f1 
0.8812675476074219, 0.8842751815345947
eval metrics, batch: 5120 acc, f1
0.78680419921875, 0.7736668178578371
eval metrics, batch: 6144 acc, f1
0.78240966796875, 0.7610910065674843
eval metrics, batch: 7168 acc, f1
0.78546142578125, 0.7641414480305979
Epoch loss - train: tensor(0.2995, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.5116, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.78472900390625, 0.7691149515579995
train metrics acc, f1 
0.8882522583007812, 0.8907714679891122
Epoch 10/15
----------
eval metrics, batch: 1024 acc, f1
0.79754638671875, 0.7880240286298569
eval metrics, batch: 2048 acc, f1
0.786346435546875, 0.7698326593681165
eval metrics, batch: 3072 acc, f1
0.78985595703125, 0.7782286634460548
eval metrics, batch: 4096 acc, f1
0.79278564453125, 0.7818263607737292
train metrics, batch: 4096  acc, f1 
0.8867950439453125, 0.8900302383493419
eval metrics, batch: 5120 acc, f1
0.794158935546875, 0.7896853855508091
eval metrics, batch: 6144 acc, f1
0.783935546875, 0.7629411370789526
eval metrics, batch: 7168 acc, f1
0.780670166015625, 0.7615065538410486
Epoch loss - train: tensor(0.2924, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.5062, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.78729248046875, 0.7749580266046752
train metrics acc, f1 
0.890380859375, 0.8937113013115943
Epoch 11/15
----------
eval metrics, batch: 1024 acc, f1
0.7979736328125, 0.790559352062769
eval metrics, batch: 2048 acc, f1
0.7930908203125, 0.7850893875998478
eval metrics, batch: 3072 acc, f1
0.77020263671875, 0.7391213968957872
eval metrics, batch: 4096 acc, f1
0.78564453125, 0.7683071645335796
train metrics, batch: 4096  acc, f1 
0.8915061950683594, 0.8931532580723932
eval metrics, batch: 5120 acc, f1
0.770355224609375, 0.7377957420119168
eval metrics, batch: 6144 acc, f1
0.778717041015625, 0.7542117216365547
eval metrics, batch: 7168 acc, f1
0.788238525390625, 0.7769025495932869
Epoch loss - train: tensor(0.2853, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.5716, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.778228759765625, 0.7518185854308255
train metrics acc, f1 
0.8947715759277344, 0.8940965090431637
Epoch 12/15
----------
eval metrics, batch: 1024 acc, f1
0.79241943359375, 0.7788686605981795
eval metrics, batch: 2048 acc, f1
0.785400390625, 0.7656156256249583
eval metrics, batch: 3072 acc, f1
0.78076171875, 0.7593461074634865
eval metrics, batch: 4096 acc, f1
0.767974853515625, 0.7327874037887042
train metrics, batch: 4096  acc, f1 
0.8917236328125, 0.8894032200246256
eval metrics, batch: 5120 acc, f1
0.780059814453125, 0.7567093137089423
eval metrics, batch: 6144 acc, f1
0.781890869140625, 0.7622026285143902
eval metrics, batch: 7168 acc, f1
0.78448486328125, 0.7668999207816214
Epoch loss - train: tensor(0.2785, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.5198, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.783966064453125, 0.7655727390138093
train metrics acc, f1 
0.8992118835449219, 0.9007732781510427
Epoch 13/15
----------
eval metrics, batch: 1024 acc, f1
0.793792724609375, 0.7795935675375933
eval metrics, batch: 2048 acc, f1
0.775421142578125, 0.7465647277611324
eval metrics, batch: 3072 acc, f1
0.781707763671875, 0.7644016995487632
eval metrics, batch: 4096 acc, f1
0.78192138671875, 0.7612269446672013
train metrics, batch: 4096  acc, f1 
0.8992080688476562, 0.900153424077755
eval metrics, batch: 5120 acc, f1
0.77490234375, 0.7479841465081317
eval metrics, batch: 6144 acc, f1
0.78094482421875, 0.7600935828877006
eval metrics, batch: 7168 acc, f1
0.774749755859375, 0.7483721405925068
Epoch loss - train: tensor(0.2712, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.5565, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.781524658203125, 0.7597892829580914
train metrics acc, f1 
0.9019851684570312, 0.9028773171247997
Epoch 14/15
----------
eval metrics, batch: 1024 acc, f1
0.79583740234375, 0.7855631771267388
eval metrics, batch: 2048 acc, f1
0.79449462890625, 0.7882256745707277
eval metrics, batch: 3072 acc, f1
0.772491455078125, 0.743523583445144
eval metrics, batch: 4096 acc, f1
0.77276611328125, 0.7439301189903019
train metrics, batch: 4096  acc, f1 
0.9020156860351562, 0.9017443194858847
eval metrics, batch: 5120 acc, f1
0.7779541015625, 0.7529707340259387
eval metrics, batch: 6144 acc, f1
0.7681884765625, 0.7360116772085911
eval metrics, batch: 7168 acc, f1
0.775146484375, 0.7495921696574225
Epoch loss - train: tensor(0.2642, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.5719, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.777862548828125, 0.7524570651249788
train metrics acc, f1 
0.9048690795898438, 0.9052032174190704
Epoch 15/15
----------
eval metrics, batch: 1024 acc, f1
0.795318603515625, 0.7808241560733309
eval metrics, batch: 2048 acc, f1
0.777130126953125, 0.7554990123539456
eval metrics, batch: 3072 acc, f1
0.781646728515625, 0.7602613503099347
eval metrics, batch: 4096 acc, f1
0.777587890625, 0.7523951892369368
train metrics, batch: 4096  acc, f1 
0.9057426452636719, 0.9061133297109571
eval metrics, batch: 5120 acc, f1
0.773712158203125, 0.7485844098599668
eval metrics, batch: 6144 acc, f1
0.771087646484375, 0.7439494794333504
eval metrics, batch: 7168 acc, f1
0.768280029296875, 0.737038961038961
Epoch loss - train: tensor(0.2576, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.5439, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.78057861328125, 0.76177854350275
train metrics acc, f1 
0.9080352783203125, 0.9100561869016617
Training time 351m 34s
train_acc
0.4999732971191406	0.8087959289550781	0.8265151977539062	0.8292579650878906	0.8427619934082031	0.8436088562011719	0.8538856506347656	0.8548851013183594	0.860626220703125	0.8636665344238281	0.8685951232910156	0.867584228515625	0.875579833984375	0.8750228881835938	0.8800277709960938	0.8777847290039062	0.8839797973632812	0.8812675476074219	0.8882522583007812	0.8867950439453125	0.890380859375	0.8915061950683594	0.8947715759277344	0.8917236328125	0.8992118835449219	0.8992080688476562	0.9019851684570312	0.9020156860351562	0.9048690795898438	0.9057426452636719	0.9080352783203125
train_f1
0.0	0.8072481435476986	0.8279629279364479	0.8276597628921155	0.8428812661286941	0.8417855612971445	0.8590376299567577	0.855537031903299	0.8591692620802368	0.8661986859100353	0.8733766353113295	0.8724667499448894	0.8780382009363268	0.8778157352985052	0.8817082161072411	0.8766972505311124	0.8870484947969666	0.8842751815345947	0.8907714679891122	0.8900302383493419	0.8937113013115943	0.8931532580723932	0.8940965090431637	0.8894032200246256	0.9007732781510427	0.900153424077755	0.9028773171247997	0.9017443194858847	0.9052032174190704	0.9061133297109571	0.9100561869016617
train_loss
tensor(0.4344, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.3945, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.3706, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.3532, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.3396, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.3285, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.3177, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.3077, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.2995, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.2924, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.2853, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.2785, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.2712, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.2642, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.2576, device='cuda:0', grad_fn=<DivBackward0>)
valid_acc
0.500457763671875	0.744293212890625	0.767974853515625	0.768463134765625	0.77789306640625	0.7803955078125	0.784271240234375	0.790435791015625	0.7911376953125	0.773345947265625	0.78375244140625	0.79449462890625	0.791839599609375	0.78594970703125	0.787322998046875	0.792236328125	0.79296875	0.789886474609375	0.796661376953125	0.792755126953125	0.79168701171875	0.7991943359375	0.795318603515625	0.795562744140625	0.79730224609375	0.795623779296875	0.801605224609375	0.791900634765625	0.78955078125	0.79205322265625	0.792266845703125	0.795135498046875	0.78857421875	0.795989990234375	0.802337646484375	0.798309326171875	0.793853759765625	0.781646728515625	0.790863037109375	0.785552978515625	0.793121337890625	0.798065185546875	0.791717529296875	0.792633056640625	0.792022705078125	0.79608154296875	0.791595458984375	0.789031982421875	0.794189453125	0.801605224609375	0.802215576171875	0.7789306640625	0.794647216796875	0.787384033203125	0.78546142578125	0.785888671875	0.792999267578125	0.798095703125	0.790618896484375	0.78765869140625	0.78399658203125	0.78558349609375	0.792022705078125	0.78814697265625	0.789825439453125	0.7984619140625	0.797882080078125	0.786346435546875	0.793121337890625	0.78680419921875	0.78240966796875	0.78546142578125	0.78472900390625	0.79754638671875	0.786346435546875	0.78985595703125	0.79278564453125	0.794158935546875	0.783935546875	0.780670166015625	0.78729248046875	0.7979736328125	0.7930908203125	0.77020263671875	0.78564453125	0.770355224609375	0.778717041015625	0.788238525390625	0.778228759765625	0.79241943359375	0.785400390625	0.78076171875	0.767974853515625	0.780059814453125	0.781890869140625	0.78448486328125	0.783966064453125	0.793792724609375	0.775421142578125	0.781707763671875	0.78192138671875	0.77490234375	0.78094482421875	0.774749755859375	0.781524658203125	0.79583740234375	0.79449462890625	0.772491455078125	0.77276611328125	0.7779541015625	0.7681884765625	0.775146484375	0.777862548828125	0.795318603515625	0.777130126953125	0.781646728515625	0.777587890625	0.773712158203125	0.771087646484375	0.768280029296875	0.78057861328125
valid_f1
0.0	0.7392400336103072	0.7685751681733783	0.7567099567099567	0.7700183277507426	0.7671046669687358	0.7747937175443627	0.7804878048780488	0.7865518962075848	0.7686076580365766	0.7753329105897273	0.7879055118110236	0.78276378228606	0.7704842931937173	0.7745754488112566	0.7855342741935484	0.783397190293742	0.7858142790480634	0.7911481678838981	0.7829449931281363	0.77893645961526	0.8008836167766145	0.7898743694977913	0.7913149123080278	0.7948353617100142	0.7911690417537185	0.7990852056741973	0.785086198745627	0.7776774775936552	0.7816865308214789	0.7841719775516027	0.7866247099583611	0.7711114047839303	0.789110066563614	0.7991690180149452	0.795165039516504	0.7845088844227518	0.7557103349380313	0.7749203534009919	0.7665370942556231	0.7868842151592317	0.7908990361826513	0.7757073844030365	0.7821347269870788	0.7865443041939424	0.7892645389176233	0.7835705004278516	0.7729497158997602	0.7832068921177832	0.800772271766112	0.8041106241499169	0.756291212488225	0.7843891185235028	0.7737913568622358	0.7707110241356817	0.7657898250767793	0.7793500536742461	0.7931724396648743	0.7761281691519561	0.7704842327483837	0.7619079655543596	0.7653463362500835	0.7806636413375817	0.7723486587525414	0.7776019633803727	0.7911844684753051	0.7890025168052502	0.7682478731503857	0.7829400275367423	0.7736668178578371	0.7610910065674843	0.7641414480305979	0.7691149515579995	0.7880240286298569	0.7698326593681165	0.7782286634460548	0.7818263607737292	0.7896853855508091	0.7629411370789526	0.7615065538410486	0.7749580266046752	0.790559352062769	0.7850893875998478	0.7391213968957872	0.7683071645335796	0.7377957420119168	0.7542117216365547	0.7769025495932869	0.7518185854308255	0.7788686605981795	0.7656156256249583	0.7593461074634865	0.7327874037887042	0.7567093137089423	0.7622026285143902	0.7668999207816214	0.7655727390138093	0.7795935675375933	0.7465647277611324	0.7644016995487632	0.7612269446672013	0.7479841465081317	0.7600935828877006	0.7483721405925068	0.7597892829580914	0.7855631771267388	0.7882256745707277	0.743523583445144	0.7439301189903019	0.7529707340259387	0.7360116772085911	0.7495921696574225	0.7524570651249788	0.7808241560733309	0.7554990123539456	0.7602613503099347	0.7523951892369368	0.7485844098599668	0.7439494794333504	0.737038961038961	0.76177854350275
valid_loss
tensor(0.4477, device='cuda:0')	tensor(0.4489, device='cuda:0')	tensor(0.4385, device='cuda:0')	tensor(0.4776, device='cuda:0')	tensor(0.4630, device='cuda:0')	tensor(0.4663, device='cuda:0')	tensor(0.4758, device='cuda:0')	tensor(0.4931, device='cuda:0')	tensor(0.5116, device='cuda:0')	tensor(0.5062, device='cuda:0')	tensor(0.5716, device='cuda:0')	tensor(0.5198, device='cuda:0')	tensor(0.5565, device='cuda:0')	tensor(0.5719, device='cuda:0')	tensor(0.5439, device='cuda:0')
Best model metrics: train, valid, test: acc, f1
0.8538856506347656, 0.8590376299567577
0.79730224609375, 0.7948353617100142
0.77520751953125, 0.7684375982395473
Model saved, path ./models/densenet_12-1558897741.pth
experiment validation
train set
Evaluation results
[[107130.  23942.]
 [ 14361. 116711.]]
#############################
Accuracy
0.8538856506347656
------------------------
Recall
0.8904342651367188
------------------------
Specificity
0.8173370361328125
------------------------
Precision
0.8297796705367109
------------------------
Fall_out
0.1826629638671875
------------------------
F1
0.8590376299567577
------------------------
#############################
valid set
Evaluation results
[[13260.  3139.]
 [ 3503. 12866.]]
#############################
Accuracy
0.79730224609375
------------------------
Recall
0.7859979229030485
------------------------
Specificity
0.808585889383499
------------------------
Precision
0.8038737894407998
------------------------
Fall_out
0.19141411061650102
------------------------
F1
0.7948353617100142
------------------------
#############################
test set
Evaluation results
[[13180.  3211.]
 [ 4155. 12222.]]
#############################
Accuracy
0.77520751953125
------------------------
Recall
0.7462905294009892
------------------------
Specificity
0.8040998108718199
------------------------
Precision
0.7919393507419167
------------------------
Fall_out
0.1959001891281801
------------------------
F1
0.7684375982395473
------------------------
#############################
AUC: 0.8580981569245818
Experiment end
########################################
