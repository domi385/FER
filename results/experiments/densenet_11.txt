----------------------------------------
Starting experiment densenet_11-1558897741
Experiment parameters Experiment[name: densenet_11-1558897741, model: DenseNet(
  (features): Sequential(
    (conv0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (norm0): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu0): ReLU(inplace)
    (pool0): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (denseblock1): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(96, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (transition1): _Transition(
      (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock2): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer7): _DenseLayer(
        (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer8): _DenseLayer(
        (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer9): _DenseLayer(
        (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer10): _DenseLayer(
        (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer11): _DenseLayer(
        (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer12): _DenseLayer(
        (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (transition2): _Transition(
      (norm): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock3): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer7): _DenseLayer(
        (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer8): _DenseLayer(
        (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer9): _DenseLayer(
        (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer10): _DenseLayer(
        (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer11): _DenseLayer(
        (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer12): _DenseLayer(
        (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer13): _DenseLayer(
        (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer14): _DenseLayer(
        (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer15): _DenseLayer(
        (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer16): _DenseLayer(
        (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer17): _DenseLayer(
        (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer18): _DenseLayer(
        (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer19): _DenseLayer(
        (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer20): _DenseLayer(
        (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer21): _DenseLayer(
        (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer22): _DenseLayer(
        (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer23): _DenseLayer(
        (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer24): _DenseLayer(
        (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (transition3): _Transition(
      (norm): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock4): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer7): _DenseLayer(
        (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer8): _DenseLayer(
        (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer9): _DenseLayer(
        (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer10): _DenseLayer(
        (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer11): _DenseLayer(
        (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer12): _DenseLayer(
        (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer13): _DenseLayer(
        (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer14): _DenseLayer(
        (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer15): _DenseLayer(
        (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer16): _DenseLayer(
        (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (norm5): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (classifier): Linear(in_features=1024, out_features=1, bias=True)
), params: Params(lr: 1e-05, weight_decay: 0, batch_size: 32, num_epochs: 15), optimizer: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 1e-05
    weight_decay: 0
), criterion: BCEWithLogitsLoss()]
start metrics
eval metrics acc, f1
0.500457763671875, 0.0
train metrics acc, f1
0.5, 0.0
Epoch 1/15
----------
eval metrics, batch: 1024 acc, f1
0.7958984375, 0.7867618926157378
eval metrics, batch: 2048 acc, f1
0.771759033203125, 0.7403936269915652
eval metrics, batch: 3072 acc, f1
0.81884765625, 0.8198373194124075
eval metrics, batch: 4096 acc, f1
0.7960205078125, 0.7771257085695231
train metrics, batch: 4096  acc, f1 
0.85565185546875, 0.8517241379310345
eval metrics, batch: 5120 acc, f1
0.76422119140625, 0.7234590879805283
eval metrics, batch: 6144 acc, f1
0.81817626953125, 0.8122045010401563
eval metrics, batch: 7168 acc, f1
0.8028564453125, 0.7901779914252306
Epoch loss - train: tensor(0.3615, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4114, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.810791015625, 0.8104207436399217
train metrics acc, f1 
0.8693161010742188, 0.8759541155511783
Epoch 2/15
----------
eval metrics, batch: 1024 acc, f1
0.816192626953125, 0.8117165275563475
eval metrics, batch: 2048 acc, f1
0.82305908203125, 0.8177761015777233
eval metrics, batch: 3072 acc, f1
0.821380615234375, 0.8253930372005609
eval metrics, batch: 4096 acc, f1
0.76513671875, 0.7190830778215798
train metrics, batch: 4096  acc, f1 
0.8692436218261719, 0.8601207115369705
eval metrics, batch: 5120 acc, f1
0.7755126953125, 0.7349953166654658
eval metrics, batch: 6144 acc, f1
0.816680908203125, 0.8092592004572444
eval metrics, batch: 7168 acc, f1
0.746002197265625, 0.6933647717643592
Epoch loss - train: tensor(0.3021, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4536, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.801971435546875, 0.7898980087421078
train metrics acc, f1 
0.891326904296875, 0.8939515768784061
Epoch 3/15
----------
eval metrics, batch: 1024 acc, f1
0.807403564453125, 0.7929529871067222
eval metrics, batch: 2048 acc, f1
0.80316162109375, 0.7869881109643329
eval metrics, batch: 3072 acc, f1
0.80413818359375, 0.7828969623164874
eval metrics, batch: 4096 acc, f1
0.803466796875, 0.7796633365266183
train metrics, batch: 4096  acc, f1 
0.90350341796875, 0.9023116788828559
eval metrics, batch: 5120 acc, f1
0.79827880859375, 0.7748637602179836
eval metrics, batch: 6144 acc, f1
0.804595947265625, 0.7853431224647155
eval metrics, batch: 7168 acc, f1
0.782257080078125, 0.7533275713050994
Epoch loss - train: tensor(0.2667, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.5283, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.763641357421875, 0.7159153431390529
train metrics acc, f1 
0.9035720825195312, 0.8996522484756098
Epoch 4/15
----------
eval metrics, batch: 1024 acc, f1
0.8154296875, 0.8034065791184501
eval metrics, batch: 2048 acc, f1
0.816680908203125, 0.8293029467761643
eval metrics, batch: 3072 acc, f1
0.761077880859375, 0.7115646759753896
eval metrics, batch: 4096 acc, f1
0.7904052734375, 0.7605299860529986
train metrics, batch: 4096  acc, f1 
0.9122085571289062, 0.9110329364465749
eval metrics, batch: 5120 acc, f1
0.791961669921875, 0.759821019624423
eval metrics, batch: 6144 acc, f1
0.758819580078125, 0.7048145519740037
eval metrics, batch: 7168 acc, f1
0.832183837890625, 0.8327503877855166
Epoch loss - train: tensor(0.2408, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.5847, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.757049560546875, 0.7009503775215056
train metrics acc, f1 
0.9145736694335938, 0.9105513748422247
Epoch 5/15
----------
eval metrics, batch: 1024 acc, f1
0.8115234375, 0.7994674978894734
eval metrics, batch: 2048 acc, f1
0.817108154296875, 0.8076392232386455
eval metrics, batch: 3072 acc, f1
0.785919189453125, 0.7542304593070105
eval metrics, batch: 4096 acc, f1
0.7762451171875, 0.7373172828890799
train metrics, batch: 4096  acc, f1 
0.9225845336914062, 0.9212525707190252
eval metrics, batch: 5120 acc, f1
0.8011474609375, 0.7739540692430444
eval metrics, batch: 6144 acc, f1
0.79693603515625, 0.7723260110860193
eval metrics, batch: 7168 acc, f1
0.816741943359375, 0.8103584399178904
Epoch loss - train: tensor(0.2189, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.5988, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.774505615234375, 0.7329695348921254
train metrics acc, f1 
0.9110298156738281, 0.9083644050149497
Epoch 6/15
----------
eval metrics, batch: 1024 acc, f1
0.817352294921875, 0.8090604562131122
eval metrics, batch: 2048 acc, f1
0.745452880859375, 0.6794758482880529
eval metrics, batch: 3072 acc, f1
0.792816162109375, 0.761194554855957
eval metrics, batch: 4096 acc, f1
0.7972412109375, 0.7735977646016493
train metrics, batch: 4096  acc, f1 
0.9336433410644531, 0.9338479968055371
eval metrics, batch: 5120 acc, f1
0.79205322265625, 0.7650020692509312
eval metrics, batch: 6144 acc, f1
0.795654296875, 0.7670956521739131
eval metrics, batch: 7168 acc, f1
0.747039794921875, 0.6923276790022642
Epoch loss - train: tensor(0.2008, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.5139, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.798797607421875, 0.7751440946761706
train metrics acc, f1 
0.937286376953125, 0.9378026634382567
Epoch 7/15
----------
eval metrics, batch: 1024 acc, f1
0.79351806640625, 0.7733788853161844
eval metrics, batch: 2048 acc, f1
0.804840087890625, 0.7986143914344198
eval metrics, batch: 3072 acc, f1
0.7763671875, 0.7369705671213209
eval metrics, batch: 4096 acc, f1
0.76788330078125, 0.7213919413919414
train metrics, batch: 4096  acc, f1 
0.9371223449707031, 0.9357059550881737
eval metrics, batch: 5120 acc, f1
0.78814697265625, 0.7580847504878728
eval metrics, batch: 6144 acc, f1
0.78662109375, 0.7667311670114099
eval metrics, batch: 7168 acc, f1
0.8045654296875, 0.7906094690034005
Epoch loss - train: tensor(0.1853, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4691, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.826629638671875, 0.8190821948345595
train metrics acc, f1 
0.9286155700683594, 0.9310513807778044
Epoch 8/15
----------
eval metrics, batch: 1024 acc, f1
0.79461669921875, 0.7687920846502679
eval metrics, batch: 2048 acc, f1
0.803131103515625, 0.7821859067427491
eval metrics, batch: 3072 acc, f1
0.822906494140625, 0.8167029912505133
eval metrics, batch: 4096 acc, f1
0.792205810546875, 0.764321068844969
train metrics, batch: 4096  acc, f1 
0.9448738098144531, 0.9450747425913045
eval metrics, batch: 5120 acc, f1
0.80023193359375, 0.7715661641541038
eval metrics, batch: 6144 acc, f1
0.812774658203125, 0.7947405399979925
eval metrics, batch: 7168 acc, f1
0.775604248046875, 0.7488128992587025
Epoch loss - train: tensor(0.1709, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.6253, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.7857666015625, 0.7492678048432031
train metrics acc, f1 
0.9488868713378906, 0.948259816887866
Epoch 9/15
----------
eval metrics, batch: 1024 acc, f1
0.803619384765625, 0.782608695652174
eval metrics, batch: 2048 acc, f1
0.7867431640625, 0.7538223067709434
eval metrics, batch: 3072 acc, f1
0.816253662109375, 0.8083887598256054
eval metrics, batch: 4096 acc, f1
0.796539306640625, 0.7735163229948704
train metrics, batch: 4096  acc, f1 
0.9518165588378906, 0.9523165957575322
eval metrics, batch: 5120 acc, f1
0.76812744140625, 0.7205590290547995
eval metrics, batch: 6144 acc, f1
0.811126708984375, 0.794378550782418
eval metrics, batch: 7168 acc, f1
0.758941650390625, 0.7015979751426089
Epoch loss - train: tensor(0.1574, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.5195, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.801483154296875, 0.776268271711092
train metrics acc, f1 
0.9541854858398438, 0.9543154931720491
Epoch 10/15
----------
eval metrics, batch: 1024 acc, f1
0.7840576171875, 0.7500353257029815
eval metrics, batch: 2048 acc, f1
0.813385009765625, 0.7993832223352252
eval metrics, batch: 3072 acc, f1
0.7860107421875, 0.7519105575997735
eval metrics, batch: 4096 acc, f1
0.776885986328125, 0.7319916419223579
train metrics, batch: 4096  acc, f1 
0.9543647766113281, 0.9532868662019953
eval metrics, batch: 5120 acc, f1
0.829193115234375, 0.8245509545155324
eval metrics, batch: 6144 acc, f1
0.757537841796875, 0.7017082785808147
eval metrics, batch: 7168 acc, f1
0.746856689453125, 0.6820011500862565
Epoch loss - train: tensor(0.1434, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.5829, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.7904052734375, 0.7650037637719839
train metrics acc, f1 
0.9580230712890625, 0.9585829996085634
Epoch 11/15
----------
eval metrics, batch: 1024 acc, f1
0.768096923828125, 0.7256975778796521
eval metrics, batch: 2048 acc, f1
0.805694580078125, 0.782688828970272
eval metrics, batch: 3072 acc, f1
0.754608154296875, 0.6948039625004745
eval metrics, batch: 4096 acc, f1
0.771697998046875, 0.7236526171918289
train metrics, batch: 4096  acc, f1 
0.9549446105957031, 0.9538475966441721
eval metrics, batch: 5120 acc, f1
0.78668212890625, 0.7555260212646894
eval metrics, batch: 6144 acc, f1
0.80694580078125, 0.7867448759439051
eval metrics, batch: 7168 acc, f1
0.748687744140625, 0.6989801513323829
Epoch loss - train: tensor(0.1325, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.5920, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.80401611328125, 0.7830698554249426
train metrics acc, f1 
0.9657821655273438, 0.9661634565330557
Epoch 12/15
----------
eval metrics, batch: 1024 acc, f1
0.797821044921875, 0.7773932327542757
eval metrics, batch: 2048 acc, f1
0.779022216796875, 0.738771239943721
eval metrics, batch: 3072 acc, f1
0.7830810546875, 0.7501054703979749
eval metrics, batch: 4096 acc, f1
0.784210205078125, 0.7475454318254847
train metrics, batch: 4096  acc, f1 
0.9651832580566406, 0.9648172633250712
eval metrics, batch: 5120 acc, f1
0.790924072265625, 0.7627194957226474
eval metrics, batch: 6144 acc, f1
0.79791259765625, 0.7737460707940412
eval metrics, batch: 7168 acc, f1
0.808135986328125, 0.7892743422155187
Epoch loss - train: tensor(0.1205, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.6817, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.809173583984375, 0.7863755935909261
train metrics acc, f1 
0.9713897705078125, 0.9716014509765314
Epoch 13/15
----------
eval metrics, batch: 1024 acc, f1
0.7735595703125, 0.7385114180998027
eval metrics, batch: 2048 acc, f1
0.794891357421875, 0.7686482393032942
eval metrics, batch: 3072 acc, f1
0.76947021484375, 0.7217064544650752
eval metrics, batch: 4096 acc, f1
0.793731689453125, 0.7711373717536315
train metrics, batch: 4096  acc, f1 
0.972076416015625, 0.9724652618433228
eval metrics, batch: 5120 acc, f1
0.76617431640625, 0.7166000887705282
eval metrics, batch: 6144 acc, f1
0.743621826171875, 0.6814061966703326
eval metrics, batch: 7168 acc, f1
0.7720947265625, 0.7308246828143022
Epoch loss - train: tensor(0.1100, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.6959, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.798370361328125, 0.7793179464911988
train metrics acc, f1 
0.9725303649902344, 0.9729567330261344
Epoch 14/15
----------
eval metrics, batch: 1024 acc, f1
0.76788330078125, 0.7239802583829293
eval metrics, batch: 2048 acc, f1
0.764404296875, 0.7224219761254135
eval metrics, batch: 3072 acc, f1
0.7772216796875, 0.7379567808170006
eval metrics, batch: 4096 acc, f1
0.772186279296875, 0.7294407596680077
train metrics, batch: 4096  acc, f1 
0.975921630859375, 0.9757142967072711
eval metrics, batch: 5120 acc, f1
0.784759521484375, 0.7550786540264611
eval metrics, batch: 6144 acc, f1
0.799774169921875, 0.7882933754961118
eval metrics, batch: 7168 acc, f1
0.73858642578125, 0.6726286020025988
Epoch loss - train: tensor(0.1011, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.9672, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.76025390625, 0.7080639167595689
train metrics acc, f1 
0.9652633666992188, 0.9645849052200901
Epoch 15/15
----------
eval metrics, batch: 1024 acc, f1
0.793060302734375, 0.7695497026338148
eval metrics, batch: 2048 acc, f1
0.816192626953125, 0.8040982273540414
eval metrics, batch: 3072 acc, f1
0.78289794921875, 0.7483195358381094
eval metrics, batch: 4096 acc, f1
0.758819580078125, 0.7107141549837109
train metrics, batch: 4096  acc, f1 
0.9790077209472656, 0.9788852096706737
eval metrics, batch: 5120 acc, f1
0.78753662109375, 0.7594166839449858
eval metrics, batch: 6144 acc, f1
0.78228759765625, 0.7529436210001386
eval metrics, batch: 7168 acc, f1
0.78521728515625, 0.7538988740471362
Epoch loss - train: tensor(0.0914, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.9195, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.76641845703125, 0.7216322374163515
train metrics acc, f1 
0.9744491577148438, 0.9743056621144699
Training time 360m 33s
train_acc
0.5	0.85565185546875	0.8693161010742188	0.8692436218261719	0.891326904296875	0.90350341796875	0.9035720825195312	0.9122085571289062	0.9145736694335938	0.9225845336914062	0.9110298156738281	0.9336433410644531	0.937286376953125	0.9371223449707031	0.9286155700683594	0.9448738098144531	0.9488868713378906	0.9518165588378906	0.9541854858398438	0.9543647766113281	0.9580230712890625	0.9549446105957031	0.9657821655273438	0.9651832580566406	0.9713897705078125	0.972076416015625	0.9725303649902344	0.975921630859375	0.9652633666992188	0.9790077209472656	0.9744491577148438
train_f1
0.0	0.8517241379310345	0.8759541155511783	0.8601207115369705	0.8939515768784061	0.9023116788828559	0.8996522484756098	0.9110329364465749	0.9105513748422247	0.9212525707190252	0.9083644050149497	0.9338479968055371	0.9378026634382567	0.9357059550881737	0.9310513807778044	0.9450747425913045	0.948259816887866	0.9523165957575322	0.9543154931720491	0.9532868662019953	0.9585829996085634	0.9538475966441721	0.9661634565330557	0.9648172633250712	0.9716014509765314	0.9724652618433228	0.9729567330261344	0.9757142967072711	0.9645849052200901	0.9788852096706737	0.9743056621144699
train_loss
tensor(0.3615, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.3021, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.2667, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.2408, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.2189, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.2008, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.1853, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.1709, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.1574, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.1434, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.1325, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.1205, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.1100, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.1011, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.0914, device='cuda:0', grad_fn=<DivBackward0>)
valid_acc
0.500457763671875	0.7958984375	0.771759033203125	0.81884765625	0.7960205078125	0.76422119140625	0.81817626953125	0.8028564453125	0.810791015625	0.816192626953125	0.82305908203125	0.821380615234375	0.76513671875	0.7755126953125	0.816680908203125	0.746002197265625	0.801971435546875	0.807403564453125	0.80316162109375	0.80413818359375	0.803466796875	0.79827880859375	0.804595947265625	0.782257080078125	0.763641357421875	0.8154296875	0.816680908203125	0.761077880859375	0.7904052734375	0.791961669921875	0.758819580078125	0.832183837890625	0.757049560546875	0.8115234375	0.817108154296875	0.785919189453125	0.7762451171875	0.8011474609375	0.79693603515625	0.816741943359375	0.774505615234375	0.817352294921875	0.745452880859375	0.792816162109375	0.7972412109375	0.79205322265625	0.795654296875	0.747039794921875	0.798797607421875	0.79351806640625	0.804840087890625	0.7763671875	0.76788330078125	0.78814697265625	0.78662109375	0.8045654296875	0.826629638671875	0.79461669921875	0.803131103515625	0.822906494140625	0.792205810546875	0.80023193359375	0.812774658203125	0.775604248046875	0.7857666015625	0.803619384765625	0.7867431640625	0.816253662109375	0.796539306640625	0.76812744140625	0.811126708984375	0.758941650390625	0.801483154296875	0.7840576171875	0.813385009765625	0.7860107421875	0.776885986328125	0.829193115234375	0.757537841796875	0.746856689453125	0.7904052734375	0.768096923828125	0.805694580078125	0.754608154296875	0.771697998046875	0.78668212890625	0.80694580078125	0.748687744140625	0.80401611328125	0.797821044921875	0.779022216796875	0.7830810546875	0.784210205078125	0.790924072265625	0.79791259765625	0.808135986328125	0.809173583984375	0.7735595703125	0.794891357421875	0.76947021484375	0.793731689453125	0.76617431640625	0.743621826171875	0.7720947265625	0.798370361328125	0.76788330078125	0.764404296875	0.7772216796875	0.772186279296875	0.784759521484375	0.799774169921875	0.73858642578125	0.76025390625	0.793060302734375	0.816192626953125	0.78289794921875	0.758819580078125	0.78753662109375	0.78228759765625	0.78521728515625	0.76641845703125
valid_f1
0.0	0.7867618926157378	0.7403936269915652	0.8198373194124075	0.7771257085695231	0.7234590879805283	0.8122045010401563	0.7901779914252306	0.8104207436399217	0.8117165275563475	0.8177761015777233	0.8253930372005609	0.7190830778215798	0.7349953166654658	0.8092592004572444	0.6933647717643592	0.7898980087421078	0.7929529871067222	0.7869881109643329	0.7828969623164874	0.7796633365266183	0.7748637602179836	0.7853431224647155	0.7533275713050994	0.7159153431390529	0.8034065791184501	0.8293029467761643	0.7115646759753896	0.7605299860529986	0.759821019624423	0.7048145519740037	0.8327503877855166	0.7009503775215056	0.7994674978894734	0.8076392232386455	0.7542304593070105	0.7373172828890799	0.7739540692430444	0.7723260110860193	0.8103584399178904	0.7329695348921254	0.8090604562131122	0.6794758482880529	0.761194554855957	0.7735977646016493	0.7650020692509312	0.7670956521739131	0.6923276790022642	0.7751440946761706	0.7733788853161844	0.7986143914344198	0.7369705671213209	0.7213919413919414	0.7580847504878728	0.7667311670114099	0.7906094690034005	0.8190821948345595	0.7687920846502679	0.7821859067427491	0.8167029912505133	0.764321068844969	0.7715661641541038	0.7947405399979925	0.7488128992587025	0.7492678048432031	0.782608695652174	0.7538223067709434	0.8083887598256054	0.7735163229948704	0.7205590290547995	0.794378550782418	0.7015979751426089	0.776268271711092	0.7500353257029815	0.7993832223352252	0.7519105575997735	0.7319916419223579	0.8245509545155324	0.7017082785808147	0.6820011500862565	0.7650037637719839	0.7256975778796521	0.782688828970272	0.6948039625004745	0.7236526171918289	0.7555260212646894	0.7867448759439051	0.6989801513323829	0.7830698554249426	0.7773932327542757	0.738771239943721	0.7501054703979749	0.7475454318254847	0.7627194957226474	0.7737460707940412	0.7892743422155187	0.7863755935909261	0.7385114180998027	0.7686482393032942	0.7217064544650752	0.7711373717536315	0.7166000887705282	0.6814061966703326	0.7308246828143022	0.7793179464911988	0.7239802583829293	0.7224219761254135	0.7379567808170006	0.7294407596680077	0.7550786540264611	0.7882933754961118	0.6726286020025988	0.7080639167595689	0.7695497026338148	0.8040982273540414	0.7483195358381094	0.7107141549837109	0.7594166839449858	0.7529436210001386	0.7538988740471362	0.7216322374163515
valid_loss
tensor(0.4114, device='cuda:0')	tensor(0.4536, device='cuda:0')	tensor(0.5283, device='cuda:0')	tensor(0.5847, device='cuda:0')	tensor(0.5988, device='cuda:0')	tensor(0.5139, device='cuda:0')	tensor(0.4691, device='cuda:0')	tensor(0.6253, device='cuda:0')	tensor(0.5195, device='cuda:0')	tensor(0.5829, device='cuda:0')	tensor(0.5920, device='cuda:0')	tensor(0.6817, device='cuda:0')	tensor(0.6959, device='cuda:0')	tensor(0.9672, device='cuda:0')	tensor(0.9195, device='cuda:0')
Best model metrics: train, valid, test: acc, f1
0.9286155700683594, 0.9310513807778044
0.826629638671875, 0.8190821948345595
0.7872314453125, 0.7690013915578822
Model saved, path ./models/densenet_11-1558897741.pth
experiment validation
train set
Evaluation results
[[117085.  13987.]
 [  4726. 126346.]]
#############################
Accuracy
0.9286155700683594
------------------------
Recall
0.9639434814453125
------------------------
Specificity
0.8932876586914062
------------------------
Precision
0.9003299295247732
------------------------
Fall_out
0.10671234130859375
------------------------
F1
0.9310513807778044
------------------------
#############################
valid set
Evaluation results
[[14227.  2172.]
 [ 3509. 12860.]]
#############################
Accuracy
0.826629638671875
------------------------
Recall
0.7856313763821858
------------------------
Specificity
0.8675528995670467
------------------------
Precision
0.8555082490686535
------------------------
Fall_out
0.13244710043295324
------------------------
F1
0.8190821948345595
------------------------
#############################
test set
Evaluation results
[[14191.  2200.]
 [ 4772. 11605.]]
#############################
Accuracy
0.7872314453125
------------------------
Recall
0.7086157415888136
------------------------
Specificity
0.8657800012201818
------------------------
Precision
0.8406374501992032
------------------------
Fall_out
0.1342199987798182
------------------------
F1
0.7690013915578822
------------------------
#############################
AUC: 0.8713645495357473
Experiment end
########################################
