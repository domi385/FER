----------------------------------------
Starting experiment densenet_6-1558897741
Experiment parameters Experiment[name: densenet_6-1558897741, model: DenseNet(
  (features): Sequential(
    (conv0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (norm0): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu0): ReLU(inplace)
    (pool0): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (denseblock1): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(96, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (transition1): _Transition(
      (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock2): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer7): _DenseLayer(
        (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer8): _DenseLayer(
        (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer9): _DenseLayer(
        (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer10): _DenseLayer(
        (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer11): _DenseLayer(
        (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer12): _DenseLayer(
        (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (transition2): _Transition(
      (norm): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock3): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer7): _DenseLayer(
        (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer8): _DenseLayer(
        (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer9): _DenseLayer(
        (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer10): _DenseLayer(
        (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer11): _DenseLayer(
        (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer12): _DenseLayer(
        (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer13): _DenseLayer(
        (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer14): _DenseLayer(
        (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer15): _DenseLayer(
        (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer16): _DenseLayer(
        (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer17): _DenseLayer(
        (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer18): _DenseLayer(
        (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer19): _DenseLayer(
        (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer20): _DenseLayer(
        (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer21): _DenseLayer(
        (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer22): _DenseLayer(
        (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer23): _DenseLayer(
        (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer24): _DenseLayer(
        (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (transition3): _Transition(
      (norm): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock4): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer7): _DenseLayer(
        (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer8): _DenseLayer(
        (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer9): _DenseLayer(
        (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer10): _DenseLayer(
        (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer11): _DenseLayer(
        (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer12): _DenseLayer(
        (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer13): _DenseLayer(
        (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer14): _DenseLayer(
        (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer15): _DenseLayer(
        (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer16): _DenseLayer(
        (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (norm5): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (classifier): Linear(in_features=1024, out_features=1, bias=True)
), params: Params(lr: 0.0001, weight_decay: 0, batch_size: 32, num_epochs: 10), optimizer: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.0001
    weight_decay: 0
), criterion: BCEWithLogitsLoss()]
start metrics
eval metrics acc, f1
0.37939453125, 0.19633259563705344
train metrics acc, f1
0.4116363525390625, 0.24530997700249546
Epoch 1/10
----------
eval metrics, batch: 1024 acc, f1
0.7760009765625, 0.7585049680858064
eval metrics, batch: 2048 acc, f1
0.791961669921875, 0.7776074119988255
eval metrics, batch: 3072 acc, f1
0.80078125, 0.7901504436157901
eval metrics, batch: 4096 acc, f1
0.801605224609375, 0.7885922409027348
train metrics, batch: 4096  acc, f1 
0.8226280212402344, 0.8178509728952595
eval metrics, batch: 5120 acc, f1
0.80255126953125, 0.7958604152205465
eval metrics, batch: 6144 acc, f1
0.80426025390625, 0.7917126712996038
eval metrics, batch: 7168 acc, f1
0.806549072265625, 0.79687249655526
Epoch loss - train: tensor(0.4198, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4143, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.80535888671875, 0.7916775542200157
train metrics acc, f1 
0.8301048278808594, 0.8253718058806693
Epoch 2/10
----------
eval metrics, batch: 1024 acc, f1
0.8076171875, 0.7995803395434603
eval metrics, batch: 2048 acc, f1
0.8101806640625, 0.8029775102945834
eval metrics, batch: 3072 acc, f1
0.811370849609375, 0.8043677797119797
eval metrics, batch: 4096 acc, f1
0.810943603515625, 0.8019944385847158
train metrics, batch: 4096  acc, f1 
0.8351593017578125, 0.8341126338822987
eval metrics, batch: 5120 acc, f1
0.8121337890625, 0.8070582335610856
eval metrics, batch: 6144 acc, f1
0.810272216796875, 0.8015196500973726
eval metrics, batch: 7168 acc, f1
0.810699462890625, 0.8014976479247335
Epoch loss - train: tensor(0.3772, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4032, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.81243896484375, 0.8044170061099797
train metrics acc, f1 
0.8380584716796875, 0.8379991451947735
Epoch 3/10
----------
eval metrics, batch: 1024 acc, f1
0.81036376953125, 0.7993671703474106
eval metrics, batch: 2048 acc, f1
0.81463623046875, 0.8072969543147208
eval metrics, batch: 3072 acc, f1
0.81488037109375, 0.8080622705986584
eval metrics, batch: 4096 acc, f1
0.814605712890625, 0.8104346740724561
train metrics, batch: 4096  acc, f1 
0.8381118774414062, 0.8409656433625134
eval metrics, batch: 5120 acc, f1
0.813812255859375, 0.8059416648112218
eval metrics, batch: 6144 acc, f1
0.81396484375, 0.8053639846743295
eval metrics, batch: 7168 acc, f1
0.81500244140625, 0.8071637612927853
Epoch loss - train: tensor(0.3686, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4017, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.815521240234375, 0.8087327954437589
train metrics acc, f1 
0.8403968811035156, 0.8414450672093438
Epoch 4/10
----------
eval metrics, batch: 1024 acc, f1
0.808013916015625, 0.7913502039733342
eval metrics, batch: 2048 acc, f1
0.81298828125, 0.8028694589204143
eval metrics, batch: 3072 acc, f1
0.81719970703125, 0.808381317978247
eval metrics, batch: 4096 acc, f1
0.815277099609375, 0.8056135392915637
train metrics, batch: 4096  acc, f1 
0.8419990539550781, 0.8405422157544399
eval metrics, batch: 5120 acc, f1
0.814117431640625, 0.8035984909554058
eval metrics, batch: 6144 acc, f1
0.817047119140625, 0.8102788062913383
eval metrics, batch: 7168 acc, f1
0.818603515625, 0.8126930106510367
Epoch loss - train: tensor(0.3639, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.3994, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.815948486328125, 0.8072239092216718
train metrics acc, f1 
0.8430824279785156, 0.842484558623621
Epoch 5/10
----------
eval metrics, batch: 1024 acc, f1
0.81573486328125, 0.8084755439954323
eval metrics, batch: 2048 acc, f1
0.8154296875, 0.8099428068631764
eval metrics, batch: 3072 acc, f1
0.812225341796875, 0.7998308337942028
eval metrics, batch: 4096 acc, f1
0.80975341796875, 0.7950286052475833
train metrics, batch: 4096  acc, f1 
0.8424301147460938, 0.8380194975804491
eval metrics, batch: 5120 acc, f1
0.813568115234375, 0.8018552755343648
eval metrics, batch: 6144 acc, f1
0.816802978515625, 0.81190662697791
eval metrics, batch: 7168 acc, f1
0.812591552734375, 0.8001822145576416
Epoch loss - train: tensor(0.3613, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4010, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.81451416015625, 0.8066055746468117
train metrics acc, f1 
0.8441123962402344, 0.8445577131554423
Epoch 6/10
----------
eval metrics, batch: 1024 acc, f1
0.81304931640625, 0.803376556682501
eval metrics, batch: 2048 acc, f1
0.815216064453125, 0.8076617642387471
eval metrics, batch: 3072 acc, f1
0.815032958984375, 0.8060914355184439
eval metrics, batch: 4096 acc, f1
0.815521240234375, 0.8086843687691869
train metrics, batch: 4096  acc, f1 
0.8438911437988281, 0.8451159463622704
eval metrics, batch: 5120 acc, f1
0.815460205078125, 0.8079158857723706
eval metrics, batch: 6144 acc, f1
0.81402587890625, 0.8053159542521244
eval metrics, batch: 7168 acc, f1
0.815887451171875, 0.8075168299141754
Epoch loss - train: tensor(0.3601, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.3978, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.815765380859375, 0.8055779201958069
train metrics acc, f1 
0.8444366455078125, 0.8428988589171655
Epoch 7/10
----------
eval metrics, batch: 1024 acc, f1
0.814422607421875, 0.8009166803077427
eval metrics, batch: 2048 acc, f1
0.81524658203125, 0.8064949178546315
eval metrics, batch: 3072 acc, f1
0.812286376953125, 0.7996221129100564
eval metrics, batch: 4096 acc, f1
0.8140869140625, 0.8025539638296493
train metrics, batch: 4096  acc, f1 
0.8446922302246094, 0.8424523154436434
eval metrics, batch: 5120 acc, f1
0.818267822265625, 0.8115565963102433
eval metrics, batch: 6144 acc, f1
0.814849853515625, 0.804005814892586
eval metrics, batch: 7168 acc, f1
0.8155517578125, 0.8064185510217154
Epoch loss - train: tensor(0.3582, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4008, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.81524658203125, 0.8055127216653817
train metrics acc, f1 
0.8454780578613281, 0.8446048850850305
Epoch 8/10
----------
eval metrics, batch: 1024 acc, f1
0.813262939453125, 0.7987237261932173
eval metrics, batch: 2048 acc, f1
0.81658935546875, 0.8067399832786675
eval metrics, batch: 3072 acc, f1
0.8177490234375, 0.8106531388712745
eval metrics, batch: 4096 acc, f1
0.816741943359375, 0.8083857174766266
train metrics, batch: 4096  acc, f1 
0.8465309143066406, 0.8463627094177356
eval metrics, batch: 5120 acc, f1
0.8172607421875, 0.8092629164808562
eval metrics, batch: 6144 acc, f1
0.814361572265625, 0.805100765755663
eval metrics, batch: 7168 acc, f1
0.815582275390625, 0.8069760756380362
Epoch loss - train: tensor(0.3556, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.3985, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.816619873046875, 0.8067037668478786
train metrics acc, f1 
0.8472862243652344, 0.8463407425603863
Epoch 9/10
----------
eval metrics, batch: 1024 acc, f1
0.813629150390625, 0.8029682206807549
eval metrics, batch: 2048 acc, f1
0.8167724609375, 0.8081053439018154
eval metrics, batch: 3072 acc, f1
0.816162109375, 0.8081039755351682
eval metrics, batch: 4096 acc, f1
0.816680908203125, 0.8075111353222033
train metrics, batch: 4096  acc, f1 
0.8468132019042969, 0.8462742846205379
eval metrics, batch: 5120 acc, f1
0.816314697265625, 0.809736051841315
eval metrics, batch: 6144 acc, f1
0.816314697265625, 0.8069038529402329
eval metrics, batch: 7168 acc, f1
0.816162109375, 0.8086282483004003
Epoch loss - train: tensor(0.3546, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.3995, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.814697265625, 0.8036476523088864
train metrics acc, f1 
0.8471755981445312, 0.8454159592529711
Epoch 10/10
----------
eval metrics, batch: 1024 acc, f1
0.80950927734375, 0.795008210180624
eval metrics, batch: 2048 acc, f1
0.81414794921875, 0.8027083063366593
eval metrics, batch: 3072 acc, f1
0.812286376953125, 0.7984534224581409
eval metrics, batch: 4096 acc, f1
0.8182373046875, 0.8122675408182564
train metrics, batch: 4096  acc, f1 
0.8461685180664062, 0.8484657182152279
eval metrics, batch: 5120 acc, f1
0.814361572265625, 0.8030818037616134
eval metrics, batch: 6144 acc, f1
0.81634521484375, 0.8068801745715936
eval metrics, batch: 7168 acc, f1
0.81524658203125, 0.8055127216653817
Epoch loss - train: tensor(0.3553, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4098, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.809722900390625, 0.794840577802639
train metrics acc, f1 
0.8462600708007812, 0.8422647003569416
Training time 167m 51s
train_acc
0.4116363525390625	0.8226280212402344	0.8301048278808594	0.8351593017578125	0.8380584716796875	0.8381118774414062	0.8403968811035156	0.8419990539550781	0.8430824279785156	0.8424301147460938	0.8441123962402344	0.8438911437988281	0.8444366455078125	0.8446922302246094	0.8454780578613281	0.8465309143066406	0.8472862243652344	0.8468132019042969	0.8471755981445312	0.8461685180664062	0.8462600708007812
train_f1
0.24530997700249546	0.8178509728952595	0.8253718058806693	0.8341126338822987	0.8379991451947735	0.8409656433625134	0.8414450672093438	0.8405422157544399	0.842484558623621	0.8380194975804491	0.8445577131554423	0.8451159463622704	0.8428988589171655	0.8424523154436434	0.8446048850850305	0.8463627094177356	0.8463407425603863	0.8462742846205379	0.8454159592529711	0.8484657182152279	0.8422647003569416
train_loss
tensor(0.4198, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.3772, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.3686, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.3639, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.3613, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.3601, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.3582, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.3556, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.3546, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.3553, device='cuda:0', grad_fn=<DivBackward0>)
valid_acc
0.37939453125	0.7760009765625	0.791961669921875	0.80078125	0.801605224609375	0.80255126953125	0.80426025390625	0.806549072265625	0.80535888671875	0.8076171875	0.8101806640625	0.811370849609375	0.810943603515625	0.8121337890625	0.810272216796875	0.810699462890625	0.81243896484375	0.81036376953125	0.81463623046875	0.81488037109375	0.814605712890625	0.813812255859375	0.81396484375	0.81500244140625	0.815521240234375	0.808013916015625	0.81298828125	0.81719970703125	0.815277099609375	0.814117431640625	0.817047119140625	0.818603515625	0.815948486328125	0.81573486328125	0.8154296875	0.812225341796875	0.80975341796875	0.813568115234375	0.816802978515625	0.812591552734375	0.81451416015625	0.81304931640625	0.815216064453125	0.815032958984375	0.815521240234375	0.815460205078125	0.81402587890625	0.815887451171875	0.815765380859375	0.814422607421875	0.81524658203125	0.812286376953125	0.8140869140625	0.818267822265625	0.814849853515625	0.8155517578125	0.81524658203125	0.813262939453125	0.81658935546875	0.8177490234375	0.816741943359375	0.8172607421875	0.814361572265625	0.815582275390625	0.816619873046875	0.813629150390625	0.8167724609375	0.816162109375	0.816680908203125	0.816314697265625	0.816314697265625	0.816162109375	0.814697265625	0.80950927734375	0.81414794921875	0.812286376953125	0.8182373046875	0.814361572265625	0.81634521484375	0.81524658203125	0.809722900390625
valid_f1
0.19633259563705344	0.7585049680858064	0.7776074119988255	0.7901504436157901	0.7885922409027348	0.7958604152205465	0.7917126712996038	0.79687249655526	0.7916775542200157	0.7995803395434603	0.8029775102945834	0.8043677797119797	0.8019944385847158	0.8070582335610856	0.8015196500973726	0.8014976479247335	0.8044170061099797	0.7993671703474106	0.8072969543147208	0.8080622705986584	0.8104346740724561	0.8059416648112218	0.8053639846743295	0.8071637612927853	0.8087327954437589	0.7913502039733342	0.8028694589204143	0.808381317978247	0.8056135392915637	0.8035984909554058	0.8102788062913383	0.8126930106510367	0.8072239092216718	0.8084755439954323	0.8099428068631764	0.7998308337942028	0.7950286052475833	0.8018552755343648	0.81190662697791	0.8001822145576416	0.8066055746468117	0.803376556682501	0.8076617642387471	0.8060914355184439	0.8086843687691869	0.8079158857723706	0.8053159542521244	0.8075168299141754	0.8055779201958069	0.8009166803077427	0.8064949178546315	0.7996221129100564	0.8025539638296493	0.8115565963102433	0.804005814892586	0.8064185510217154	0.8055127216653817	0.7987237261932173	0.8067399832786675	0.8106531388712745	0.8083857174766266	0.8092629164808562	0.805100765755663	0.8069760756380362	0.8067037668478786	0.8029682206807549	0.8081053439018154	0.8081039755351682	0.8075111353222033	0.809736051841315	0.8069038529402329	0.8086282483004003	0.8036476523088864	0.795008210180624	0.8027083063366593	0.7984534224581409	0.8122675408182564	0.8030818037616134	0.8068801745715936	0.8055127216653817	0.794840577802639
valid_loss
tensor(0.4143, device='cuda:0')	tensor(0.4032, device='cuda:0')	tensor(0.4017, device='cuda:0')	tensor(0.3994, device='cuda:0')	tensor(0.4010, device='cuda:0')	tensor(0.3978, device='cuda:0')	tensor(0.4008, device='cuda:0')	tensor(0.3985, device='cuda:0')	tensor(0.3995, device='cuda:0')	tensor(0.4098, device='cuda:0')
Best model metrics: train, valid, test: acc, f1
0.8403968811035156, 0.8414450672093438
0.815521240234375, 0.8087327954437589
0.798797607421875, 0.7905986977925996
Model saved, path ./models/densenet_6-1558897741.pth
experiment validation
train set
Evaluation results
[[109286.  21786.]
 [ 20053. 111019.]]
#############################
Accuracy
0.8403968811035156
------------------------
Recall
0.8470077514648438
------------------------
Specificity
0.8337860107421875
------------------------
Precision
0.8359549715748654
------------------------
Fall_out
0.1662139892578125
------------------------
F1
0.8414450672093438
------------------------
#############################
valid set
Evaluation results
[[13943.  2456.]
 [ 3589. 12780.]]
#############################
Accuracy
0.815521240234375
------------------------
Recall
0.7807440894373511
------------------------
Specificity
0.85023477041283
------------------------
Precision
0.8388028353898661
------------------------
Fall_out
0.14976522958716995
------------------------
F1
0.8087327954437589
------------------------
#############################
test set
Evaluation results
[[13729.  2662.]
 [ 3931. 12446.]]
#############################
Accuracy
0.798797607421875
------------------------
Recall
0.7599682481528973
------------------------
Specificity
0.83759380147642
------------------------
Precision
0.8238019592268997
------------------------
Fall_out
0.16240619852358001
------------------------
F1
0.7905986977925996
------------------------
#############################
AUC: 0.8817959081679565
Experiment end
########################################
----------------------------------------
