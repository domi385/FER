----------------------------------------
Starting experiment densenet_5-1558897740
Experiment parameters Experiment[name: densenet_5-1558897740, model: DenseNet(
  (features): Sequential(
    (conv0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (norm0): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu0): ReLU(inplace)
    (pool0): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (denseblock1): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(96, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (transition1): _Transition(
      (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock2): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer7): _DenseLayer(
        (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer8): _DenseLayer(
        (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer9): _DenseLayer(
        (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer10): _DenseLayer(
        (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer11): _DenseLayer(
        (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer12): _DenseLayer(
        (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (transition2): _Transition(
      (norm): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock3): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer7): _DenseLayer(
        (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer8): _DenseLayer(
        (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer9): _DenseLayer(
        (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer10): _DenseLayer(
        (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer11): _DenseLayer(
        (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer12): _DenseLayer(
        (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer13): _DenseLayer(
        (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer14): _DenseLayer(
        (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer15): _DenseLayer(
        (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer16): _DenseLayer(
        (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer17): _DenseLayer(
        (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer18): _DenseLayer(
        (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer19): _DenseLayer(
        (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer20): _DenseLayer(
        (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer21): _DenseLayer(
        (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer22): _DenseLayer(
        (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer23): _DenseLayer(
        (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer24): _DenseLayer(
        (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (transition3): _Transition(
      (norm): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock4): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer7): _DenseLayer(
        (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer8): _DenseLayer(
        (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer9): _DenseLayer(
        (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer10): _DenseLayer(
        (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer11): _DenseLayer(
        (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer12): _DenseLayer(
        (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer13): _DenseLayer(
        (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer14): _DenseLayer(
        (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer15): _DenseLayer(
        (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer16): _DenseLayer(
        (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (norm5): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (classifier): Linear(in_features=1024, out_features=1, bias=True)
), params: Params(lr: 0.001, weight_decay: 0, batch_size: 32, num_epochs: 10), optimizer: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.001
    weight_decay: 0
), criterion: BCEWithLogitsLoss()]
start metrics
eval metrics acc, f1
0.329071044921875, 0.19400960516185797
train metrics acc, f1
0.3762702941894531, 0.26889937177222833
Epoch 1/10
----------
eval metrics, batch: 1024 acc, f1
0.807830810546875, 0.8016755377783377
eval metrics, batch: 2048 acc, f1
0.813629150390625, 0.8049193419581536
eval metrics, batch: 3072 acc, f1
0.809326171875, 0.8063356270534995
eval metrics, batch: 4096 acc, f1
0.804901123046875, 0.7906336990338956
train metrics, batch: 4096  acc, f1 
0.8394699096679688, 0.8361879700418853
eval metrics, batch: 5120 acc, f1
0.81463623046875, 0.8107080528546498
eval metrics, batch: 6144 acc, f1
0.812530517578125, 0.8044813647792737
eval metrics, batch: 7168 acc, f1
0.822906494140625, 0.8184576880963554
Epoch loss - train: tensor(0.3794, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4062, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.807373046875, 0.7902432540210023
train metrics acc, f1 
0.8430557250976562, 0.8374669142337929
Epoch 2/10
----------
eval metrics, batch: 1024 acc, f1
0.814727783203125, 0.8092859611095404
eval metrics, batch: 2048 acc, f1
0.808746337890625, 0.7928606841844323
eval metrics, batch: 3072 acc, f1
0.797088623046875, 0.7721150221064537
eval metrics, batch: 4096 acc, f1
0.811065673828125, 0.7981085928583075
train metrics, batch: 4096  acc, f1 
0.8455085754394531, 0.8425125506986004
eval metrics, batch: 5120 acc, f1
0.802764892578125, 0.7803120432373636
eval metrics, batch: 6144 acc, f1
0.80828857421875, 0.7959196933272692
eval metrics, batch: 7168 acc, f1
0.813720703125, 0.8045969652346501
Epoch loss - train: tensor(0.3617, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4058, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.8123779296875, 0.7989667124452292
train metrics acc, f1 
0.8477973937988281, 0.8450807037162149
Epoch 3/10
----------
eval metrics, batch: 1024 acc, f1
0.8087158203125, 0.7898759637948374
eval metrics, batch: 2048 acc, f1
0.8134765625, 0.812676229005762
eval metrics, batch: 3072 acc, f1
0.81634521484375, 0.8113952613764573
eval metrics, batch: 4096 acc, f1
0.795684814453125, 0.7674135834636095
train metrics, batch: 4096  acc, f1 
0.8385581970214844, 0.826030657672434
eval metrics, batch: 5120 acc, f1
0.8155517578125, 0.8107820424519442
eval metrics, batch: 6144 acc, f1
0.810638427734375, 0.7984800753466922
eval metrics, batch: 7168 acc, f1
0.807281494140625, 0.7865183732801461
Epoch loss - train: tensor(0.3558, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4101, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.810821533203125, 0.8095135666656423
train metrics acc, f1 
0.8450431823730469, 0.8513091573294874
Epoch 4/10
----------
eval metrics, batch: 1024 acc, f1
0.8131103515625, 0.8065575841809337
eval metrics, batch: 2048 acc, f1
0.801055908203125, 0.7760640307787434
eval metrics, batch: 3072 acc, f1
0.8115234375, 0.7989583333333333
eval metrics, batch: 4096 acc, f1
0.81109619140625, 0.7962877641018891
train metrics, batch: 4096  acc, f1 
0.8496208190917969, 0.8461961631949186
eval metrics, batch: 5120 acc, f1
0.810150146484375, 0.8037725136422421
eval metrics, batch: 6144 acc, f1
0.81475830078125, 0.8040291857687092
eval metrics, batch: 7168 acc, f1
0.816314697265625, 0.8076566644297447
Epoch loss - train: tensor(0.3526, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.3988, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.81658935546875, 0.811822906882084
train metrics acc, f1 
0.8497848510742188, 0.8529068985611188
Epoch 5/10
----------
eval metrics, batch: 1024 acc, f1
0.81317138671875, 0.7990282975510472
eval metrics, batch: 2048 acc, f1
0.803863525390625, 0.7823495546750652
eval metrics, batch: 3072 acc, f1
0.80230712890625, 0.7797048221451405
eval metrics, batch: 4096 acc, f1
0.810028076171875, 0.7986805083923547
train metrics, batch: 4096  acc, f1 
0.8511161804199219, 0.8504229119798873
eval metrics, batch: 5120 acc, f1
0.813629150390625, 0.8098514805243329
eval metrics, batch: 6144 acc, f1
0.81341552734375, 0.8034336419753086
eval metrics, batch: 7168 acc, f1
0.81072998046875, 0.794254246284501
Epoch loss - train: tensor(0.3513, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4146, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.8070068359375, 0.7902487562189054
train metrics acc, f1 
0.8506507873535156, 0.8465803776808561
Epoch 6/10
----------
eval metrics, batch: 1024 acc, f1
0.80889892578125, 0.7918356492254505
eval metrics, batch: 2048 acc, f1
0.815521240234375, 0.805620759509952
eval metrics, batch: 3072 acc, f1
0.816009521484375, 0.804880416841969
eval metrics, batch: 4096 acc, f1
0.8134765625, 0.8033588572163953
train metrics, batch: 4096  acc, f1 
0.8532142639160156, 0.8533323168988585
eval metrics, batch: 5120 acc, f1
0.80499267578125, 0.782889372111987
eval metrics, batch: 6144 acc, f1
0.814453125, 0.8051906440243511
eval metrics, batch: 7168 acc, f1
0.816802978515625, 0.8061985472154963
Epoch loss - train: tensor(0.3486, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4094, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.8126220703125, 0.804196696217871
train metrics acc, f1 
0.8526153564453125, 0.8539237481662961
Epoch 7/10
----------
eval metrics, batch: 1024 acc, f1
0.81256103515625, 0.8019859436456251
eval metrics, batch: 2048 acc, f1
0.81744384765625, 0.8082569395474068
eval metrics, batch: 3072 acc, f1
0.817169189453125, 0.8109557918651983
eval metrics, batch: 4096 acc, f1
0.81817626953125, 0.8130412953432911
train metrics, batch: 4096  acc, f1 
0.852294921875, 0.8551201843924926
eval metrics, batch: 5120 acc, f1
0.817535400390625, 0.8117739650558791
eval metrics, batch: 6144 acc, f1
0.81396484375, 0.8061685214626391
eval metrics, batch: 7168 acc, f1
0.811065673828125, 0.7990000324664783
Epoch loss - train: tensor(0.3474, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4173, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.8084716796875, 0.8099794114085018
train metrics acc, f1 
0.844085693359375, 0.8525881470367592
Epoch 8/10
----------
eval metrics, batch: 1024 acc, f1
0.81622314453125, 0.8065904419321686
eval metrics, batch: 2048 acc, f1
0.815032958984375, 0.8051438675454107
eval metrics, batch: 3072 acc, f1
0.82012939453125, 0.8147472969575057
eval metrics, batch: 4096 acc, f1
0.817230224609375, 0.809903189969846
train metrics, batch: 4096  acc, f1 
0.8529891967773438, 0.8545560218592434
eval metrics, batch: 5120 acc, f1
0.800567626953125, 0.7795432311169584
eval metrics, batch: 6144 acc, f1
0.8026123046875, 0.7794749403341289
eval metrics, batch: 7168 acc, f1
0.81707763671875, 0.8086817746568784
Epoch loss - train: tensor(0.3463, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4078, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.8118896484375, 0.7998961173873523
train metrics acc, f1 
0.8547286987304688, 0.8538937869754379
Epoch 9/10
----------
eval metrics, batch: 1024 acc, f1
0.81024169921875, 0.7949478960559293
eval metrics, batch: 2048 acc, f1
0.81494140625, 0.8053040518846721
eval metrics, batch: 3072 acc, f1
0.803497314453125, 0.7829282270842464
eval metrics, batch: 4096 acc, f1
0.811767578125, 0.8028511155149268
train metrics, batch: 4096  acc, f1 
0.8541450500488281, 0.8556347201612995
eval metrics, batch: 5120 acc, f1
0.8114013671875, 0.8001810657009829
eval metrics, batch: 6144 acc, f1
0.807952880859375, 0.7902962444599954
eval metrics, batch: 7168 acc, f1
0.811279296875, 0.8042170581903375
Epoch loss - train: tensor(0.3446, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4086, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.811614990234375, 0.7985247560298966
train metrics acc, f1 
0.8564300537109375, 0.8548576188566316
Epoch 10/10
----------
eval metrics, batch: 1024 acc, f1
0.808624267578125, 0.7898669704788392
eval metrics, batch: 2048 acc, f1
0.811614990234375, 0.7964922691458148
eval metrics, batch: 3072 acc, f1
0.80804443359375, 0.7927239174850063
eval metrics, batch: 4096 acc, f1
0.8089599609375, 0.7944440795954555
train metrics, batch: 4096  acc, f1 
0.8551177978515625, 0.8533262274949602
eval metrics, batch: 5120 acc, f1
0.810028076171875, 0.7945205479452054
eval metrics, batch: 6144 acc, f1
0.806427001953125, 0.8080031479855919
eval metrics, batch: 7168 acc, f1
0.808685302734375, 0.7909427418548037
Epoch loss - train: tensor(0.3430, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4089, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.8126220703125, 0.80352
train metrics acc, f1 
0.8558235168457031, 0.8568170539052822
Training time 169m 33s
train_acc
0.3762702941894531	0.8394699096679688	0.8430557250976562	0.8455085754394531	0.8477973937988281	0.8385581970214844	0.8450431823730469	0.8496208190917969	0.8497848510742188	0.8511161804199219	0.8506507873535156	0.8532142639160156	0.8526153564453125	0.852294921875	0.844085693359375	0.8529891967773438	0.8547286987304688	0.8541450500488281	0.8564300537109375	0.8551177978515625	0.8558235168457031
train_f1
0.26889937177222833	0.8361879700418853	0.8374669142337929	0.8425125506986004	0.8450807037162149	0.826030657672434	0.8513091573294874	0.8461961631949186	0.8529068985611188	0.8504229119798873	0.8465803776808561	0.8533323168988585	0.8539237481662961	0.8551201843924926	0.8525881470367592	0.8545560218592434	0.8538937869754379	0.8556347201612995	0.8548576188566316	0.8533262274949602	0.8568170539052822
train_loss
tensor(0.3794, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.3617, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.3558, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.3526, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.3513, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.3486, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.3474, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.3463, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.3446, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.3430, device='cuda:0', grad_fn=<DivBackward0>)
valid_acc
0.329071044921875	0.807830810546875	0.813629150390625	0.809326171875	0.804901123046875	0.81463623046875	0.812530517578125	0.822906494140625	0.807373046875	0.814727783203125	0.808746337890625	0.797088623046875	0.811065673828125	0.802764892578125	0.80828857421875	0.813720703125	0.8123779296875	0.8087158203125	0.8134765625	0.81634521484375	0.795684814453125	0.8155517578125	0.810638427734375	0.807281494140625	0.810821533203125	0.8131103515625	0.801055908203125	0.8115234375	0.81109619140625	0.810150146484375	0.81475830078125	0.816314697265625	0.81658935546875	0.81317138671875	0.803863525390625	0.80230712890625	0.810028076171875	0.813629150390625	0.81341552734375	0.81072998046875	0.8070068359375	0.80889892578125	0.815521240234375	0.816009521484375	0.8134765625	0.80499267578125	0.814453125	0.816802978515625	0.8126220703125	0.81256103515625	0.81744384765625	0.817169189453125	0.81817626953125	0.817535400390625	0.81396484375	0.811065673828125	0.8084716796875	0.81622314453125	0.815032958984375	0.82012939453125	0.817230224609375	0.800567626953125	0.8026123046875	0.81707763671875	0.8118896484375	0.81024169921875	0.81494140625	0.803497314453125	0.811767578125	0.8114013671875	0.807952880859375	0.811279296875	0.811614990234375	0.808624267578125	0.811614990234375	0.80804443359375	0.8089599609375	0.810028076171875	0.806427001953125	0.808685302734375	0.8126220703125
valid_f1
0.19400960516185797	0.8016755377783377	0.8049193419581536	0.8063356270534995	0.7906336990338956	0.8107080528546498	0.8044813647792737	0.8184576880963554	0.7902432540210023	0.8092859611095404	0.7928606841844323	0.7721150221064537	0.7981085928583075	0.7803120432373636	0.7959196933272692	0.8045969652346501	0.7989667124452292	0.7898759637948374	0.812676229005762	0.8113952613764573	0.7674135834636095	0.8107820424519442	0.7984800753466922	0.7865183732801461	0.8095135666656423	0.8065575841809337	0.7760640307787434	0.7989583333333333	0.7962877641018891	0.8037725136422421	0.8040291857687092	0.8076566644297447	0.811822906882084	0.7990282975510472	0.7823495546750652	0.7797048221451405	0.7986805083923547	0.8098514805243329	0.8034336419753086	0.794254246284501	0.7902487562189054	0.7918356492254505	0.805620759509952	0.804880416841969	0.8033588572163953	0.782889372111987	0.8051906440243511	0.8061985472154963	0.804196696217871	0.8019859436456251	0.8082569395474068	0.8109557918651983	0.8130412953432911	0.8117739650558791	0.8061685214626391	0.7990000324664783	0.8099794114085018	0.8065904419321686	0.8051438675454107	0.8147472969575057	0.809903189969846	0.7795432311169584	0.7794749403341289	0.8086817746568784	0.7998961173873523	0.7949478960559293	0.8053040518846721	0.7829282270842464	0.8028511155149268	0.8001810657009829	0.7902962444599954	0.8042170581903375	0.7985247560298966	0.7898669704788392	0.7964922691458148	0.7927239174850063	0.7944440795954555	0.7945205479452054	0.8080031479855919	0.7909427418548037	0.80352
valid_loss
tensor(0.4062, device='cuda:0')	tensor(0.4058, device='cuda:0')	tensor(0.4101, device='cuda:0')	tensor(0.3988, device='cuda:0')	tensor(0.4146, device='cuda:0')	tensor(0.4094, device='cuda:0')	tensor(0.4173, device='cuda:0')	tensor(0.4078, device='cuda:0')	tensor(0.4086, device='cuda:0')	tensor(0.4089, device='cuda:0')
Best model metrics: train, valid, test: acc, f1
0.8497848510742188, 0.8529068985611188
0.81658935546875, 0.811822906882084
0.806549072265625, 0.8009420631182289
Model saved, path ./models/densenet_5-1558897740.pth
experiment validation
train set
Evaluation results
[[108601.  22471.]
 [ 16907. 114165.]]
#############################
Accuracy
0.8497848510742188
------------------------
Recall
0.8710098266601562
------------------------
Specificity
0.8285598754882812
------------------------
Precision
0.835541145818086
------------------------
Fall_out
0.17144012451171875
------------------------
F1
0.8529068985611188
------------------------
#############################
valid set
Evaluation results
[[13794.  2605.]
 [ 3405. 12964.]]
#############################
Accuracy
0.81658935546875
------------------------
Recall
0.791984849410471
------------------------
Specificity
0.841148850539667
------------------------
Precision
0.8326803262894212
------------------------
Fall_out
0.15885114946033294
------------------------
F1
0.811822906882084
------------------------
#############################
test set
Evaluation results
[[13676.  2715.]
 [ 3624. 12753.]]
#############################
Accuracy
0.806549072265625
------------------------
Recall
0.778714050192343
------------------------
Specificity
0.8343603196876335
------------------------
Precision
0.8244763382467029
------------------------
Fall_out
0.16563968031236653
------------------------
F1
0.8009420631182289
------------------------
#############################
AUC: 0.8873669392652066
Experiment end
########################################
