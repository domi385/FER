----------------------------------------
Starting experiment densenet_1-1558897740
Experiment parameters Experiment[name: densenet_1-1558897740, model: DenseNet(
  (features): Sequential(
    (conv0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (norm0): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu0): ReLU(inplace)
    (pool0): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (denseblock1): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(96, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (transition1): _Transition(
      (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock2): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer7): _DenseLayer(
        (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer8): _DenseLayer(
        (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer9): _DenseLayer(
        (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer10): _DenseLayer(
        (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer11): _DenseLayer(
        (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer12): _DenseLayer(
        (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (transition2): _Transition(
      (norm): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock3): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer7): _DenseLayer(
        (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer8): _DenseLayer(
        (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer9): _DenseLayer(
        (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer10): _DenseLayer(
        (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer11): _DenseLayer(
        (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer12): _DenseLayer(
        (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer13): _DenseLayer(
        (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer14): _DenseLayer(
        (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer15): _DenseLayer(
        (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer16): _DenseLayer(
        (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer17): _DenseLayer(
        (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer18): _DenseLayer(
        (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer19): _DenseLayer(
        (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer20): _DenseLayer(
        (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer21): _DenseLayer(
        (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer22): _DenseLayer(
        (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer23): _DenseLayer(
        (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer24): _DenseLayer(
        (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (transition3): _Transition(
      (norm): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock4): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer7): _DenseLayer(
        (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer8): _DenseLayer(
        (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer9): _DenseLayer(
        (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer10): _DenseLayer(
        (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer11): _DenseLayer(
        (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer12): _DenseLayer(
        (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer13): _DenseLayer(
        (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer14): _DenseLayer(
        (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer15): _DenseLayer(
        (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer16): _DenseLayer(
        (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (norm5): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (classifier): Linear(in_features=1024, out_features=1, bias=True)
), params: Params(lr: 1e-05, weight_decay: 0, batch_size: 32, num_epochs: 10), optimizer: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 1e-05
    weight_decay: 0
), criterion: BCEWithLogitsLoss()]
start metrics
eval metrics acc, f1
0.541595458984375, 0.6343031040779062
train metrics acc, f1
0.5077323913574219, 0.6009481135138646
Epoch 1/10
----------
eval metrics, batch: 1024 acc, f1
0.828155517578125, 0.8063151377566815
eval metrics, batch: 2048 acc, f1
0.86712646484375, 0.8573674900085173
eval metrics, batch: 3072 acc, f1
0.860504150390625, 0.8500672417751829
eval metrics, batch: 4096 acc, f1
0.871826171875, 0.8609547771965834
train metrics, batch: 4096  acc, f1 
0.9488372802734375, 0.9484657296333582
eval metrics, batch: 5120 acc, f1
0.876129150390625, 0.8644424406372107
eval metrics, batch: 6144 acc, f1
0.855560302734375, 0.8384586504658862
eval metrics, batch: 7168 acc, f1
0.88165283203125, 0.8723334211219383
Epoch loss - train: tensor(0.1923, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.3392, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.87591552734375, 0.8668979965955218
train metrics acc, f1 
0.9602203369140625, 0.9604319549528355
Epoch 2/10
----------
eval metrics, batch: 1024 acc, f1
0.85552978515625, 0.8380320240864924
eval metrics, batch: 2048 acc, f1
0.83685302734375, 0.8100213219616205
eval metrics, batch: 3072 acc, f1
0.87921142578125, 0.8711923978130696
eval metrics, batch: 4096 acc, f1
0.87213134765625, 0.8591975267155051
train metrics, batch: 4096  acc, f1 
0.9652938842773438, 0.9649769798130668
eval metrics, batch: 5120 acc, f1
0.872100830078125, 0.8583978105889111
eval metrics, batch: 6144 acc, f1
0.871490478515625, 0.8590554607222948
eval metrics, batch: 7168 acc, f1
0.8612060546875, 0.8448417030567685
Epoch loss - train: tensor(0.1217, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.3947, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.85986328125, 0.843586075345732
train metrics acc, f1 
0.9723167419433594, 0.97230881943305
Epoch 3/10
----------
eval metrics, batch: 1024 acc, f1
0.862457275390625, 0.8468413361878547
eval metrics, batch: 2048 acc, f1
0.898773193359375, 0.8951477793583057
eval metrics, batch: 3072 acc, f1
0.844085693359375, 0.8221905126509589
eval metrics, batch: 4096 acc, f1
0.883270263671875, 0.8753543845928243
train metrics, batch: 4096  acc, f1 
0.9711265563964844, 0.9713361685368154
eval metrics, batch: 5120 acc, f1
0.873016357421875, 0.8604393761529432
eval metrics, batch: 6144 acc, f1
0.83740234375, 0.8101752885848653
eval metrics, batch: 7168 acc, f1
0.83245849609375, 0.8046541417591802
Epoch loss - train: tensor(0.0939, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.3494, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.87957763671875, 0.8716497527972937
train metrics acc, f1 
0.9714622497558594, 0.9718071535437967
Epoch 4/10
----------
eval metrics, batch: 1024 acc, f1
0.8609619140625, 0.8435761862253657
eval metrics, batch: 2048 acc, f1
0.88543701171875, 0.8785506308637981
eval metrics, batch: 3072 acc, f1
0.884521484375, 0.8761699064074874
eval metrics, batch: 4096 acc, f1
0.899444580078125, 0.8934863423306934
train metrics, batch: 4096  acc, f1 
0.9800949096679688, 0.9801714572344921
eval metrics, batch: 5120 acc, f1
0.855255126953125, 0.8349514563106796
eval metrics, batch: 6144 acc, f1
0.881256103515625, 0.8708124439722434
eval metrics, batch: 7168 acc, f1
0.818206787109375, 0.7805812368779698
Epoch loss - train: tensor(0.0750, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.3745, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.88702392578125, 0.8771976381609501
train metrics acc, f1 
0.9848251342773438, 0.9848107645783059
Epoch 5/10
----------
eval metrics, batch: 1024 acc, f1
0.86260986328125, 0.8453771122406925
eval metrics, batch: 2048 acc, f1
0.866119384765625, 0.8499401402428596
eval metrics, batch: 3072 acc, f1
0.846282958984375, 0.8235788588841021
eval metrics, batch: 4096 acc, f1
0.870941162109375, 0.8578248445116826
train metrics, batch: 4096  acc, f1 
0.9831352233886719, 0.9831354163885149
eval metrics, batch: 5120 acc, f1
0.832183837890625, 0.8025989876871163
eval metrics, batch: 6144 acc, f1
0.861907958984375, 0.844688518963446
eval metrics, batch: 7168 acc, f1
0.8310546875, 0.8018327605956472
Epoch loss - train: tensor(0.0592, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.3923, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.87554931640625, 0.8629059369326968
train metrics acc, f1 
0.9893569946289062, 0.9893496816356446
Epoch 6/10
----------
eval metrics, batch: 1024 acc, f1
0.876953125, 0.8643611653098298
eval metrics, batch: 2048 acc, f1
0.86309814453125, 0.8462961693962859
eval metrics, batch: 3072 acc, f1
0.87261962890625, 0.8591767881241565
eval metrics, batch: 4096 acc, f1
0.880462646484375, 0.8701475219625394
train metrics, batch: 4096  acc, f1 
0.9873008728027344, 0.9873433121818244
eval metrics, batch: 5120 acc, f1
0.88677978515625, 0.8829061987122838
eval metrics, batch: 6144 acc, f1
0.883056640625, 0.8727671160103593
eval metrics, batch: 7168 acc, f1
0.8095703125, 0.7690428603153453
Epoch loss - train: tensor(0.0476, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.3920, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.889312744140625, 0.8839471410744568
train metrics acc, f1 
0.9820480346679688, 0.9822988211752138
Epoch 7/10
----------
eval metrics, batch: 1024 acc, f1
0.868438720703125, 0.8535118420605525
eval metrics, batch: 2048 acc, f1
0.85125732421875, 0.833810692853246
eval metrics, batch: 3072 acc, f1
0.869720458984375, 0.8558792748387968
eval metrics, batch: 4096 acc, f1
0.850555419921875, 0.8283741632495707
train metrics, batch: 4096  acc, f1 
0.9934654235839844, 0.9934435390344817
eval metrics, batch: 5120 acc, f1
0.8668212890625, 0.8517159361196058
eval metrics, batch: 6144 acc, f1
0.81646728515625, 0.7790108032630264
eval metrics, batch: 7168 acc, f1
0.847015380859375, 0.824812161453783
Epoch loss - train: tensor(0.0389, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.5696, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.86566162109375, 0.8495351380913317
train metrics acc, f1 
0.9946746826171875, 0.9946656069209547
Epoch 8/10
----------
eval metrics, batch: 1024 acc, f1
0.85028076171875, 0.8285454672537919
eval metrics, batch: 2048 acc, f1
0.85858154296875, 0.8402509652509652
eval metrics, batch: 3072 acc, f1
0.878662109375, 0.8671034160037435
eval metrics, batch: 4096 acc, f1
0.85333251953125, 0.8321810182275299
train metrics, batch: 4096  acc, f1 
0.9925003051757812, 0.9924635058881256
eval metrics, batch: 5120 acc, f1
0.891510009765625, 0.8838880360583989
eval metrics, batch: 6144 acc, f1
0.87091064453125, 0.8562300319488818
eval metrics, batch: 7168 acc, f1
0.88421630859375, 0.8737353567625133
Epoch loss - train: tensor(0.0320, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.6279, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.86383056640625, 0.8472127105875907
train metrics acc, f1 
0.9958076477050781, 0.9958047510526296
Epoch 9/10
----------
eval metrics, batch: 1024 acc, f1
0.869476318359375, 0.8548053094340904
eval metrics, batch: 2048 acc, f1
0.851043701171875, 0.8280187449349917
eval metrics, batch: 3072 acc, f1
0.85986328125, 0.8436286862357829
eval metrics, batch: 4096 acc, f1
0.8817138671875, 0.8731260229132569
train metrics, batch: 4096  acc, f1 
0.992218017578125, 0.9922586520947176
eval metrics, batch: 5120 acc, f1
0.87994384765625, 0.8685687558465855
eval metrics, batch: 6144 acc, f1
0.8387451171875, 0.8120108154262132
eval metrics, batch: 7168 acc, f1
0.88336181640625, 0.873326262760175
Epoch loss - train: tensor(0.0264, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.7254, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.84283447265625, 0.8194502874772122
train metrics acc, f1 
0.9938087463378906, 0.9938018659324125
Epoch 10/10
----------
eval metrics, batch: 1024 acc, f1
0.8656005859375, 0.85
eval metrics, batch: 2048 acc, f1
0.875244140625, 0.8640053226879574
eval metrics, batch: 3072 acc, f1
0.85223388671875, 0.8317815453029461
eval metrics, batch: 4096 acc, f1
0.8212890625, 0.787162898887839
train metrics, batch: 4096  acc, f1 
0.9953079223632812, 0.9952900271110635
eval metrics, batch: 5120 acc, f1
0.845611572265625, 0.8205582946121378
eval metrics, batch: 6144 acc, f1
0.8370361328125, 0.8098155139254932
eval metrics, batch: 7168 acc, f1
0.8812255859375, 0.8710489695845206
Epoch loss - train: tensor(0.0233, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.6737, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.875823974609375, 0.8643711876270791
train metrics acc, f1 
0.99609375, 0.9960994042449453
Training time 231m 43s
train_acc
0.5077323913574219	0.9488372802734375	0.9602203369140625	0.9652938842773438	0.9723167419433594	0.9711265563964844	0.9714622497558594	0.9800949096679688	0.9848251342773438	0.9831352233886719	0.9893569946289062	0.9873008728027344	0.9820480346679688	0.9934654235839844	0.9946746826171875	0.9925003051757812	0.9958076477050781	0.992218017578125	0.9938087463378906	0.9953079223632812	0.99609375
train_f1
0.6009481135138646	0.9484657296333582	0.9604319549528355	0.9649769798130668	0.97230881943305	0.9713361685368154	0.9718071535437967	0.9801714572344921	0.9848107645783059	0.9831354163885149	0.9893496816356446	0.9873433121818244	0.9822988211752138	0.9934435390344817	0.9946656069209547	0.9924635058881256	0.9958047510526296	0.9922586520947176	0.9938018659324125	0.9952900271110635	0.9960994042449453
train_loss
tensor(0.1923, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.1217, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.0939, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.0750, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.0592, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.0476, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.0389, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.0320, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.0264, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.0233, device='cuda:0', grad_fn=<DivBackward0>)
valid_acc
0.541595458984375	0.828155517578125	0.86712646484375	0.860504150390625	0.871826171875	0.876129150390625	0.855560302734375	0.88165283203125	0.87591552734375	0.85552978515625	0.83685302734375	0.87921142578125	0.87213134765625	0.872100830078125	0.871490478515625	0.8612060546875	0.85986328125	0.862457275390625	0.898773193359375	0.844085693359375	0.883270263671875	0.873016357421875	0.83740234375	0.83245849609375	0.87957763671875	0.8609619140625	0.88543701171875	0.884521484375	0.899444580078125	0.855255126953125	0.881256103515625	0.818206787109375	0.88702392578125	0.86260986328125	0.866119384765625	0.846282958984375	0.870941162109375	0.832183837890625	0.861907958984375	0.8310546875	0.87554931640625	0.876953125	0.86309814453125	0.87261962890625	0.880462646484375	0.88677978515625	0.883056640625	0.8095703125	0.889312744140625	0.868438720703125	0.85125732421875	0.869720458984375	0.850555419921875	0.8668212890625	0.81646728515625	0.847015380859375	0.86566162109375	0.85028076171875	0.85858154296875	0.878662109375	0.85333251953125	0.891510009765625	0.87091064453125	0.88421630859375	0.86383056640625	0.869476318359375	0.851043701171875	0.85986328125	0.8817138671875	0.87994384765625	0.8387451171875	0.88336181640625	0.84283447265625	0.8656005859375	0.875244140625	0.85223388671875	0.8212890625	0.845611572265625	0.8370361328125	0.8812255859375	0.875823974609375
valid_f1
0.6343031040779062	0.8063151377566815	0.8573674900085173	0.8500672417751829	0.8609547771965834	0.8644424406372107	0.8384586504658862	0.8723334211219383	0.8668979965955218	0.8380320240864924	0.8100213219616205	0.8711923978130696	0.8591975267155051	0.8583978105889111	0.8590554607222948	0.8448417030567685	0.843586075345732	0.8468413361878547	0.8951477793583057	0.8221905126509589	0.8753543845928243	0.8604393761529432	0.8101752885848653	0.8046541417591802	0.8716497527972937	0.8435761862253657	0.8785506308637981	0.8761699064074874	0.8934863423306934	0.8349514563106796	0.8708124439722434	0.7805812368779698	0.8771976381609501	0.8453771122406925	0.8499401402428596	0.8235788588841021	0.8578248445116826	0.8025989876871163	0.844688518963446	0.8018327605956472	0.8629059369326968	0.8643611653098298	0.8462961693962859	0.8591767881241565	0.8701475219625394	0.8829061987122838	0.8727671160103593	0.7690428603153453	0.8839471410744568	0.8535118420605525	0.833810692853246	0.8558792748387968	0.8283741632495707	0.8517159361196058	0.7790108032630264	0.824812161453783	0.8495351380913317	0.8285454672537919	0.8402509652509652	0.8671034160037435	0.8321810182275299	0.8838880360583989	0.8562300319488818	0.8737353567625133	0.8472127105875907	0.8548053094340904	0.8280187449349917	0.8436286862357829	0.8731260229132569	0.8685687558465855	0.8120108154262132	0.873326262760175	0.8194502874772122	0.85	0.8640053226879574	0.8317815453029461	0.787162898887839	0.8205582946121378	0.8098155139254932	0.8710489695845206	0.8643711876270791
valid_loss
tensor(0.3392, device='cuda:0')	tensor(0.3947, device='cuda:0')	tensor(0.3494, device='cuda:0')	tensor(0.3745, device='cuda:0')	tensor(0.3923, device='cuda:0')	tensor(0.3920, device='cuda:0')	tensor(0.5696, device='cuda:0')	tensor(0.6279, device='cuda:0')	tensor(0.7254, device='cuda:0')	tensor(0.6737, device='cuda:0')
Best model metrics: train, valid, test: acc, f1
0.9820480346679688, 0.9822988211752138
0.889312744140625, 0.8839471410744568
0.855499267578125, 0.8407600470825627
Model saved, path ./models/densenet_1-1558897740.pth
experiment validation
train set
Evaluation results
[[126862.   4210.]
 [   496. 130576.]]
#############################
Accuracy
0.9820480346679688
------------------------
Recall
0.9962158203125
------------------------
Specificity
0.9678802490234375
------------------------
Precision
0.9687653020343359
------------------------
Fall_out
0.0321197509765625
------------------------
F1
0.9822988211752138
------------------------
#############################
valid set
Evaluation results
[[15328.  1071.]
 [ 2556. 13813.]]
#############################
Accuracy
0.889312744140625
------------------------
Recall
0.8438511821125297
------------------------
Specificity
0.9346911397036405
------------------------
Precision
0.9280435366836872
------------------------
Fall_out
0.06530886029635953
------------------------
F1
0.8839471410744568
------------------------
#############################
test set
Evaluation results
[[15533.   858.]
 [ 3877. 12500.]]
#############################
Accuracy
0.855499267578125
------------------------
Recall
0.7632655553520181
------------------------
Specificity
0.9476542004758709
------------------------
Precision
0.9357688276688126
------------------------
Fall_out
0.05234579952412909
------------------------
F1
0.8407600470825627
------------------------
#############################
AUC: 0.9353712008639754
Experiment end
########################################
