----------------------------------------
Starting experiment densenet_hue-1560278942
Experiment parameters Experiment[name: densenet_hue-1560278942, model: DenseNet(
  (features): Sequential(
    (conv0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (norm0): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu0): ReLU(inplace)
    (pool0): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (denseblock1): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(96, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (transition1): _Transition(
      (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock2): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer7): _DenseLayer(
        (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer8): _DenseLayer(
        (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer9): _DenseLayer(
        (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer10): _DenseLayer(
        (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer11): _DenseLayer(
        (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer12): _DenseLayer(
        (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (transition2): _Transition(
      (norm): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock3): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer7): _DenseLayer(
        (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer8): _DenseLayer(
        (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer9): _DenseLayer(
        (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer10): _DenseLayer(
        (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer11): _DenseLayer(
        (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer12): _DenseLayer(
        (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer13): _DenseLayer(
        (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer14): _DenseLayer(
        (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer15): _DenseLayer(
        (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer16): _DenseLayer(
        (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer17): _DenseLayer(
        (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer18): _DenseLayer(
        (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer19): _DenseLayer(
        (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer20): _DenseLayer(
        (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer21): _DenseLayer(
        (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer22): _DenseLayer(
        (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer23): _DenseLayer(
        (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer24): _DenseLayer(
        (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (transition3): _Transition(
      (norm): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    )
    (denseblock4): _DenseBlock(
      (denselayer1): _DenseLayer(
        (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer2): _DenseLayer(
        (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer3): _DenseLayer(
        (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer4): _DenseLayer(
        (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer5): _DenseLayer(
        (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer6): _DenseLayer(
        (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer7): _DenseLayer(
        (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer8): _DenseLayer(
        (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer9): _DenseLayer(
        (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer10): _DenseLayer(
        (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer11): _DenseLayer(
        (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer12): _DenseLayer(
        (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer13): _DenseLayer(
        (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer14): _DenseLayer(
        (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer15): _DenseLayer(
        (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (denselayer16): _DenseLayer(
        (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace)
        (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace)
        (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (norm5): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (classifier): Linear(in_features=1024, out_features=1, bias=True)
), params: Params(lr: 0.0001, weight_decay: 0, batch_size: 32, num_epochs: 20), optimizer: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.0001
    weight_decay: 0
), criterion: BCEWithLogitsLoss()]
start metrics
eval metrics acc, f1
0.541595458984375, 0.6343031040779062
train metrics acc, f1
0.5071487426757812, 0.600735498624803
Epoch 1/20
----------
eval metrics, batch: 1024 acc, f1
0.87445068359375, 0.8623527837259101
eval metrics, batch: 2048 acc, f1
0.853546142578125, 0.8514563407311109
eval metrics, batch: 3072 acc, f1
0.890472412109375, 0.8844903607865856
eval metrics, batch: 4096 acc, f1
0.8533935546875, 0.8339554818194387
train metrics, batch: 4096  acc, f1 
0.9495658874511719, 0.9483177164569432
eval metrics, batch: 5120 acc, f1
0.885498046875, 0.877753160432686
eval metrics, batch: 6144 acc, f1
0.87994384765625, 0.8690325587589054
eval metrics, batch: 7168 acc, f1
0.874114990234375, 0.8599083036169128
Epoch loss - train: tensor(0.1795, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4635, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.856170654296875, 0.8382469025637506
train metrics acc, f1 
0.9577369689941406, 0.9573029031251084
Epoch 2/20
----------
eval metrics, batch: 1024 acc, f1
0.88922119140625, 0.8799682560677203
eval metrics, batch: 2048 acc, f1
0.874481201171875, 0.8632146064052679
eval metrics, batch: 3072 acc, f1
0.894744873046875, 0.8887311675323418
eval metrics, batch: 4096 acc, f1
0.858551025390625, 0.8383383907083813
train metrics, batch: 4096  acc, f1 
0.9631271362304688, 0.9622277278020492
eval metrics, batch: 5120 acc, f1
0.88055419921875, 0.8698543592471902
eval metrics, batch: 6144 acc, f1
0.90631103515625, 0.9040445083453148
eval metrics, batch: 7168 acc, f1
0.86334228515625, 0.862181460051705
Epoch loss - train: tensor(0.1271, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.3043, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.891571044921875, 0.8843160876501807
train metrics acc, f1 
0.9645805358886719, 0.9646109105877599
Epoch 3/20
----------
eval metrics, batch: 1024 acc, f1
0.86309814453125, 0.8489969031910597
eval metrics, batch: 2048 acc, f1
0.856781005859375, 0.8367708949253939
eval metrics, batch: 3072 acc, f1
0.85662841796875, 0.8368410085434466
eval metrics, batch: 4096 acc, f1
0.87738037109375, 0.8651768337695457
train metrics, batch: 4096  acc, f1 
0.9724502563476562, 0.9723667697205302
eval metrics, batch: 5120 acc, f1
0.798065185546875, 0.7514555083949968
eval metrics, batch: 6144 acc, f1
0.905609130859375, 0.9037138498894873
eval metrics, batch: 7168 acc, f1
0.892669677734375, 0.8851591836734694
Epoch loss - train: tensor(0.1038, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.3707, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.87451171875, 0.8603260869565217
train metrics acc, f1 
0.9712867736816406, 0.9708530337705185
Epoch 4/20
----------
eval metrics, batch: 1024 acc, f1
0.84381103515625, 0.8193689560245642
eval metrics, batch: 2048 acc, f1
0.8817138671875, 0.8708344441482272
eval metrics, batch: 3072 acc, f1
0.825286865234375, 0.791946796525784
eval metrics, batch: 4096 acc, f1
0.8671875, 0.8519224225927187
train metrics, batch: 4096  acc, f1 
0.9769859313964844, 0.9769044365072985
eval metrics, batch: 5120 acc, f1
0.8529052734375, 0.8336783988957902
eval metrics, batch: 6144 acc, f1
0.895660400390625, 0.88845388404946
eval metrics, batch: 7168 acc, f1
0.8997802734375, 0.8947840574138152
Epoch loss - train: tensor(0.0886, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4150, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.857269287109375, 0.8388075133551611
train metrics acc, f1 
0.9748611450195312, 0.9746022692236542
Epoch 5/20
----------
eval metrics, batch: 1024 acc, f1
0.85906982421875, 0.8406267255659856
eval metrics, batch: 2048 acc, f1
0.8961181640625, 0.8955315492266143
eval metrics, batch: 3072 acc, f1
0.86260986328125, 0.8441135734072022
eval metrics, batch: 4096 acc, f1
0.898834228515625, 0.8943426294820717
train metrics, batch: 4096  acc, f1 
0.9749870300292969, 0.9753077586434142
eval metrics, batch: 5120 acc, f1
0.870819091796875, 0.8569110637866342
eval metrics, batch: 6144 acc, f1
0.880157470703125, 0.8755979345519055
eval metrics, batch: 7168 acc, f1
0.862091064453125, 0.8444995010495165
Epoch loss - train: tensor(0.0762, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.3280, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.88580322265625, 0.878962349592444
train metrics acc, f1 
0.9753074645996094, 0.9755841804499934
Epoch 6/20
----------
eval metrics, batch: 1024 acc, f1
0.8594970703125, 0.8416563488788004
eval metrics, batch: 2048 acc, f1
0.892822265625, 0.8890293225480284
eval metrics, batch: 3072 acc, f1
0.881561279296875, 0.8713068276022151
eval metrics, batch: 4096 acc, f1
0.892791748046875, 0.8834632609056228
train metrics, batch: 4096  acc, f1 
0.9839439392089844, 0.9838690514971621
eval metrics, batch: 5120 acc, f1
0.890960693359375, 0.8830939371135033
eval metrics, batch: 6144 acc, f1
0.859771728515625, 0.8410639548960603
eval metrics, batch: 7168 acc, f1
0.889404296875, 0.8814213729467967
Epoch loss - train: tensor(0.0668, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.3649, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.875946044921875, 0.8652322381725955
train metrics acc, f1 
0.9831390380859375, 0.9832730355277698
Epoch 7/20
----------
eval metrics, batch: 1024 acc, f1
0.875701904296875, 0.8623195754318359
eval metrics, batch: 2048 acc, f1
0.877838134765625, 0.8670497193530173
eval metrics, batch: 3072 acc, f1
0.860626220703125, 0.8417478083093662
eval metrics, batch: 4096 acc, f1
0.871673583984375, 0.8585651340351821
train metrics, batch: 4096  acc, f1 
0.9859886169433594, 0.9859897392863273
eval metrics, batch: 5120 acc, f1
0.88555908203125, 0.8760248611478445
eval metrics, batch: 6144 acc, f1
0.899993896484375, 0.893814199151032
eval metrics, batch: 7168 acc, f1
0.8778076171875, 0.8671003717472119
Epoch loss - train: tensor(0.0587, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4509, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.855804443359375, 0.8366126076282029
train metrics acc, f1 
0.9775314331054688, 0.9773110732748326
Epoch 8/20
----------
eval metrics, batch: 1024 acc, f1
0.873779296875, 0.8608438193930422
eval metrics, batch: 2048 acc, f1
0.8162841796875, 0.7775807285893741
eval metrics, batch: 3072 acc, f1
0.801910400390625, 0.7569004906183289
eval metrics, batch: 4096 acc, f1
0.89031982421875, 0.8824414496925291
train metrics, batch: 4096  acc, f1 
0.988037109375, 0.9881035476920276
eval metrics, batch: 5120 acc, f1
0.8614501953125, 0.8444353070175439
eval metrics, batch: 6144 acc, f1
0.882080078125, 0.8727105020424298
eval metrics, batch: 7168 acc, f1
0.8577880859375, 0.8379468632633189
Epoch loss - train: tensor(0.0523, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.5281, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.86297607421875, 0.8457786631860961
train metrics acc, f1 
0.9882736206054688, 0.9882316909766089
Epoch 9/20
----------
eval metrics, batch: 1024 acc, f1
0.863067626953125, 0.8460984393757504
eval metrics, batch: 2048 acc, f1
0.883819580078125, 0.8724836710768715
eval metrics, batch: 3072 acc, f1
0.8682861328125, 0.8527364542104545
eval metrics, batch: 4096 acc, f1
0.80035400390625, 0.7538936122187947
train metrics, batch: 4096  acc, f1 
0.9771842956542969, 0.9767075968050347
eval metrics, batch: 5120 acc, f1
0.875335693359375, 0.8630986293106337
eval metrics, batch: 6144 acc, f1
0.87493896484375, 0.8672153457326162
eval metrics, batch: 7168 acc, f1
0.867462158203125, 0.8524044180118946
Epoch loss - train: tensor(0.0467, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4080, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.89263916015625, 0.8865234500999936
train metrics acc, f1 
0.9835243225097656, 0.9836816273788969
Epoch 10/20
----------
eval metrics, batch: 1024 acc, f1
0.854827880859375, 0.8349925422317805
eval metrics, batch: 2048 acc, f1
0.84375, 0.8195912614517266
eval metrics, batch: 3072 acc, f1
0.891998291015625, 0.8845162342959699
eval metrics, batch: 4096 acc, f1
0.875335693359375, 0.8627490508349293
train metrics, batch: 4096  acc, f1 
0.9921760559082031, 0.9921788902489713
eval metrics, batch: 5120 acc, f1
0.878326416015625, 0.8677568078543235
eval metrics, batch: 6144 acc, f1
0.857940673828125, 0.8403580369697178
eval metrics, batch: 7168 acc, f1
0.83477783203125, 0.8054197814836113
Epoch loss - train: tensor(0.0416, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.4307, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.894989013671875, 0.8885144986230358
train metrics acc, f1 
0.9890480041503906, 0.9890990276074435
Epoch 11/20
----------
eval metrics, batch: 1024 acc, f1
0.858154296875, 0.8387454898695531
eval metrics, batch: 2048 acc, f1
0.8416748046875, 0.8168079096045198
eval metrics, batch: 3072 acc, f1
0.8841552734375, 0.8735172597627615
eval metrics, batch: 4096 acc, f1
0.884552001953125, 0.8776084635543046
train metrics, batch: 4096  acc, f1 
0.9875907897949219, 0.9877093621185388
eval metrics, batch: 5120 acc, f1
0.868927001953125, 0.8549623476176004
eval metrics, batch: 6144 acc, f1
0.83349609375, 0.8050871677622178
eval metrics, batch: 7168 acc, f1
0.825714111328125, 0.7927116983049617
Epoch loss - train: tensor(0.0372, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.8690, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.80908203125, 0.7678836449985159
train metrics acc, f1 
0.9875030517578125, 0.9873681288173237
Epoch 12/20
----------
eval metrics, batch: 1024 acc, f1
0.844940185546875, 0.8219254897837591
eval metrics, batch: 2048 acc, f1
0.879974365234375, 0.8702365633970108
eval metrics, batch: 3072 acc, f1
0.866302490234375, 0.8517879495246794
eval metrics, batch: 4096 acc, f1
0.836090087890625, 0.8079110189192089
train metrics, batch: 4096  acc, f1 
0.992156982421875, 0.9921129959107264
eval metrics, batch: 5120 acc, f1
0.885650634765625, 0.875643025455511
eval metrics, batch: 6144 acc, f1
0.859039306640625, 0.8402338210369755
eval metrics, batch: 7168 acc, f1
0.87078857421875, 0.8571428571428571
Epoch loss - train: tensor(0.0339, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.7306, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.859039306640625, 0.8400567886699678
train metrics acc, f1 
0.9942054748535156, 0.9941871366960435
Epoch 13/20
----------
eval metrics, batch: 1024 acc, f1
0.854217529296875, 0.8335017949879753
eval metrics, batch: 2048 acc, f1
0.85791015625, 0.8391709844559585
eval metrics, batch: 3072 acc, f1
0.876434326171875, 0.8637388524314319
eval metrics, batch: 4096 acc, f1
0.867919921875, 0.851536772777168
train metrics, batch: 4096  acc, f1 
0.9938774108886719, 0.9938588335227337
eval metrics, batch: 5120 acc, f1
0.85382080078125, 0.8366525712726777
eval metrics, batch: 6144 acc, f1
0.89947509765625, 0.8970753655793026
eval metrics, batch: 7168 acc, f1
0.862030029296875, 0.8465116279069768
Epoch loss - train: tensor(0.0311, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.7101, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.851776123046875, 0.8312311060148024
train metrics acc, f1 
0.9927177429199219, 0.9927105408862669
Epoch 14/20
----------
eval metrics, batch: 1024 acc, f1
0.8638916015625, 0.8475630596759861
eval metrics, batch: 2048 acc, f1
0.8148193359375, 0.7757907182973692
eval metrics, batch: 3072 acc, f1
0.871185302734375, 0.8576535257815399
eval metrics, batch: 4096 acc, f1
0.80078125, 0.75840118430792
train metrics, batch: 4096  acc, f1 
0.9881820678710938, 0.9881130526202699
eval metrics, batch: 5120 acc, f1
0.8912353515625, 0.8869432813094785
eval metrics, batch: 6144 acc, f1
0.84783935546875, 0.824473702738858
eval metrics, batch: 7168 acc, f1
0.85357666015625, 0.8326123360312587
Epoch loss - train: tensor(0.0285, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.7364, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.846588134765625, 0.8243229075659619
train metrics acc, f1 
0.9944801330566406, 0.9944783426632934
Epoch 15/20
----------
eval metrics, batch: 1024 acc, f1
0.85516357421875, 0.8349332220367279
eval metrics, batch: 2048 acc, f1
0.85894775390625, 0.8409278634361234
eval metrics, batch: 3072 acc, f1
0.8616943359375, 0.8470881975841825
eval metrics, batch: 4096 acc, f1
0.864105224609375, 0.8499713621508709
train metrics, batch: 4096  acc, f1 
0.9938278198242188, 0.993846832525841
eval metrics, batch: 5120 acc, f1
0.86651611328125, 0.851909534127844
eval metrics, batch: 6144 acc, f1
0.84967041015625, 0.8274847657070813
eval metrics, batch: 7168 acc, f1
0.869842529296875, 0.8578191152448578
Epoch loss - train: tensor(0.0269, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.6110, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.862884521484375, 0.8464614017701534
train metrics acc, f1 
0.993499755859375, 0.9935067409479243
Epoch 16/20
----------
eval metrics, batch: 1024 acc, f1
0.85894775390625, 0.8417665183156453
eval metrics, batch: 2048 acc, f1
0.88720703125, 0.8806895215959714
eval metrics, batch: 3072 acc, f1
0.85906982421875, 0.8411966987620357
eval metrics, batch: 4096 acc, f1
0.8350830078125, 0.8087350463651164
train metrics, batch: 4096  acc, f1 
0.9908599853515625, 0.9908546127714798
eval metrics, batch: 5120 acc, f1
0.82513427734375, 0.7921050722008562
eval metrics, batch: 6144 acc, f1
0.853179931640625, 0.8332004299136706
eval metrics, batch: 7168 acc, f1
0.865203857421875, 0.8538433539591674
Epoch loss - train: tensor(0.0247, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.6693, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.867919921875, 0.8542171921315009
train metrics acc, f1 
0.9948997497558594, 0.9949100599600267
Epoch 17/20
----------
eval metrics, batch: 1024 acc, f1
0.853363037109375, 0.8328637517826707
eval metrics, batch: 2048 acc, f1
0.83843994140625, 0.8138406357690414
eval metrics, batch: 3072 acc, f1
0.869720458984375, 0.8576857685768576
eval metrics, batch: 4096 acc, f1
0.8719482421875, 0.8592324208266238
train metrics, batch: 4096  acc, f1 
0.9920578002929688, 0.9920850345566935
eval metrics, batch: 5120 acc, f1
0.867401123046875, 0.8518834157150162
eval metrics, batch: 6144 acc, f1
0.89166259765625, 0.8877931601239016
eval metrics, batch: 7168 acc, f1
0.828948974609375, 0.7982143500018001
Epoch loss - train: tensor(0.0228, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.8641, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.848846435546875, 0.8264236902050114
train metrics acc, f1 
0.9913406372070312, 0.9912932079350711
Epoch 18/20
----------
eval metrics, batch: 1024 acc, f1
0.845245361328125, 0.8212737461671307
eval metrics, batch: 2048 acc, f1
0.880615234375, 0.8704120842718961
eval metrics, batch: 3072 acc, f1
0.844512939453125, 0.8214223125722898
eval metrics, batch: 4096 acc, f1
0.8629150390625, 0.8473770046208209
train metrics, batch: 4096  acc, f1 
0.9953689575195312, 0.9953752028586884
eval metrics, batch: 5120 acc, f1
0.85516357421875, 0.8363109608884597
eval metrics, batch: 6144 acc, f1
0.863372802734375, 0.8458917076864824
eval metrics, batch: 7168 acc, f1
0.8719482421875, 0.8587110243114014
Epoch loss - train: tensor(0.0213, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(1.0077, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.83319091796875, 0.8052170194569168
train metrics acc, f1 
0.9971199035644531, 0.9971147415687398
Epoch 19/20
----------
eval metrics, batch: 1024 acc, f1
0.869140625, 0.857038074281523
eval metrics, batch: 2048 acc, f1
0.845916748046875, 0.8232452301767897
eval metrics, batch: 3072 acc, f1
0.82818603515625, 0.7965305384893386
eval metrics, batch: 4096 acc, f1
0.838623046875, 0.8140646976090014
train metrics, batch: 4096  acc, f1 
0.9937248229980469, 0.9937206310670347
eval metrics, batch: 5120 acc, f1
0.84332275390625, 0.8193271396396397
eval metrics, batch: 6144 acc, f1
0.858856201171875, 0.8397269293412344
eval metrics, batch: 7168 acc, f1
0.801025390625, 0.7562252299409258
Epoch loss - train: tensor(0.0201, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(0.7710, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.86865234375, 0.8535157579470424
train metrics acc, f1 
0.9967079162597656, 0.9967076022722504
Epoch 20/20
----------
eval metrics, batch: 1024 acc, f1
0.87127685546875, 0.8579606681034483
eval metrics, batch: 2048 acc, f1
0.87744140625, 0.8660082743894302
eval metrics, batch: 3072 acc, f1
0.880950927734375, 0.8699796686997967
eval metrics, batch: 4096 acc, f1
0.850677490234375, 0.8303574524147973
train metrics, batch: 4096  acc, f1 
0.99615478515625, 0.9961521430425555
eval metrics, batch: 5120 acc, f1
0.860565185546875, 0.8431567745700457
eval metrics, batch: 6144 acc, f1
0.829681396484375, 0.7980459562149448
eval metrics, batch: 7168 acc, f1
0.870208740234375, 0.8592234616530403
Epoch loss - train: tensor(0.0189, device='cuda:0', grad_fn=<DivBackward0>)
Epoch loss - valid: tensor(1.0623, device='cuda:0')
epoch end metrics
eval metrics acc, f1 
0.8436279296875, 0.8201221652741698
train metrics acc, f1 
0.996978759765625, 0.996977168461791
Training time 642m 20s
train_acc
0.5071487426757812	0.9495658874511719	0.9577369689941406	0.9631271362304688	0.9645805358886719	0.9724502563476562	0.9712867736816406	0.9769859313964844	0.9748611450195312	0.9749870300292969	0.9753074645996094	0.9839439392089844	0.9831390380859375	0.9859886169433594	0.9775314331054688	0.988037109375	0.9882736206054688	0.9771842956542969	0.9835243225097656	0.9921760559082031	0.9890480041503906	0.9875907897949219	0.9875030517578125	0.992156982421875	0.9942054748535156	0.9938774108886719	0.9927177429199219	0.9881820678710938	0.9944801330566406	0.9938278198242188	0.993499755859375	0.9908599853515625	0.9948997497558594	0.9920578002929688	0.9913406372070312	0.9953689575195312	0.9971199035644531	0.9937248229980469	0.9967079162597656	0.99615478515625	0.996978759765625
train_f1
0.600735498624803	0.9483177164569432	0.9573029031251084	0.9622277278020492	0.9646109105877599	0.9723667697205302	0.9708530337705185	0.9769044365072985	0.9746022692236542	0.9753077586434142	0.9755841804499934	0.9838690514971621	0.9832730355277698	0.9859897392863273	0.9773110732748326	0.9881035476920276	0.9882316909766089	0.9767075968050347	0.9836816273788969	0.9921788902489713	0.9890990276074435	0.9877093621185388	0.9873681288173237	0.9921129959107264	0.9941871366960435	0.9938588335227337	0.9927105408862669	0.9881130526202699	0.9944783426632934	0.993846832525841	0.9935067409479243	0.9908546127714798	0.9949100599600267	0.9920850345566935	0.9912932079350711	0.9953752028586884	0.9971147415687398	0.9937206310670347	0.9967076022722504	0.9961521430425555	0.996977168461791
train_loss
tensor(0.1795, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.1271, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.1038, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.0886, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.0762, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.0668, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.0587, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.0523, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.0467, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.0416, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.0372, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.0339, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.0311, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.0285, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.0269, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.0247, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.0228, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.0213, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.0201, device='cuda:0', grad_fn=<DivBackward0>)	tensor(0.0189, device='cuda:0', grad_fn=<DivBackward0>)
valid_acc
0.541595458984375	0.87445068359375	0.853546142578125	0.890472412109375	0.8533935546875	0.885498046875	0.87994384765625	0.874114990234375	0.856170654296875	0.88922119140625	0.874481201171875	0.894744873046875	0.858551025390625	0.88055419921875	0.90631103515625	0.86334228515625	0.891571044921875	0.86309814453125	0.856781005859375	0.85662841796875	0.87738037109375	0.798065185546875	0.905609130859375	0.892669677734375	0.87451171875	0.84381103515625	0.8817138671875	0.825286865234375	0.8671875	0.8529052734375	0.895660400390625	0.8997802734375	0.857269287109375	0.85906982421875	0.8961181640625	0.86260986328125	0.898834228515625	0.870819091796875	0.880157470703125	0.862091064453125	0.88580322265625	0.8594970703125	0.892822265625	0.881561279296875	0.892791748046875	0.890960693359375	0.859771728515625	0.889404296875	0.875946044921875	0.875701904296875	0.877838134765625	0.860626220703125	0.871673583984375	0.88555908203125	0.899993896484375	0.8778076171875	0.855804443359375	0.873779296875	0.8162841796875	0.801910400390625	0.89031982421875	0.8614501953125	0.882080078125	0.8577880859375	0.86297607421875	0.863067626953125	0.883819580078125	0.8682861328125	0.80035400390625	0.875335693359375	0.87493896484375	0.867462158203125	0.89263916015625	0.854827880859375	0.84375	0.891998291015625	0.875335693359375	0.878326416015625	0.857940673828125	0.83477783203125	0.894989013671875	0.858154296875	0.8416748046875	0.8841552734375	0.884552001953125	0.868927001953125	0.83349609375	0.825714111328125	0.80908203125	0.844940185546875	0.879974365234375	0.866302490234375	0.836090087890625	0.885650634765625	0.859039306640625	0.87078857421875	0.859039306640625	0.854217529296875	0.85791015625	0.876434326171875	0.867919921875	0.85382080078125	0.89947509765625	0.862030029296875	0.851776123046875	0.8638916015625	0.8148193359375	0.871185302734375	0.80078125	0.8912353515625	0.84783935546875	0.85357666015625	0.846588134765625	0.85516357421875	0.85894775390625	0.8616943359375	0.864105224609375	0.86651611328125	0.84967041015625	0.869842529296875	0.862884521484375	0.85894775390625	0.88720703125	0.85906982421875	0.8350830078125	0.82513427734375	0.853179931640625	0.865203857421875	0.867919921875	0.853363037109375	0.83843994140625	0.869720458984375	0.8719482421875	0.867401123046875	0.89166259765625	0.828948974609375	0.848846435546875	0.845245361328125	0.880615234375	0.844512939453125	0.8629150390625	0.85516357421875	0.863372802734375	0.8719482421875	0.83319091796875	0.869140625	0.845916748046875	0.82818603515625	0.838623046875	0.84332275390625	0.858856201171875	0.801025390625	0.86865234375	0.87127685546875	0.87744140625	0.880950927734375	0.850677490234375	0.860565185546875	0.829681396484375	0.870208740234375	0.8436279296875
valid_f1
0.6343031040779062	0.8623527837259101	0.8514563407311109	0.8844903607865856	0.8339554818194387	0.877753160432686	0.8690325587589054	0.8599083036169128	0.8382469025637506	0.8799682560677203	0.8632146064052679	0.8887311675323418	0.8383383907083813	0.8698543592471902	0.9040445083453148	0.862181460051705	0.8843160876501807	0.8489969031910597	0.8367708949253939	0.8368410085434466	0.8651768337695457	0.7514555083949968	0.9037138498894873	0.8851591836734694	0.8603260869565217	0.8193689560245642	0.8708344441482272	0.791946796525784	0.8519224225927187	0.8336783988957902	0.88845388404946	0.8947840574138152	0.8388075133551611	0.8406267255659856	0.8955315492266143	0.8441135734072022	0.8943426294820717	0.8569110637866342	0.8755979345519055	0.8444995010495165	0.878962349592444	0.8416563488788004	0.8890293225480284	0.8713068276022151	0.8834632609056228	0.8830939371135033	0.8410639548960603	0.8814213729467967	0.8652322381725955	0.8623195754318359	0.8670497193530173	0.8417478083093662	0.8585651340351821	0.8760248611478445	0.893814199151032	0.8671003717472119	0.8366126076282029	0.8608438193930422	0.7775807285893741	0.7569004906183289	0.8824414496925291	0.8444353070175439	0.8727105020424298	0.8379468632633189	0.8457786631860961	0.8460984393757504	0.8724836710768715	0.8527364542104545	0.7538936122187947	0.8630986293106337	0.8672153457326162	0.8524044180118946	0.8865234500999936	0.8349925422317805	0.8195912614517266	0.8845162342959699	0.8627490508349293	0.8677568078543235	0.8403580369697178	0.8054197814836113	0.8885144986230358	0.8387454898695531	0.8168079096045198	0.8735172597627615	0.8776084635543046	0.8549623476176004	0.8050871677622178	0.7927116983049617	0.7678836449985159	0.8219254897837591	0.8702365633970108	0.8517879495246794	0.8079110189192089	0.875643025455511	0.8402338210369755	0.8571428571428571	0.8400567886699678	0.8335017949879753	0.8391709844559585	0.8637388524314319	0.851536772777168	0.8366525712726777	0.8970753655793026	0.8465116279069768	0.8312311060148024	0.8475630596759861	0.7757907182973692	0.8576535257815399	0.75840118430792	0.8869432813094785	0.824473702738858	0.8326123360312587	0.8243229075659619	0.8349332220367279	0.8409278634361234	0.8470881975841825	0.8499713621508709	0.851909534127844	0.8274847657070813	0.8578191152448578	0.8464614017701534	0.8417665183156453	0.8806895215959714	0.8411966987620357	0.8087350463651164	0.7921050722008562	0.8332004299136706	0.8538433539591674	0.8542171921315009	0.8328637517826707	0.8138406357690414	0.8576857685768576	0.8592324208266238	0.8518834157150162	0.8877931601239016	0.7982143500018001	0.8264236902050114	0.8212737461671307	0.8704120842718961	0.8214223125722898	0.8473770046208209	0.8363109608884597	0.8458917076864824	0.8587110243114014	0.8052170194569168	0.857038074281523	0.8232452301767897	0.7965305384893386	0.8140646976090014	0.8193271396396397	0.8397269293412344	0.7562252299409258	0.8535157579470424	0.8579606681034483	0.8660082743894302	0.8699796686997967	0.8303574524147973	0.8431567745700457	0.7980459562149448	0.8592234616530403	0.8201221652741698
valid_loss
tensor(0.4635, device='cuda:0')	tensor(0.3043, device='cuda:0')	tensor(0.3707, device='cuda:0')	tensor(0.4150, device='cuda:0')	tensor(0.3280, device='cuda:0')	tensor(0.3649, device='cuda:0')	tensor(0.4509, device='cuda:0')	tensor(0.5281, device='cuda:0')	tensor(0.4080, device='cuda:0')	tensor(0.4307, device='cuda:0')	tensor(0.8690, device='cuda:0')	tensor(0.7306, device='cuda:0')	tensor(0.7101, device='cuda:0')	tensor(0.7364, device='cuda:0')	tensor(0.6110, device='cuda:0')	tensor(0.6693, device='cuda:0')	tensor(0.8641, device='cuda:0')	tensor(1.0077, device='cuda:0')	tensor(0.7710, device='cuda:0')	tensor(1.0623, device='cuda:0')
Best model metrics: train, valid, test: acc, f1
0.9889678955078125, 0.9890194172545506
0.894989013671875, 0.8885144986230358
0.87042236328125, 0.8576696165191741
Model saved, path ./models/densenet_hue-1560278942.pth
experiment validation
train set
Evaluation results
[[129023.   2049.]
 [   828. 130244.]]
#############################
Accuracy
0.9890251159667969
------------------------
Recall
0.993682861328125
------------------------
Specificity
0.9843673706054688
------------------------
Precision
0.9845116521660254
------------------------
Fall_out
0.01563262939453125
------------------------
F1
0.9890759971902113
------------------------
#############################
valid set
Evaluation results
[[15615.   784.]
 [ 2657. 13712.]]
#############################
Accuracy
0.894989013671875
------------------------
Recall
0.8376809823446759
------------------------
Specificity
0.9521922068418806
------------------------
Precision
0.9459161147902869
------------------------
Fall_out
0.0478077931581194
------------------------
F1
0.8885144986230358
------------------------
#############################
test set
Evaluation results
[[15729.   662.]
 [ 3584. 12793.]]
#############################
Accuracy
0.87042236328125
------------------------
Recall
0.7811564999694693
------------------------
Specificity
0.9596119821853456
------------------------
Precision
0.9507989594946117
------------------------
Fall_out
0.040388017814654384
------------------------
F1
0.8576696165191741
------------------------
#############################
AUC: 0.9472862162330172
Experiment end
########################################
